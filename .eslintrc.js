module.exports = {
  env: {
    browser: true,
    es2021: true,
    node: true,
  },
  extends: [
    'airbnb-typescript',
    'airbnb/hooks',
    'eslint:recommended',
    'plugin:react/recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:storybook/recommended',
    'plugin:unicorn/recommended',
  ],
  parser: '@typescript-eslint/parser',
  parserOptions: {
    project: './tsconfig.eslint.json',
    ecmaFeatures: {
      jsx: true,
    },
    ecmaVersion: 12,
    sourceType: 'module',
  },
  plugins: [
    'react',
    'react-hooks',
    '@typescript-eslint',
    'prettier',
    'folders',
  ],
  rules: {
    indent: [0, 'tab', {SwitchCase: 1, VariableDeclarator: 1}],
    'react/jsx-filename-extension': 0,
    'import/extensions': 0,
    'react/prop-types': 0,
    'react/jsx-indent-props': [0, 'tab'],
    'react/jsx-props-no-spreading': 0,
    'no-tabs': 0,
    'no-console': 0,
    'no-unused-expressions': 'off',
    'no-use-before-define': [
      'error',
      {functions: true, classes: true, variables: true},
    ],
    '@typescript-eslint/indent': 'off',
    'react/require-default-props': 0,
    'react/jsx-indent': [0, 'tab'],
    'object-curly-newline': 0,
    'import/prefer-default-export': 0,
    'import/no-extraneous-dependencies': 0,
    '@typescript-eslint/no-shadow': 'off',
    // ['error', { devDependencies: true }],
    'implicit-arrow-linebreak': 'off',
    // Conflicts with max length if enabled
    '@typescript-eslint/no-unused-vars': 2,
    '@typescript-eslint/no-unsafe-assignment': 0,
    '@typescript-eslint/ban-ts-comment': 'off',
    '@typescript-eslint/no-unsafe-member-access': 0,
    '@typescript-eslint/no-unsafe-call': 0,
    '@typescript-eslint/no-unsafe-return': 0,
    '@typescript-eslint/lines-between-class-members': 0,
    '@typescript-eslint/no-explicit-any': 0,
    'import/no-cycle': 0,
    '@typescript-eslint/naming-convention': 0,
    'object-curly-spacing': 'off',
    '@typescript-eslint/object-curly-spacing': 0,
    'unicorn/filename-case': [
      'error',
      {
        case: 'kebabCase',
        ignore: ['App.css', 'App.test.tsx', 'App.tsx'],
      },
    ],
    'unicorn/prevent-abbreviations': 0,
    'unicorn/explicit-length-check': 0,
    'unicorn/prefer-optional-catch-binding': 0,
    'unicorn/no-empty-file': 0,
    'unicorn/prefer-export-from': 0,
    'unicorn/no-null': 0,
    'unicorn/prefer-module': 0,
    'unicorn/consistent-function-scoping': 0,
    'unicorn/prefer-spread': 0,
    'unicorn/consistent-destructuring': 0,
    'unicorn/no-new-array': 0,
    'folders/match-regex': [2, '^([a-z][a-z0-9]*)(-[a-z0-9]+)*$', '/src/'],
    'unicorn/no-static-only-class': 0,
    'unicorn/better-regex': 0,
    'unicorn/prefer-ternary': 0,
    'unicorn/prefer-set-has': 0,
    'unicorn/prefer-query-selector': 0,
    'unicorn/prefer-node-protocol': 0,
    'unicorn/prefer-negative-index': 0,
    'unicorn/catch-error-name': 0,
    'no-mixed-spaces-and-tabs': 0,
    // 'unicorn/better-regex': 'error',
    // 'unicorn/catch-error-name': 'error',
    // 'unicorn/consistent-function-scoping': 'error',
    'unicorn/custom-error-definition': 'off',
    'unicorn/error-message': 'error',
    'unicorn/escape-case': 'error',
    'unicorn/expiring-todo-comments': 'error',
    // 'unicorn/explicit-length-check': 'error',
    // 'unicorn/filename-case': 'error',
    'unicorn/import-index': 'error',
    'unicorn/import-style': 'error',
    'unicorn/new-for-builtins': 'error',
    'unicorn/no-abusive-eslint-disable': 'off',
    'unicorn/no-array-instanceof': 'error',
    'unicorn/no-console-spaces': 'error',
    'unicorn/no-fn-reference-in-iterator': 'error',
    'unicorn/no-for-loop': 'error',
    'unicorn/no-hex-escape': 'error',
    'unicorn/no-keyword-prefix': 'off',
    'no-nested-ternary': 'off',
    'unicorn/no-nested-ternary': 'error',
    'unicorn/no-new-buffer': 'error',
    // 'unicorn/no-null': 'error',
    'unicorn/no-object-as-default-parameter': 'error',
    'unicorn/no-process-exit': 'error',
    'unicorn/no-reduce': 'error',
    'unicorn/no-unreadable-array-destructuring': 'error',
    'unicorn/no-unsafe-regex': 'off',
    'unicorn/no-unused-properties': 'off',
    'unicorn/no-useless-undefined': 'error',
    'unicorn/no-zero-fractions': 'error',
    'unicorn/number-literal-case': 'error',
    'unicorn/prefer-add-event-listener': 'error',
    'unicorn/prefer-array-find': 'error',
    'unicorn/prefer-dataset': 'error',
    'unicorn/prefer-event-key': 'error',
    'unicorn/prefer-flat-map': 'error',
    'unicorn/prefer-includes': 'error',
    'unicorn/prefer-modern-dom-apis': 'error',
    // 'unicorn/prefer-negative-index': 'error',
    'unicorn/prefer-node-append': 'error',
    'unicorn/prefer-node-remove': 'error',
    'unicorn/prefer-number-properties': 'error',
    // 'unicorn/prefer-optional-catch-binding': 'error',
    // 'unicorn/prefer-query-selector': 'error',
    'unicorn/prefer-reflect-apply': 'error',
    'unicorn/prefer-replace-all': 'off',
    // 'unicorn/prefer-set-has': 'error',
    // 'unicorn/prefer-spread': 'error',
    'unicorn/prefer-starts-ends-with': 'error',
    'unicorn/prefer-string-slice': 'error',
    'unicorn/prefer-text-content': 'error',
    'unicorn/prefer-trim-start-end': 'error',
    'unicorn/prefer-type-error': 'error',
    // 'unicorn/prevent-abbreviations': 'error',
    'unicorn/string-content': 'off',
    'unicorn/throw-new-error': 'error',
    'react/react-in-jsx-scope': 'off',
    '@typescript-eslint/no-use-before-define': 'off',
    '@typescript-eslint/no-var-requires': 'off',
  },
};
