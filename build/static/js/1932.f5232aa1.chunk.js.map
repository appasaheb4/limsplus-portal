{"version":3,"file":"static/js/1932.f5232aa1.chunk.js","mappings":"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","sources":["features/account-receivable/receipt/screens/receipt.screen.tsx"],"sourcesContent":["import React, { useState} from 'react';\nimport {observer} from 'mobx-react';\n\nimport {\n  Header,\n  PageHeading,\n  PageHeadingLabDetails,\n  Toast,\n} from '@/library/components';\nimport {useForm} from 'react-hook-form';\nimport {RouterFlow} from '@/flows';\nimport {ReceiptList} from '../components';\nimport {ModalReceiptShare} from '../../components';\nimport '@/library/assets/css/accordion.css';\nimport {useStores} from '@/stores';\nimport 'react-accessible-accordion/dist/fancy-example.css';\n\nconst Receipt = observer(() => {\n  const {receiptStore, routerStore, loginStore} = useStores();\n  const [receiptPath, setReceiptPath] = useState<string>();\n\n  const {\n    control,\n    handleSubmit,\n    formState: {errors},\n    setValue,\n  } = useForm();\n  const [modalPaymentReceipt, setModalPaymentReceipt] = useState<any>();\n  const [receiptDetails, setReceiptDetails] = useState<any>();\n\n  return (\n    <>\n      <Header>\n        <PageHeading title={routerStore.selectedComponents?.title || ''} />\n        <PageHeadingLabDetails store={loginStore} />\n      </Header>\n      {/*  */}\n      <div className='p-3 rounded-lg shadow-xl overflow-auto'>\n        <ReceiptList\n          data={receiptStore.receiptList || []}\n          totalSize={receiptStore.receiptListCount}\n          isDelete={RouterFlow.checkPermission(\n            routerStore.userPermission,\n            'Delete',\n          )}\n          isEditModify={RouterFlow.checkPermission(\n            routerStore.userPermission,\n            'Edit/Modify',\n          )}\n          onPageSizeChange={(page, limit) => {\n            // bannerStore.fetchListBanner(page, limit);\n          }}\n          onFilter={(type, filter, page, limit) => {\n            // bannerStore.BannerService.filter({\n            //   input: {type, filter, page, limit},\n            // });\n          }}\n          onReport={item => {\n            receiptStore.receiptService\n              .generatePaymentReceipt({input: {headerId: item?.headerId}})\n              .then(async res => {\n                if (res.generatePaymentReceipt?.success) {\n                  console.log({\n                    labLogo:\n                      res.generatePaymentReceipt?.receiptData?.headerDetails\n                        ?.labLogo,\n                  });\n                  setModalPaymentReceipt({\n                    show: true,\n                    data: res.generatePaymentReceipt?.receiptData,\n                  });\n                } else\n                  Toast.error({\n                    message: `ðŸ˜” ${res.generatePaymentReceipt.message}`,\n                  });\n              });\n          }}\n        />\n      </div>\n      <ModalReceiptShare\n        {...modalPaymentReceipt}\n        onClose={() => {\n          setModalPaymentReceipt({show: false});\n        }}\n        onReceiptUpload={(file, type) => {\n          if (!receiptPath) {\n            receiptStore.receiptService\n              .paymentReceiptUpload({input: {file}})\n              .then(res => {\n                if (res.paymentReceiptUpload.success) {\n                  setReceiptPath(res.paymentReceiptUpload?.receiptPath);\n                  window.open(\n                    `${type} ${res.paymentReceiptUpload?.receiptPath}`,\n                    '_blank',\n                  );\n                }\n              });\n          } else {\n            window.open(type + receiptPath, '_blank');\n          }\n        }}\n      />\n    </>\n  );\n});\n\nexport default Receipt;\n"],"names":["Receipt","observer","_routerStore$selected","_useStores","useStores","receiptStore","routerStore","loginStore","_useState","useState","_useState2","_slicedToArray","receiptPath","setReceiptPath","_useForm","useForm","_useState3","control","handleSubmit","formState","errors","setValue","_useState4","modalPaymentReceipt","setModalPaymentReceipt","_useState5","_useState6","_jsxs","_Fragment","children","Header","_jsx","PageHeading","title","selectedComponents","PageHeadingLabDetails","store","className","ReceiptList","data","receiptList","totalSize","receiptListCount","isDelete","RouterFlow","userPermission","isEditModify","onPageSizeChange","page","limit","onFilter","type","filter","onReport","item","receiptService","generatePaymentReceipt","input","headerId","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","_res$generatePaymentR","_res$generatePaymentR2","_res$generatePaymentR3","_res$generatePaymentR4","_res$generatePaymentR5","wrap","_context","prev","next","success","console","log","labLogo","receiptData","headerDetails","show","Toast","error","message","concat","stop","_x","apply","arguments","ModalReceiptShare","_objectSpread","onClose","onReceiptUpload","file","window","open","paymentReceiptUpload","_res$paymentReceiptUp","_res$paymentReceiptUp2"],"sourceRoot":""}