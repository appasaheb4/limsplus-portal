{"version":3,"sources":["features/communication/scenes/InterfaceManager.tsx"],"names":["InterfaceManager","observer","useState","modalConfirm","setModalConfirm","hideAddInterfaceManager","setHideAddInterfaceManager","Header","PageHeading","title","RootStore","routerStore","selectedComponents","RouterFlow","checkPermission","toJS","userPermission","Buttons","ButtonCircleAddRemove","show","onClick","status","className","Grid","cols","List","direction","space","justify","fill","Form","Input","label","name","placeholder","value","Stores","interfaceManagerStore","encodeCharacter","interfaceType","onChange","updateEncodeCharacter","instrumentType","instrumentName","dataFlowFrom","communicationProtocol","InputWrapper","id","blockStart","blockEnd","filed","Button","size","type","fileds","undefined","alert","push","Icon","EvaIcon","icon","map","item","index","key","LibraryComponents","Remove","firstArr","slice","secondArr","newArrSubCategory","align","Save","rootStore","setProcessLoading","encodeCharacterService","addInterfaceManager","then","res","ToastsStore","success","setTimeout","window","location","reload","warning","InterfaceManagerList","data","listEncodeCharacter","isDelete","isEditModify","onDelete","selectedUser","onSelectedRow","rows","body","onUpdateItem","dataField","ModalConfirm","click","deleteInterfaceManager","console","log","fetchEncodeCharacter","interfaceManagerUpdateSingleFiled","onClose"],"mappings":"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","file":"static/js/5.dc237fc1.chunk.js","sourcesContent":["/* eslint-disable */\nimport React, { useState, useContext, useEffect } from \"react\"\nimport { observer } from \"mobx-react\"\nimport * as LibraryComponents from \"@lp/library/components\"\nimport * as FeatureComponents from \"../components\"\n\nimport { Stores } from \"../stores\"\nimport { Stores as RootStore } from \"@lp/library/stores\"\n\nimport { RouterFlow } from \"@lp/flows\"\nimport { toJS } from \"mobx\"\nconst InterfaceManager = observer(() => {\n  const [modalConfirm, setModalConfirm] = useState<any>()\n  const [hideAddInterfaceManager, setHideAddInterfaceManager] = useState<boolean>(\n    true\n  )\n\n  return (\n    <>\n      <LibraryComponents.Atoms.Header>\n        <LibraryComponents.Atoms.PageHeading\n          title={RootStore.routerStore.selectedComponents?.title || \"\"}\n        />\n      </LibraryComponents.Atoms.Header>\n      {RouterFlow.checkPermission(\n        toJS(RootStore.routerStore.userPermission),\n        \"Add\"\n      ) && (\n        <LibraryComponents.Atoms.Buttons.ButtonCircleAddRemove\n          show={hideAddInterfaceManager}\n          onClick={(status) => setHideAddInterfaceManager(!hideAddInterfaceManager)}\n        />\n      )}\n      <div className=\" mx-auto  flex-wrap\">\n        <div\n          className={\n            \"p-2 rounded-lg shadow-xl \" +\n            (hideAddInterfaceManager ? \"hidden\" : \"shown\")\n          }\n        >\n          <LibraryComponents.Atoms.Grid cols={2}>\n            <LibraryComponents.Atoms.List\n              direction=\"col\"\n              space={4}\n              justify=\"stretch\"\n              fill\n            >\n              <LibraryComponents.Atoms.Form.Input\n                label=\"Interface Type\"\n                name=\"interfaceType\"\n                placeholder=\"Interface Type\"\n                value={Stores.interfaceManagerStore.encodeCharacter?.interfaceType}\n                onChange={(interfaceType) => {\n                  Stores.interfaceManagerStore.updateEncodeCharacter({\n                    ...Stores.interfaceManagerStore.encodeCharacter,\n                    interfaceType,\n                  })\n                }}\n              />\n\n              <LibraryComponents.Atoms.Form.Input\n                label=\"Instrument Type\"\n                name=\"instrumentType\"\n                placeholder=\"Instrument Type\"\n                value={Stores.interfaceManagerStore.encodeCharacter?.instrumentType}\n                onChange={(instrumentType) => {\n                  Stores.interfaceManagerStore.updateEncodeCharacter({\n                    ...Stores.interfaceManagerStore.encodeCharacter,\n                    instrumentType,\n                  })\n                }}\n              />\n\n              <LibraryComponents.Atoms.Form.Input\n                label=\"Instrument Name\"\n                name=\"instrumentName\"\n                placeholder=\"Instrument Name\"\n                value={Stores.interfaceManagerStore.encodeCharacter?.instrumentName}\n                onChange={(instrumentName) => {\n                  Stores.interfaceManagerStore.updateEncodeCharacter({\n                    ...Stores.interfaceManagerStore.encodeCharacter,\n                    instrumentName,\n                  })\n                }}\n              />\n              <LibraryComponents.Atoms.Form.Input\n                label=\"Data Flow From\"\n                name=\"dataFlowFrom\"\n                placeholder=\"Data Flow From\"\n                value={Stores.interfaceManagerStore.encodeCharacter?.dataFlowFrom}\n                onChange={(dataFlowFrom) => {\n                  Stores.interfaceManagerStore.updateEncodeCharacter({\n                    ...Stores.interfaceManagerStore.encodeCharacter,\n                    dataFlowFrom,\n                  })\n                }}\n              />\n\n              <div className=\"clearfix\" />\n            </LibraryComponents.Atoms.List>\n            <LibraryComponents.Atoms.List\n              direction=\"col\"\n              space={4}\n              justify=\"stretch\"\n              fill\n            >\n              <LibraryComponents.Atoms.Form.Input\n                label=\"Communication Protocol\"\n                name=\"communicationProtocal\"\n                placeholder=\"Communication Protocal\"\n                value={\n                  Stores.interfaceManagerStore.encodeCharacter?.communicationProtocol\n                }\n                onChange={(communicationProtocol) => {\n                  Stores.interfaceManagerStore.updateEncodeCharacter({\n                    ...Stores.interfaceManagerStore.encodeCharacter,\n                    communicationProtocol,\n                  })\n                }}\n              />\n              <LibraryComponents.Atoms.Form.InputWrapper label=\"Block\" id=\"block\">\n                <LibraryComponents.Atoms.Grid cols={2}>\n                  <LibraryComponents.Atoms.Form.Input\n                    name=\"startBlock\"\n                    placeholder=\"Start Block\"\n                    value={Stores.interfaceManagerStore.encodeCharacter?.blockStart}\n                    onChange={(blockStart) => {\n                      Stores.interfaceManagerStore.updateEncodeCharacter({\n                        ...Stores.interfaceManagerStore.encodeCharacter,\n                        blockStart,\n                      })\n                    }}\n                  />\n                  <LibraryComponents.Atoms.Form.Input\n                    name=\"endBlock\"\n                    placeholder=\"End Block\"\n                    value={Stores.interfaceManagerStore.encodeCharacter?.blockEnd}\n                    onChange={(blockEnd) => {\n                      Stores.interfaceManagerStore.updateEncodeCharacter({\n                        ...Stores.interfaceManagerStore.encodeCharacter,\n                        blockEnd,\n                      })\n                    }}\n                  />\n                </LibraryComponents.Atoms.Grid>\n              </LibraryComponents.Atoms.Form.InputWrapper>\n              <LibraryComponents.Atoms.Form.InputWrapper label=\"Filed\" id=\"filed\">\n                <LibraryComponents.Atoms.Grid cols={3}>\n                  <LibraryComponents.Atoms.Form.Input\n                    name=\"filed\"\n                    placeholder=\"Filed\"\n                    value={Stores.interfaceManagerStore.encodeCharacter?.filed}\n                    onChange={(filed) => {\n                      Stores.interfaceManagerStore.updateEncodeCharacter({\n                        ...Stores.interfaceManagerStore.encodeCharacter,\n                        filed,\n                      })\n                    }}\n                  />\n                  <LibraryComponents.Atoms.Form.Input\n                    name=\"value\"\n                    placeholder=\"Value\"\n                    value={Stores.interfaceManagerStore.encodeCharacter?.value}\n                    onChange={(value) => {\n                      Stores.interfaceManagerStore.updateEncodeCharacter({\n                        ...Stores.interfaceManagerStore.encodeCharacter,\n                        value,\n                      })\n                    }}\n                  />\n                  <div className=\"mt-2\">\n                    <LibraryComponents.Atoms.Buttons.Button\n                      size=\"medium\"\n                      type=\"solid\"\n                      onClick={() => {\n                        const filed =\n                          Stores.interfaceManagerStore.encodeCharacter?.filed\n                        const value =\n                          Stores.interfaceManagerStore.encodeCharacter?.value\n                        const fileds =\n                          Stores.interfaceManagerStore.encodeCharacter?.fileds || []\n                        if (filed === undefined)\n                          return alert(\"Please enter filed and value.\")\n                        if (filed !== undefined) {\n                          fileds !== undefined\n                            ? fileds.push({\n                                filed,\n                                value,\n                              })\n                            : [\n                                {\n                                  filed,\n                                  value,\n                                },\n                              ]\n                          Stores.interfaceManagerStore.updateEncodeCharacter({\n                            ...Stores.interfaceManagerStore.encodeCharacter,\n                            fileds,\n                          })\n                          Stores.interfaceManagerStore.updateEncodeCharacter({\n                            ...Stores.interfaceManagerStore.encodeCharacter,\n                            filed: \"\",\n                            value: \"\",\n                          })\n                        }\n                      }}\n                    >\n                      <LibraryComponents.Atoms.Icon.EvaIcon icon=\"plus-circle-outline\" />\n                      {`Add`}\n                    </LibraryComponents.Atoms.Buttons.Button>\n                  </div>\n                  <div className=\"clearfix\"></div>\n                </LibraryComponents.Atoms.Grid>\n                <LibraryComponents.Atoms.List\n                  space={2}\n                  direction=\"row\"\n                  justify=\"center\"\n                >\n                  <div>\n                    {Stores.interfaceManagerStore.encodeCharacter?.fileds?.map(\n                      (item, index) => (\n                        <div className=\"mb-2\">\n                          <LibraryComponents.Atoms.Buttons.Button\n                            key={index}\n                            size=\"medium\"\n                            type=\"solid\"\n                            icon={LibraryComponents.Atoms.Icon.Remove}\n                            onClick={() => {\n                              const firstArr =\n                                Stores.interfaceManagerStore.encodeCharacter?.fileds?.slice(\n                                  0,\n                                  index\n                                ) || []\n                              const secondArr =\n                                Stores.interfaceManagerStore.encodeCharacter?.fileds?.slice(\n                                  index + 1\n                                ) || []\n                              const newArrSubCategory = [...firstArr, ...secondArr]\n                              Stores.interfaceManagerStore.updateEncodeCharacter({\n                                ...Stores.interfaceManagerStore.encodeCharacter,\n                                fileds: newArrSubCategory,\n                              })\n                            }}\n                          >\n                            {`${item.filed} - ${item.value}`}\n                          </LibraryComponents.Atoms.Buttons.Button>\n                        </div>\n                      )\n                    )}\n                  </div>\n                </LibraryComponents.Atoms.List>\n              </LibraryComponents.Atoms.Form.InputWrapper>\n            </LibraryComponents.Atoms.List>\n          </LibraryComponents.Atoms.Grid>\n          <LibraryComponents.Atoms.List direction=\"row\" space={3} align=\"center\">\n            <LibraryComponents.Atoms.Buttons.Button\n              size=\"medium\"\n              type=\"solid\"\n              icon={LibraryComponents.Atoms.Icon.Save}\n              onClick={() => {\n                if (Stores.interfaceManagerStore.encodeCharacter !== undefined) {\n                  RootStore.rootStore.setProcessLoading(true)\n                  Stores.interfaceManagerStore.encodeCharacterService\n                    .addInterfaceManager(\n                      Stores.interfaceManagerStore.encodeCharacter\n                    )\n                    .then((res) => {\n                      RootStore.rootStore.setProcessLoading(false)\n                      if (res.status === 200) {\n                        LibraryComponents.Atoms.ToastsStore.success(\n                          `Encode Character created.`\n                        )\n                        setTimeout(() => {\n                          window.location.reload()\n                        }, 1000)\n                      }\n                    })\n                } else {\n                  LibraryComponents.Atoms.ToastsStore.warning(\n                    \"Please enter all information!\"\n                  )\n                }\n              }}\n            >\n              Save\n            </LibraryComponents.Atoms.Buttons.Button>\n\n            <LibraryComponents.Atoms.Buttons.Button\n              size=\"medium\"\n              type=\"outline\"\n              icon={LibraryComponents.Atoms.Icon.Remove}\n              onClick={() => {\n                window.location.reload()\n              }}\n            >\n              Clear\n            </LibraryComponents.Atoms.Buttons.Button>\n            <div className=\"clearfix\" />\n          </LibraryComponents.Atoms.List>\n        </div>\n        <div className=\"p-2 rounded-lg shadow-xl overflow-scroll\">\n          <FeatureComponents.Molecules.InterfaceManagerList\n            data={Stores.interfaceManagerStore.listEncodeCharacter || []}\n            isDelete={RouterFlow.checkPermission(\n              toJS(RootStore.routerStore.userPermission),\n              \"Delete\"\n            )}\n            isEditModify={RouterFlow.checkPermission(\n              toJS(RootStore.routerStore.userPermission),\n              \"Edit/Modify\"\n            )}\n            onDelete={(selectedUser) => setModalConfirm(selectedUser)}\n            onSelectedRow={(rows) => {\n              setModalConfirm({\n                show: true,\n                type: \"Delete\",\n                id: rows,\n                title: \"Are you sure?\",\n                body: `Delete selected items!`,\n              })\n            }}\n            onUpdateItem={(value: any, dataField: string, id: string) => {\n              setModalConfirm({\n                show: true,\n                type: \"Update\",\n                data: { value, dataField, id },\n                title: \"Are you sure?\",\n                body: `Update interface manager!`,\n              })\n            }}\n          />\n        </div>\n        <LibraryComponents.Molecules.ModalConfirm\n          {...modalConfirm}\n          click={(type) => {\n            RootStore.rootStore.setProcessLoading(true)\n            if (type === \"Delete\") {\n              Stores.interfaceManagerStore.encodeCharacterService\n                .deleteInterfaceManager(modalConfirm.id)\n                .then((res: any) => {\n                  console.log({ res })\n                  RootStore.rootStore.setProcessLoading(false)\n                  if (res.status === 200) {\n                    LibraryComponents.Atoms.ToastsStore.success(\n                      `Interface manager deleted.`\n                    )\n                    setModalConfirm({ show: false })\n                    Stores.interfaceManagerStore.fetchEncodeCharacter()\n                  }\n                })\n            } else {\n              Stores.interfaceManagerStore.encodeCharacterService\n                .interfaceManagerUpdateSingleFiled(modalConfirm.data)\n                .then((res) => {\n                  RootStore.rootStore.setProcessLoading(false)\n                  if (res.status === 200) {\n                    Stores.interfaceManagerStore.fetchEncodeCharacter()\n                    LibraryComponents.Atoms.ToastsStore.success(`Updated.`)\n                  }\n                })\n            }\n          }}\n          onClose={() => {\n            setModalConfirm({ show: false })\n          }}\n        />\n      </div>\n    </>\n  )\n})\n\nexport default InterfaceManager\n"],"sourceRoot":""}