{"version":3,"file":"static/js/375.c90c2e99.chunk.js","mappings":"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","sources":["features/account-receivable/components/molecules/modal-receipt-share/modal-receipt-share.component.tsx","features/account-receivable/receipt/components/molecules/table-bootstrap.components.tsx","features/account-receivable/receipt/components/molecules/receipt-list.components.tsx","features/account-receivable/receipt/components/molecules/pdf-table-transaction-line.component.tsx","features/account-receivable/receipt/components/molecules/pdf-receipt.component.tsx","features/account-receivable/receipt/components/molecules/pdf-receipt-viewer.component.tsx","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["/* eslint-disable  */\nimport React, {useEffect} from 'react';\nimport {Container} from 'reactstrap';\nimport {Icons} from '@components';\nimport {pdf} from '@react-pdf/renderer';\nimport {PdfReceipt} from '../../../receipt/components';\nimport {saveAs} from 'file-saver';\nimport {SocialIcon} from 'react-social-icons';\nimport printjs from 'print-js';\n\ninterface ModalReceiptShareProps {\n  show?: boolean;\n  title?: string;\n  data?: any;\n  onClick: (data: any, item: any, index: number) => void;\n  onClose: () => void;\n  onReceiptUpload: (file: any, type: string) => void;\n}\n\nexport const ModalReceiptShare = ({\n  show = false,\n  data,\n  onClose,\n  onReceiptUpload,\n}: ModalReceiptShareProps) => {\n  const [showModal, setShowModal] = React.useState(show);\n\n  useEffect(() => {\n    setShowModal(show);\n  }, [show]);\n\n  const sharePdfLink = async (type: string) => {\n    const doc = <PdfReceipt data={data} />;\n    const asPdf = pdf(doc);\n    asPdf.updateContainer(doc);\n    const blob: any = await asPdf.toBlob();\n    blob.name = 'Payment-Receipt.pdf';\n    onReceiptUpload(blob, type);\n  };\n\n  return (\n    <Container>\n      {showModal && (\n        <>\n          <div className='justify-center items-center  overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none'>\n            <div className='relative w-auto my-6 mx-auto max-w-3xl'>\n              <div className='border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none'>\n                <div className='flex items-start justify-between p-3 border-b border-solid border-gray-300 rounded-t'>\n                  <h3 className='text-3xl font-semibold'>\n                    {'Payment Receipt Share'}\n                  </h3>\n                  <button\n                    className='p-1  border-0 text-black opacity-1 ml-6 float-right text-3xl leading-none font-semibold outline-none focus:outline-none'\n                    onClick={() => {\n                      setShowModal(false);\n                      onClose && onClose();\n                    }}\n                  >\n                    <span className=' text-black h-6 w-6 text-2xl block outline-none focus:outline-none'>\n                      ×\n                    </span>\n                  </button>\n                </div>\n                <div className='relative p-2 flex-auto'>\n                  <div className='flex flex-row items-center justify-center gap-2'>\n                    {data && (\n                      <>\n                        <Icons.IconContext\n                          color='#fff'\n                          size='25'\n                          style={{\n                            backgroundColor: '#808080',\n                            width: 32,\n                            height: 32,\n                            borderRadius: 16,\n                            align: 'center',\n                            padding: 4,\n                          }}\n                          onClick={async () => {\n                            const doc = <PdfReceipt data={data} />;\n                            const asPdf = pdf(doc);\n                            asPdf.updateContainer(doc);\n                            const blob = await asPdf.toBlob();\n                            saveAs(blob, 'Receipt.pdf');\n                          }}\n                        >\n                          {Icons.getIconTag(\n                            Icons.Iconhi.HiOutlineFolderDownload,\n                          )}\n                        </Icons.IconContext>\n                        <Icons.IconContext\n                          color='#fff'\n                          size='25'\n                          style={{\n                            backgroundColor: '#808080',\n                            width: 32,\n                            height: 32,\n                            borderRadius: 16,\n                            align: 'center',\n                            padding: 4,\n                          }}\n                          onClick={async () => {\n                            const blob = await pdf(\n                              <PdfReceipt data={data} />,\n                            ).toBlob();\n                            const blobURL = URL.createObjectURL(blob);\n                            printjs(blobURL);\n                            //saveAs(blob, 'Receipt.pdf');\n                          }}\n                        >\n                          {Icons.getIconTag(Icons.IconBi.BiPrinter)}\n                        </Icons.IconContext>\n                        <SocialIcon\n                          network='email'\n                          style={{height: 32, width: 32}}\n                          onClick={async () => {\n                            sharePdfLink(\n                              `mailto:${\n                                data.patientDetails?.email || ''\n                              }?subject=Payment%20Receipt&body=Your%20payment%20receipt%20link:`,\n                            );\n                          }}\n                        />\n                        <SocialIcon\n                          network='whatsapp'\n                          style={{height: 32, width: 32}}\n                          onClick={() => {\n                            sharePdfLink(\n                              data.patientDetails?.whatsappNumber\n                                ? `https://api.whatsapp.com/send?phone=+91${data.patientDetails?.whatsappNumber.toString()}&text=Your%20payment%20receipt%20link:`\n                                : 'https://api.whatsapp.com/send?text=Your%20payment%20receipt%20link:',\n                            );\n                          }}\n                        />\n                        <SocialIcon\n                          network='twitter'\n                          style={{height: 32, width: 32}}\n                          onClick={() => {\n                            sharePdfLink(\n                              'https://twitter.com/intent/tweet?url=Your%20payment%20receipt%20link:',\n                            );\n                          }}\n                        />\n                        <SocialIcon\n                          network='telegram'\n                          style={{height: 32, width: 32}}\n                          onClick={() => {\n                            sharePdfLink(\n                              'https://t.me/share/url?url=Your%20payment%20receipt%20link:',\n                            );\n                          }}\n                        />\n                      </>\n                    )}\n                  </div>\n                </div>\n                <div className='flex items-center justify-end p-3 border-t border-solid border-gray-300 rounded-b'>\n                  <button\n                    className='text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none focus:outline-none mr-1 mb-1'\n                    type='button'\n                    style={{transition: 'all .15s ease'}}\n                    onClick={() => {\n                      setShowModal(false);\n                      onClose && onClose();\n                    }}\n                  >\n                    Close\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='opacity-25 fixed inset-0 z-40 bg-black'></div>\n        </>\n      )}\n    </Container>\n  );\n};\n","/* eslint-disable */\nimport React, {useState} from 'react';\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport _ from 'lodash';\nimport ToolkitProvider, {\n  Search,\n  CSVExport,\n} from 'react-bootstrap-table2-toolkit/dist/react-bootstrap-table2-toolkit';\nimport cellEditFactory from 'react-bootstrap-table2-editor';\nimport paginationFactory, {\n  PaginationProvider,\n  PaginationListStandalone,\n  SizePerPageDropdownStandalone,\n  PaginationTotalStandalone,\n} from 'react-bootstrap-table2-paginator';\nimport filterFactory from 'react-bootstrap-table2-filter';\nimport dayjs from 'dayjs';\nimport '@/library/components/organisms/style.css';\nimport {debounce} from '@/core-utils';\nimport {Buttons, Icons} from '@/library/components';\n\nconst {SearchBar, ClearSearchButton} = Search;\nconst {ExportCSVButton} = CSVExport;\n\ninterface TableBootstrapProps {\n  id: string;\n  data: any;\n  totalSize?: number;\n  searchPlaceholder?: string;\n  page?: number;\n  sizePerPage?: number;\n  columns: any;\n  fileName: string;\n  isDelete?: boolean;\n  isEditModify?: boolean;\n  isSelectRow?: boolean;\n  onDelete?: (selectedItem: any) => void;\n  onSelectedRow?: (selectedItem: any) => void;\n  onUpdateItem?: (value: any, dataField: string, id: string) => void;\n  onPageSizeChange?: (page: number, limit: number) => void;\n  onFilter?: (\n    type: string,\n    filter: any,\n    page: number,\n    totalSize: number,\n  ) => void;\n  clearAllFilter?: () => void;\n  onClickRow?: (item: any, index: number) => void;\n}\nexport const TableBootstrap = ({\n  id,\n  data,\n  totalSize = 10,\n  searchPlaceholder = 'Search...',\n  page = 0,\n  sizePerPage = 10,\n  columns,\n  fileName,\n  isEditModify,\n  isSelectRow,\n  onSelectedRow,\n  onUpdateItem,\n  onPageSizeChange,\n  onFilter,\n  clearAllFilter,\n  onClickRow,\n}: TableBootstrapProps) => {\n  const [selectedRow, setSelectedRow] = useState<any[]>();\n  const [isFilterOpen, setIsFilterOpen] = useState<boolean>(false);\n\n  const customTotal = (from, to, size) => {\n    return (\n      <>\n        <div className='clearfix' />\n        <span>\n          Showing {from} to {to} of {size} Results\n        </span>\n      </>\n    );\n  };\n\n  const sizePerPageRenderer = ({\n    options,\n    currSizePerPage,\n    onSizePerPageChange,\n  }) => (\n    <div className='btn-group items-center' role='group'>\n      <input\n        type='number'\n        min='0'\n        placeholder='No'\n        onChange={(e: any) => {\n          if (e.target.value) {\n            onSizePerPageChange(e.target.value);\n          }\n        }}\n        className='mr-2 ml-2 leading-4 p-2 w-14 focus:outline-none focus:ring block  shadow-sm sm:text-base border border-gray-300 rounded-md'\n      />\n      {options.map(option => (\n        <button\n          key={option.text}\n          type='button'\n          onClick={() => onSizePerPageChange(option.page)}\n          className={`btn  ${\n            currSizePerPage === `${option.page}` ? 'bg-primary' : 'bg-grey'\n          }`}\n        >\n          {option.text}\n        </button>\n      ))}\n    </div>\n  );\n  const options = {\n    cutome: true,\n    totalSize: totalSize,\n    paginationSize: 5,\n    pageStartIndex: 0,\n    firstPageText: '<<',\n    prePageText: '<',\n    nextPageText: '>',\n    lastPageText: '>>',\n    disablePageTitle: true,\n    paginationTotalRenderer: customTotal,\n    hideSizePerPage: true,\n    showTotal: false,\n    alwaysShowAllBtns: true,\n    sizePerPageList: [\n      {\n        text: '10',\n        value: 10,\n      },\n      {\n        text: '20',\n        value: 20,\n      },\n      {\n        text: '30',\n        value: 30,\n      },\n      {\n        text: '40',\n        value: 40,\n      },\n      {\n        text: '50',\n        value: 50,\n      },\n    ],\n    hidePageListOnlyOnePage: true,\n    sizePerPageRenderer: sizePerPageRenderer,\n  };\n  let searchProps: any = {\n    placeholder: searchPlaceholder,\n  };\n  const handleOnSelect = (rows: any, isSelect) => {\n    if (isSelect) {\n      if (selectedRow) {\n        let itemSelected: any[] = selectedRow;\n        itemSelected.push(rows);\n        setSelectedRow(itemSelected);\n      } else {\n        setSelectedRow([rows]);\n      }\n    }\n  };\n\n  const handleOnSelectAll = (isSelect, rows) => {\n    if (isSelect) {\n      setSelectedRow(rows);\n    }\n  };\n\n  const handleTableChange = (\n    type,\n    {\n      data,\n      cellEdit,\n      page,\n      sizePerPage,\n      filters,\n      sortField,\n      sortOrder,\n      searchText,\n    },\n  ) => {\n    // console.log({type});\n    if (type === 'cellEdit' && isEditModify) {\n      onUpdateItem &&\n        onUpdateItem(cellEdit.newValue, cellEdit.dataField, cellEdit.rowId);\n    }\n    if (type === 'pagination' && _.isEmpty(filters)) {\n      // if (sizePerPage > totalSize) return alert(\"You have not more records.\")\n      // if (page * sizePerPage > totalSize) return alert(\"You have not more records.\")\n      onPageSizeChange && onPageSizeChange(page, sizePerPage);\n    }\n    if (type === 'filter' || (type === 'pagination' && !_.isEmpty(filters))) {\n      if (type === 'pagination') {\n        if (sizePerPage > totalSize) return alert('You have not more records.');\n        if (page * sizePerPage > totalSize)\n          return alert('You have not more records.');\n      }\n      let filter: any = {};\n      for (const [key, value] of Object.entries(filters)) {\n        const values: any = value;\n        const object = {[key]: values.filterVal};\n        filter = Object.assign(filter, object);\n      }\n      if (onFilter) {\n        debounce(() => {\n          onFilter(\n            type,\n            filter,\n            type === 'filter' && page === 1 ? 0 : page,\n            sizePerPage,\n          );\n        });\n      }\n    }\n    if (type === 'search') {\n      debounce(() => {\n        onFilter && onFilter(type, {srText: searchText}, page, sizePerPage);\n      });\n    }\n    if (type === 'sort') {\n      let result;\n      if (sortOrder === 'asc') {\n        result = data.sort((a, b) => {\n          if (a[sortField] > b[sortField]) {\n            return 1;\n          } else if (b[sortField] > a[sortField]) {\n            return -1;\n          }\n          return 0;\n        });\n      } else {\n        result = data.sort((a, b) => {\n          if (a[sortField] > b[sortField]) {\n            return -1;\n          } else if (b[sortField] > a[sortField]) {\n            return 1;\n          }\n          return 0;\n        });\n      }\n    }\n  };\n\n  const CustomToggleList = ({columns, onColumnToggle, toggles}) => (\n    <div className='btn-group btn-group-toggle' data-toggle='buttons'>\n      {columns\n        .map(column => ({\n          ...column,\n          toggle: toggles[column.dataField],\n        }))\n        .map((column, index) => {\n          if (index > 0) {\n            return (\n              <button\n                type='button'\n                key={column.dataField}\n                className={` btn btn-primary  btn-sm whitespace-nowrap ${\n                  column.toggle ? 'active' : ''\n                }`}\n                data-toggle='button'\n                aria-pressed={column.toggle ? 'true' : 'false'}\n                onClick={() => onColumnToggle(column.dataField)}\n              >\n                {column.text}\n              </button>\n            );\n          }\n        })}\n    </div>\n  );\n\n  const rowEvents = {\n    onClick: (e, row, rowIndex) => {\n      onClickRow && onClickRow(row, rowIndex);\n    },\n  };\n\n  return (\n    <PaginationProvider\n      pagination={paginationFactory(\n        totalSize !== 0 ? options : {page, sizePerPage, totalSize},\n      )}\n      keyField={id}\n      columns={columns}\n      data={data}\n    >\n      {({paginationProps, paginationTableProps}) => (\n        <ToolkitProvider\n          keyField={id}\n          bootstrap4\n          data={data}\n          columns={columns}\n          search\n          exportCSV={{\n            fileName: `${fileName}_${dayjs(new Date()).format(\n              'YYYY-MM-DD HH:mm',\n            )}.csv`,\n            noAutoBOM: false,\n            blobType: 'text/csv;charset=ansi',\n            exportAll: false,\n            onlyExportFiltered: true,\n          }}\n          columnToggle\n        >\n          {props => (\n            <div>\n              <div className='flex items-center flex-wrap'>\n                <SearchBar\n                  {...searchProps}\n                  {...props.searchProps}\n                  onChange={value => {\n                    console.log({value});\n                  }}\n                />\n                <ClearSearchButton\n                  className={`inline-flex ml-4 bg-gray-500 items-center small outline shadow-sm  font-medium  disabled:opacity-50 disabled:cursor-not-allowed text-center h-9 text-white`}\n                  {...props.searchProps}\n                />\n                <button\n                  className={`ml-2 px-2 focus:outline-none bg-gray-500 items-center  outline shadow-sm  font-medium  text-center rounded-md h-9 text-white`}\n                  onClick={clearAllFilter}\n                >\n                  Clear all filters\n                </button>\n                <ExportCSVButton\n                  className={`inline-flex m-2.5 bg-gray-500 items-center  small outline shadow-sm  font-medium  disabled:opacity-50 disabled:cursor-not-allowed text-center h-9 text-white`}\n                  {...props.csvProps}\n                >\n                  Export CSV!!\n                </ExportCSVButton>\n                {isFilterOpen ? (\n                  <Buttons.Button\n                    size='medium'\n                    type='outline'\n                    onClick={() => {\n                      setIsFilterOpen(!isFilterOpen);\n                    }}\n                  >\n                    <Icons.IconFa.FaChevronUp />\n                  </Buttons.Button>\n                ) : (\n                  <Buttons.Button\n                    size='medium'\n                    type='outline'\n                    onClick={() => {\n                      setIsFilterOpen(!isFilterOpen);\n                    }}\n                  >\n                    <Icons.IconFa.FaChevronDown />\n                  </Buttons.Button>\n                )}\n              </div>\n              {isFilterOpen && (\n                <div className={'mb-2 overflow-auto h-10'}>\n                  <CustomToggleList\n                    contextual='primary'\n                    className='list-custom-class'\n                    btnClassName='list-btn-custom-class'\n                    {...props.columnToggleProps}\n                  />\n                </div>\n              )}\n              <div className='scrollTable'>\n                <BootstrapTable\n                  remote\n                  {...props.baseProps}\n                  noDataIndication='Table is Empty'\n                  hover\n                  {...paginationTableProps}\n                  filter={filterFactory()}\n                  headerClasses='bg-gray-500 text-white whitespace-nowrap'\n                  onTableChange={handleTableChange}\n                  rowEvents={rowEvents}\n                />\n              </div>\n              <div className='flex items-center gap-2 mt-2'>\n                <SizePerPageDropdownStandalone\n                  {...Object.assign(\n                    {},\n                    {...paginationProps, hideSizePerPage: false},\n                  )}\n                />\n                <PaginationListStandalone {...paginationProps} />\n              </div>\n              <div className='flex items-center gap-2 mt-2'>\n                <PaginationTotalStandalone {...paginationProps} />\n              </div>\n            </div>\n          )}\n        </ToolkitProvider>\n      )}\n    </PaginationProvider>\n  );\n};\n","import React from 'react';\nimport {observer} from 'mobx-react';\nimport {\n  NumberFilter,\n  textFilter,\n  customFilter,\n  Form,\n  Tooltip,\n  Icons,\n} from '@/library/components';\nimport {Confirm} from '@/library/models';\nimport dayjs from 'dayjs';\nimport {TableBootstrap} from './table-bootstrap.components';\n\ninterface ReceiptListProps {\n  data: any;\n  totalSize: number;\n  isDelete?: boolean;\n  isEditModify?: boolean;\n  onDelete?: (selectedItem: Confirm) => void;\n  onSelectedRow?: (selectedItem: any) => void;\n  onUpdateItem?: (value: any, dataField: string, id: string) => void;\n  onPageSizeChange?: (page: number, totalSize: number) => void;\n  onReport?: (item: any) => void;\n  onFilter?: (\n    type: string,\n    filter: any,\n    page: number,\n    totalSize: number,\n  ) => void;\n}\n\nexport const ReceiptList = observer((props: ReceiptListProps) => {\n  return (\n    <>\n      <div style={{position: 'relative'}}>\n        <TableBootstrap\n          id='_id'\n          data={props.data}\n          totalSize={props.totalSize}\n          columns={[\n            {\n              dataField: '_id',\n              text: 'Id',\n              hidden: true,\n              csvExport: false,\n            },\n            {\n              dataField: 'headerId',\n              text: 'Header Id',\n              sort: true,\n              editable: false,\n            },\n            {\n              dataField: 'labId',\n              text: 'Lab Id',\n              sort: true,\n              editable: false,\n            },\n            {\n              dataField: 'grossAmount',\n              text: 'Gross Amount',\n              sort: true,\n              editable: false,\n            },\n            {\n              dataField: 'netAmount',\n              text: 'Net Amount',\n              sort: true,\n              editable: false,\n            },\n            {\n              dataField: 'discount',\n              text: 'Discount',\n              sort: true,\n              editable: false,\n            },\n            {\n              dataField: 'receivedAmount',\n              text: 'Received Amount',\n              sort: true,\n              editable: false,\n            },\n            {\n              dataField: 'balance',\n              text: 'Balance',\n              sort: true,\n              csvFormatter: col => (col ? col : ''),\n              editable: false,\n            },\n            {\n              dataField: 'acClass',\n              text: 'AC Class',\n              sort: true,\n              csvFormatter: col => (col ? col : ''),\n              editable: false,\n            },\n            {\n              dataField: 'enteredBy',\n              text: 'Entered By',\n              sort: true,\n              csvFormatter: col => (col ? col : ''),\n              editable: false,\n            },\n            {\n              dataField: 'operation',\n              text: 'Report',\n              editable: false,\n              csvExport: false,\n              hidden: !props.isDelete,\n              formatter: (cellContent, row) => (\n                <>\n                  <div className='flex flex-row'>\n                    <Tooltip tooltipText='Generate PDF'>\n                      <Icons.IconContext\n                        color='#fff'\n                        size='20'\n                        onClick={() => props.onReport && props.onReport(row)}\n                      >\n                        {Icons.getIconTag(Icons.Iconai.AiOutlineFilePdf)}\n                      </Icons.IconContext>\n                    </Tooltip>\n                  </div>\n                </>\n              ),\n              headerClasses: 'sticky right-0  bg-gray-500 text-white z-50',\n              classes: (cell, row, rowIndex, colIndex) => {\n                return 'sticky right-0 bg-gray-500';\n              },\n              style: (cell, row, rowIndex, colIndex) => {\n                return {\n                  zIndex: props.data?.length - rowIndex,\n                };\n              },\n            },\n          ]}\n          isEditModify={props.isEditModify}\n          isSelectRow={true}\n          fileName='Receipt'\n          onSelectedRow={rows => {\n            props.onSelectedRow &&\n              props.onSelectedRow(rows.map((item: any) => item._id));\n          }}\n          onUpdateItem={(value: any, dataField: string, id: string) => {\n            props.onUpdateItem && props.onUpdateItem(value, dataField, id);\n          }}\n          onPageSizeChange={(page, size) => {\n            props.onPageSizeChange && props.onPageSizeChange(page, size);\n          }}\n          onFilter={(type, filter, page, size) => {\n            props.onFilter && props.onFilter(type, filter, page, size);\n          }}\n          clearAllFilter={() => {}}\n        />\n      </div>\n    </>\n  );\n});\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _ from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfImage,\n  PdfView,\n  PdfMedium,\n  PdfRegular,\n} from '@/library/components';\n\nconst styles = StyleSheet.create({\n  table: {\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n  },\n  headerBg: {\n    borderColor: 'gray',\n    borderWidth: 1,\n  },\n  tableCell: {\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfTableTransactionLineProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data: Array<any>;\n}\n\nexport const PdfTransactionLineTable = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfTableTransactionLineProps) => {\n  const fields = [\n    {\n      title: 'Sr.No',\n      width: '10',\n    },\n    {\n      title: 'Test Code',\n      width: '20',\n    },\n    {\n      title: 'Test Name',\n      width: '50',\n    },\n    {\n      title: 'Price',\n      width: '20',\n    },\n  ];\n\n  return (\n    <View style={[styles.table, {...style}]}>\n      <View\n        style={[styles.tableRow, styles.headerBg, {...headerStyle}]}\n        fixed={headerFixed}\n      >\n        {fields.map((item, index) => (\n          <View\n            key={index}\n            style={[\n              {width: item.width + '%', borderWidth: 1, borderColor: 'gray'},\n            ]}\n          >\n            <PdfSmall\n              style={{\n                fontFamily: 'Times-Bold',\n                textAlign: 'center',\n              }}\n            >\n              {item?.title}\n            </PdfSmall>\n          </View>\n        ))}\n      </View>\n\n      {data?.map(tranItem => (\n        <View style={styles.tableRow}>\n          {Object.entries(tranItem).map((item: any, _idx) => (\n            <PdfBorderView\n              key={_idx}\n              style={{\n                width: fields[_idx]?.width + '%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={1}\n              borderColor='gray'\n            >\n              <PdfSmall style={{textAlign: 'center', padding: 2}}>\n                {item[1]}\n              </PdfSmall>\n            </PdfBorderView>\n          ))}\n        </View>\n      ))}\n    </View>\n  );\n};\n","import React, {useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n  PdfImage,\n} from '@components';\nimport {PdfReceiptViewer} from './pdf-receipt-viewer.component';\nimport {PdfTransactionLineTable} from './pdf-table-transaction-line.component';\nimport {getAgeAndAgeUnit} from '@features/registration/patient-registration/utils';\nimport {calculateTimimg, numToWords} from '@/library/utils';\ninterface PdfReceiptProps {\n  data: any;\n}\n\nconst headerGridSpace = 120;\nexport const PdfReceipt = ({data}: PdfReceiptProps) => {\n  const {\n    labId,\n    headerDetails,\n    patientDetails,\n    transactionLine,\n    transactionHeader,\n  } = data || {};\n\n  const getAgeAndSex = value => {\n    const age = calculateTimimg(\n      Math.abs(dayjs(value?.split('-')[0]).diff(new Date(), 'days')),\n    );\n    return (\n      getAgeAndAgeUnit(age).age +\n      '(' +\n      getAgeAndAgeUnit(age).ageUnit +\n      ')' +\n      ' - ' +\n      value?.split('-')[1]\n    );\n  };\n\n  const getAmountPayable = payload => {\n    const discountChargesAmount: number =\n      typeof payload?.discountCharges?.amount == 'number'\n        ? Number.parseFloat(payload?.discountCharges?.amount)\n        : 0;\n    const amountPayable =\n      Number.parseFloat(payload?.netAmount) +\n      Number.parseFloat(payload?.miscellaneousCharges) +\n      discountChargesAmount;\n    return amountPayable;\n  };\n  return (\n    <PdfReceiptViewer\n      pageSize='A4'\n      height={window.outerHeight}\n      children={\n        <>\n          <PdfView mt={20}>\n            <PdfImage\n              src={headerDetails?.labLogo}\n              style={{width: 150, height: 40}}\n            />\n\n            <PdfView mh={0} p={0}>\n              <PdfView mt={4} mh={0} p={0} flexDirection='row'>\n                <PdfSmall style={{width: headerGridSpace}}>\n                  {'Regd. Office:'}\n                </PdfSmall>\n                <PdfSmall>\n                  {' '}\n                  {`${headerDetails?.registeredOffice || ''}`}{' '}\n                </PdfSmall>\n              </PdfView>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfSmall style={{width: headerGridSpace}}>\n                  {'Customer Care:'}\n                </PdfSmall>\n                <PdfSmall> {`${headerDetails?.customerCare || ''}`} </PdfSmall>\n              </PdfView>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfSmall style={{width: headerGridSpace}}>{'Email:'}</PdfSmall>\n                <PdfSmall> {`${headerDetails?.email || ''}`} </PdfSmall>\n              </PdfView>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfSmall style={{width: headerGridSpace}}>\n                  {'Registration Location:'}\n                </PdfSmall>\n                <PdfSmall>{`${\n                  headerDetails?.registrationLocations || ''\n                }`}</PdfSmall>\n              </PdfView>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfSmall style={{width: headerGridSpace}}>{'Phone:'}</PdfSmall>\n                <PdfSmall> {`${headerDetails?.phone || ''}`} </PdfSmall>\n              </PdfView>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfSmall style={{width: headerGridSpace}}>{'Web:'}</PdfSmall>\n                <PdfSmall> {`${headerDetails?.web || ''}`} </PdfSmall>\n              </PdfView>\n            </PdfView>\n\n            <PdfView>\n              <PdfRegular textAlign='right' fontFamily='Times-Bold'>\n                {labId}\n              </PdfRegular>\n              <PdfRegular\n                textAlign='center'\n                fontSize={10}\n                fontFamily='Times-Bold'\n              >\n                Bill of Supply/Cash Receipt\n              </PdfRegular>\n              <PdfSmall\n                textAlign='center'\n                fontFamily='Times-Italic'\n                style={{textDecoration: 'underline'}}\n              >\n                Please bring this receipt for report collections\n              </PdfSmall>\n            </PdfView>\n\n            <PdfBorderView mh={0} mv={0} bw={1}>\n              <PdfView\n                mh={0}\n                p={0}\n                flexDirection='row'\n                style={{\n                  borderBottomColor: 'gray',\n                  borderBottomWidth: 1,\n                  marginBottom: 4,\n                  paddingBottom: 4,\n                }}\n              >\n                <PdfGrid cols={2} bg='transparent'>\n                  <PdfSmall>{`Invoice No: ${\n                    patientDetails?.invoiceNo || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Patient Name: ${\n                    patientDetails?.patientName || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Lab ID: ${\n                    patientDetails?.labId || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Patient ID: ${\n                    patientDetails?.patientId || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Age & Sex: ${getAgeAndSex(\n                    patientDetails?.ageAndSex,\n                  )}`}</PdfSmall>\n                  <PdfSmall>{`Contact Number: ${\n                    patientDetails?.mobileNo || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n                <PdfGrid cols={2} bg='transparent'>\n                  <PdfSmall>{`GST No: ${\n                    patientDetails?.gstNo || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Lab Code / CC Code: ${\n                    patientDetails?.ccCode || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Date & Time: ${dayjs(\n                    patientDetails?.dateAndTime,\n                  ).format('YYYY-MM-DD')}`}</PdfSmall>\n                  <PdfSmall>{`Mode of Payment: ${\n                    patientDetails?.modeOfPayment || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`SAC Code: ${\n                    patientDetails?.sacCode || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`CIN No: ${\n                    patientDetails?.cinNo || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n              </PdfView>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfGrid cols={2} bg='transparent'>\n                  <PdfSmall>{`Patient Employee Code: ${\n                    patientDetails?.patientEmployeeCode || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Card No: ${\n                    patientDetails?.cardNo || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n                <PdfGrid cols={2} bg='transparent'>\n                  <PdfSmall>{`Reference Doctor: ${\n                    patientDetails?.refDoctor || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Corporate Code: ${\n                    patientDetails?.corporateCode || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n              </PdfView>\n              <PdfView mh={0} p={0} mt={4}>\n                <PdfTransactionLineTable\n                  data={\n                    _.map(transactionLine, o =>\n                      _.pick(o, [\n                        'lineId',\n                        'panelCode',\n                        'panelName',\n                        'netAmount',\n                      ]),\n                    ) || []\n                  }\n                />\n                <PdfView mh={0} p={0} mt={2} style={{}} alignItems='flex-end'>\n                  <PdfSmall>\n                    Total: {getAmountPayable(transactionHeader)}\n                  </PdfSmall>\n                  <PdfSmall>\n                    Misc Charges: {transactionHeader?.miscellaneousCharges}\n                  </PdfSmall>\n                  <PdfSmall>\n                    Other Charges:{' '}\n                    {typeof transactionHeader?.discountCharges?.amount ==\n                    'number'\n                      ? Number.parseFloat(\n                          transactionHeader?.discountCharges?.amount,\n                        )\n                      : 0}\n                  </PdfSmall>\n                  <PdfSmall>\n                    Paid Amount: {transactionHeader?.receivedAmount}\n                  </PdfSmall>\n                  <PdfSmall fontFamily='Times-Bold'>\n                    Balance: {transactionHeader?.balance}\n                  </PdfSmall>\n                </PdfView>\n                <PdfSmall>\n                  Amount Paid in Words:{' '}\n                  {numToWords(transactionHeader?.receivedAmount || 0)}\n                </PdfSmall>\n              </PdfView>\n            </PdfBorderView>\n            <PdfSmall>\n              This is a computer generated receipt and does not require\n              signature/stamp\n            </PdfSmall>\n            <PdfSmall fontFamily='Times-Bold' style={{marginTop: 4}}>\n              {`*Final Report Delivery Date: ${dayjs(new Date()).format(\n                'YYYY-MM-DD',\n              )}. *Report Collection Time: 6:00 AM to 7:30 PM`}\n            </PdfSmall>\n\n            <PdfBorderView mh={0} mv={4} bw={1}>\n              <PdfSmall>\n                * In publishing and graphic design, Lorem ipsum is a placeholder\n                text commonly used to demonstrate the visual form of a document\n                or a typeface without relying on meaningful content. Lorem ipsum\n                may be used as a placeholder before final copy is available.\n              </PdfSmall>\n            </PdfBorderView>\n          </PdfView>\n        </>\n      }\n    />\n  );\n};\n","import React, {useState, useRef} from 'react';\nimport {\n  Page,\n  Text,\n  Document,\n  StyleSheet,\n  Font,\n  PDFViewer,\n  Image,\n  View,\n} from '@react-pdf/renderer';\nimport {decompressString} from '@/library/utils';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfReceiptViewerProps {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize: any;\n  mainBoxCSS?: any;\n  children: React.ReactNode;\n}\n\nexport const PdfReceiptViewer = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Template Settings',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfReceiptViewerProps) => {\n  //const [boxCSS, setBoxCSS] = useState<any>(mainBoxCSS);\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {/* <PDFViewer style={{width, height}} showToolbar={isToolbar}> */}\n      <Document title={documentTitle}>\n        <Page size={pageSize} style={boxCSS.current}>\n          {isBackgroundImage && (\n            <View\n              style={{\n                position: 'absolute',\n                bottom: 0,\n                left: 0,\n                right: 0,\n                top: 0,\n              }}\n              fixed={true}\n            >\n              <Image\n                object-fit='fill'\n                style={{\n                  position: 'absolute',\n                  bottom: 0,\n                  left: 0,\n                  right: 0,\n                  top: 0,\n                  objectFit: 'fill',\n                }}\n                src={decompressString(backgroundImage || '')}\n              />\n            </View>\n          )}\n\n          {children}\n        </Page>\n      </Document>\n      {/* </PDFViewer> */}\n    </>\n  );\n};\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["ModalReceiptShare","show","data","onClose","onReceiptUpload","React","showModal","setShowModal","useEffect","sharePdfLink","type","doc","asPdf","pdf","updateContainer","toBlob","blob","name","className","onClick","color","size","style","backgroundColor","width","height","borderRadius","align","padding","saveAs","Icons","blobURL","URL","createObjectURL","printjs","network","patientDetails","email","whatsappNumber","toString","transition","SearchBar","Search","ClearSearchButton","ExportCSVButton","CSVExport","TableBootstrap","id","totalSize","searchPlaceholder","page","sizePerPage","columns","fileName","isEditModify","onUpdateItem","isSelectRow","onSelectedRow","onPageSizeChange","onFilter","clearAllFilter","onClickRow","useState","isFilterOpen","setIsFilterOpen","options","cutome","paginationSize","pageStartIndex","firstPageText","prePageText","nextPageText","lastPageText","disablePageTitle","paginationTotalRenderer","from","to","hideSizePerPage","showTotal","alwaysShowAllBtns","sizePerPageList","text","value","hidePageListOnlyOnePage","sizePerPageRenderer","currSizePerPage","onSizePerPageChange","role","min","placeholder","onChange","e","target","map","option","searchProps","handleTableChange","cellEdit","filters","sortField","sortOrder","searchText","newValue","dataField","rowId","_","alert","filter","Object","entries","key","values","object","filterVal","assign","debounce","srText","sort","a","b","CustomToggleList","onColumnToggle","toggles","column","toggle","index","rowEvents","row","rowIndex","pagination","paginationFactory","keyField","paginationProps","paginationTableProps","bootstrap4","search","exportCSV","dayjs","Date","format","noAutoBOM","blobType","exportAll","onlyExportFiltered","columnToggle","props","console","log","csvProps","contextual","btnClassName","columnToggleProps","remote","baseProps","noDataIndication","hover","filterFactory","headerClasses","onTableChange","ReceiptList","observer","position","hidden","csvExport","editable","csvFormatter","col","isDelete","formatter","cellContent","tooltipText","onReport","classes","cell","colIndex","zIndex","length","rows","item","_id","styles","StyleSheet","table","flexFlow","tableRow","flexDirection","headerBg","borderColor","borderWidth","tableCell","fontSize","textCenter","textAlign","PdfTransactionLineTable","headerFixed","headerStyle","fields","title","fixed","fontFamily","tranItem","_idx","mh","mv","p","bw","headerGridSpace","PdfReceipt","labId","headerDetails","transactionLine","transactionHeader","pageSize","window","outerHeight","children","mt","src","labLogo","registeredOffice","customerCare","registrationLocations","phone","web","textDecoration","borderBottomColor","borderBottomWidth","marginBottom","paddingBottom","cols","bg","invoiceNo","patientName","patientId","age","calculateTimimg","Math","abs","split","diff","getAgeAndAgeUnit","ageUnit","getAgeAndSex","ageAndSex","mobileNo","gstNo","ccCode","dateAndTime","modeOfPayment","sacCode","cinNo","patientEmployeeCode","cardNo","refDoctor","corporateCode","o","alignItems","payload","discountChargesAmount","discountCharges","amount","Number","parseFloat","netAmount","miscellaneousCharges","getAmountPayable","receivedAmount","balance","numToWords","marginTop","Font","family","PdfReceiptViewer","documentTitle","isToolbar","isBackgroundImage","backgroundImage","mainBoxCSS","boxCSS","useRef","current","eval","bottom","left","right","top","objectFit","decompressString","autoBom","warn","test","Blob","c","d","XMLHttpRequest","open","responseType","onload","g","response","onerror","error","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","webkitURL","j","createElement","download","rel","href","origin","location","setTimeout","revokeObjectURL","msSaveOrOpenBlob","body","innerText","HTMLElement","safari","FileReader","k","onloadend","result","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}