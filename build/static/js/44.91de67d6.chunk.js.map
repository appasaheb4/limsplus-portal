{"version":3,"file":"static/js/44.91de67d6.chunk.js","mappings":"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","sources":["features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0001/temp0001-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0001/index.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0002/temp0002-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0002/index.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0003/temp0003-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0003/index.tsx","features/report-builder/report-template/components/molecules/pdf/common/aarvak-diagnostic-center/pdf-footer.component.tsx","features/report-builder/report-template/components/molecules/pdf/common/aarvak-diagnostic-center/pdf-header.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-branding/temp0001/temp0001-footer.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-branding/temp0001/temp0001-header.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-branding/temp0001/temp0001-sub-header.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-branding/temp0001/temp0001.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-layout/temp0001/temp0001.component.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adb-medical-report/index.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adb-medical-report/pdf-medical-checkup.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adb-medical-report/pdf-medicial-fitness-certificate.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adc-without-header-footer/index.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adc-without-header-footer/pdf-patient-details.component.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adc-without-header-footer/pdf-result-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adc/index.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adc/pdf-patient-details.component.tsx","features/report-builder/report-template/components/molecules/pdf/static/aarvak-diagnostic-center/adc/pdf-result-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0004/index.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0004/pdf-patient-details.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0004/pdf-result-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0005/index.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0005/pdf-medicial-fitness-certificate.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0006/index.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0006/pdf-medical-checkup.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0006/pdf-patient-details.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0007/index.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0008/index.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _ from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {PdfSmall, PdfBorderView, PdfImage, PdfView} from '@/library/components';\n\nconst styles = StyleSheet.create({\n  table: {\n    borderColor: '#000',\n    borderWidth: 1,\n    marginHorizontal: 20,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n  },\n  headerBg: {\n    backgroundColor: '#aaa',\n    borderStyle: 'solid',\n    borderColor: '#000',\n    borderWidth: 1,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfTPRTemp0001ListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data: Array<any>;\n}\n\nexport const PdfTPRTemp0001List = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfTPRTemp0001ListProps) => {\n  const [patientResultList, setPatientResultList] = useState<Array<any>>();\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Results',\n      width: '20',\n    },\n    {\n      title: 'Units',\n      width: '20',\n    },\n    {\n      title: 'Bio. Ref. Interval',\n      width: '20',\n    },\n  ];\n\n  useEffect(() => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        let panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          let testHeader: Array<any> = [];\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            // eslint-disable-next-line @typescript-eslint/no-loop-func\n            testItems.filter(testItem => {\n              testHeader.push({\n                testHeader: {\n                  testDescription: testKey,\n                  testMethodDescription:\n                    testItem?.testHeader?.testMethodDescription,\n                  testBottomMarker: testItem?.testHeader?.testBottomMarker,\n                  testRightMarker: testItem?.testHeader?.testRightMarker,\n                  tpmPrintTestName: testItem?.testHeader?.tpmPrintTestName,\n                  tpmTestMethod: testItem?.testHeader?.tpmTestMethod,\n                },\n                patientResultList: {\n                  analyte: testItem?.analyte,\n                  result: testItem?.result,\n                  units: testItem?.units,\n                  bioRefInterval: testItem?.bioRefInterval,\n                },\n                testFooter: {\n                  testInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.testInterpretation,\n                  tpmTestInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.tpmTestInterpretation,\n                },\n                reportOrder: testItem?.testReportOrder,\n              });\n            });\n          }\n          testHeader = _.orderBy(testHeader, 'reportOrder', 'asc');\n          panelHeader.push({\n            panelHeader: {\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              tpmPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPrintPanelName,\n              tpmPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPanelMethod,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            reportOrder: panelItems?.find(\n              pItem => pItem?.panelHeader?.panelDescription == panelKey,\n            )?.panelReportOrder,\n            testHeader,\n          });\n        }\n        panelHeader = _.orderBy(panelHeader, 'reportOrder', 'asc');\n        patientResultList.push({\n          departmentHeader: {\n            departmentName: deptKey,\n          },\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      setPatientResultList(patientResultList);\n    }\n  }, [data]);\n\n  return (\n    <View style={[styles.table, {...style}]}>\n      <View\n        style={[styles.tableRow, styles.headerBg, {...headerStyle}]}\n        fixed={headerFixed}\n      >\n        {fields.map((item, index) => (\n          <View key={index} style={[{width: item.width + '%'}]}>\n            <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n          </View>\n        ))}\n      </View>\n      {patientResultList?.map((deptItem, index) => (\n        <>\n          <PdfView key={index} mh={0} p={0}>\n            {/* Department Header */}\n            <PdfBorderView\n              style={{\n                width: '100%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={1}\n              borderColor='#000'\n            >\n              <PdfSmall style={{marginLeft: 10}}>\n                {deptItem?.departmentHeader?.departmentName}\n              </PdfSmall>\n            </PdfBorderView>\n            {/* Panel Header */}\n            {deptItem.panelHeader.map((panelItem, index) => (\n              <>\n                <PdfBorderView\n                  style={{\n                    width: '100%',\n                  }}\n                  mh={0}\n                  mv={0}\n                  p={0}\n                  bw={1}\n                  borderColor='#000'\n                >\n                  <PdfSmall style={{marginLeft: 10}}>\n                    {panelItem.panelHeader?.tpmPrintPanelName\n                      ? panelItem?.panelHeader?.panelDescription\n                      : ''}\n                  </PdfSmall>\n                  <PdfSmall\n                    style={{\n                      marginLeft: 10,\n                      fontSize: 0,\n                      marginTop: -2,\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {panelItem?.panelHeader?.tpmPanelMethod\n                      ? panelItem?.panelHeader?.panelMethodDescription\n                      : ''}\n                  </PdfSmall>\n                </PdfBorderView>\n                {/* Test Header */}\n                {panelItem?.testHeader?.map((testItem, testIndex) => (\n                  <>\n                    <PdfBorderView\n                      style={{\n                        width: '100%',\n                      }}\n                      mh={0}\n                      mv={0}\n                      p={0}\n                      bw={1}\n                      borderColor='#000'\n                    >\n                      {testItem.testHeader?.tpmPrintTestName ? (\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testHeader?.testDescription}{' '}\n                          {` ${testItem.testHeader?.testRightMarker}`}\n                        </PdfSmall>\n                      ) : null}\n                      <PdfSmall\n                        style={{\n                          marginLeft: 10,\n                          fontSize: 8,\n                          marginTop: -2,\n                          fontWeight: 'bold',\n                        }}\n                      >\n                        {testItem?.testHeader?.tpmTestMethod\n                          ? testItem?.testHeader?.testMethodDescription\n                          : ''}\n                      </PdfSmall>\n                    </PdfBorderView>\n\n                    {/* Patient Result List */}\n\n                    <View key={testIndex} style={styles.tableRow}>\n                      {Object.entries(testItem?.patientResultList).map(\n                        (_item: any, _idx) => (\n                          <PdfBorderView\n                            key={testIndex}\n                            style={{\n                              width: fields[_idx]?.width + '%',\n                            }}\n                            mh={0}\n                            mv={0}\n                            p={0}\n                            bw={1}\n                            borderColor='#000'\n                          >\n                            {typeof _item[1] == 'object' ? (\n                              <>\n                                <PdfSmall style={{marginLeft: 10}}>\n                                  {_item[1]?.analyteDescription}\n                                </PdfSmall>\n\n                                {_item[1]?.analyteMethod ? (\n                                  <PdfSmall style={{marginLeft: 10}}>\n                                    {_item[1]?.analyteMethodDescription}\n                                  </PdfSmall>\n                                ) : null}\n                                {_item[1]?.analyteInterpretation ? (\n                                  <PdfSmall style={{marginLeft: 10}}>\n                                    {_item[1]?.analyteMasterInterpretation}\n                                  </PdfSmall>\n                                ) : null}\n                              </>\n                            ) : (\n                              <PdfSmall style={{textAlign: 'center'}}>\n                                {_item[1] || ''}\n                              </PdfSmall>\n                            )}\n                          </PdfBorderView>\n                        ),\n                      )}\n                    </View>\n\n                    {/* Test Footer */}\n                    {testItem?.testFooter?.tpmTestInterpretation && (\n                      <PdfBorderView\n                        style={{\n                          width: '100%',\n                        }}\n                        mh={0}\n                        mv={0}\n                        p={0}\n                        bw={1}\n                        borderColor='#000'\n                      >\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testFooter?.testInterpretation || ''}\n                        </PdfSmall>\n                      </PdfBorderView>\n                    )}\n                  </>\n                ))}\n\n                {/* Panel Footer */}\n                {panelItem?.panelFooter?.tpmPanelInterpretation && (\n                  <PdfBorderView\n                    style={{\n                      width: '100%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={1}\n                    borderColor='#000'\n                  >\n                    <PdfSmall style={{marginLeft: 10}}>\n                      {panelItem?.panelFooter?.panelInterpretation}\n                    </PdfSmall>\n                  </PdfBorderView>\n                )}\n              </>\n            ))}\n\n            {/* Department Footer */}\n            {deptItem?.departmentFooter?.userInfo?.length > 0 && (\n              <PdfBorderView\n                style={{\n                  width: '100%',\n                }}\n                mh={0}\n                mv={0}\n                p={0}\n                bw={1}\n                flexDirection='row'\n                borderColor='#000'\n              >\n                {deptItem?.departmentFooter?.userInfo?.map(deptFooterItem => (\n                  <PdfView flexDirection='column' alignItems='center'>\n                    <PdfImage\n                      src={deptFooterItem?.signature}\n                      style={{\n                        width: 80,\n                        height: 60,\n                        marginLeft: 10,\n                        padding: 5,\n                      }}\n                    />\n                    <PdfSmall>{deptFooterItem?.fullName}</PdfSmall>\n                    <PdfSmall style={{marginTop: -4}}>\n                      {deptFooterItem?.userDegree}\n                    </PdfSmall>\n                    <PdfSmall style={{marginTop: -4}}>\n                      {deptFooterItem?.deginisation}\n                    </PdfSmall>\n                  </PdfView>\n                ))}\n              </PdfBorderView>\n            )}\n          </PdfView>\n        </>\n      ))}\n    </View>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfRegular,\n  PdfView,\n  PdfBorderView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\nimport {PdfPBTemp0001} from '../../page-branding/temp0001/temp0001.component';\nimport {PdfTPRTemp0001List} from './temp0001-list.component';\n\ninterface PdfTemp0001Props {\n  data: any;\n  isWithHeader?: boolean;\n}\n\nexport const PdfTemp0001 = observer(\n  ({data, isWithHeader = true}: PdfTemp0001Props) => {\n    const {pageBranding, patientReports} = data;\n    const [testBottomMarker, setTestBottomMarker] = useState<Array<any>>();\n    useEffect(() => {\n      const arrDetails: any = [];\n      patientReports?.patientResultList?.filter(item => {\n        arrDetails.push(item?.testHeader?.testBottomMarker?.details);\n      });\n      setTestBottomMarker(_.compact(_.uniq(arrDetails)));\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [patientReports]);\n\n    return (\n      <PdfPBTemp0001\n        data={pageBranding}\n        isWithHeader={isWithHeader}\n        children={\n          <>\n            {/* Address */}\n            <PdfView fixed>\n              <PdfRegular>{`${patientReports?.rLabCode || ''} - ${\n                patientReports?.rLabName || ''\n              }`}</PdfRegular>\n              <PdfRegular>{`${patientReports?.rLabAddress || ''}`}</PdfRegular>\n              <PdfRegular>{`${patientReports?.rLabCity || ''}`}</PdfRegular>\n            </PdfView>\n\n            {/* Patient Details */}\n            <PdfBorderView mv={10} fixed>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall fontSize={11}>{`Name: ${\n                    patientReports?.title || ''\n                  } ${patientReports?.firstName || ''} ${\n                    patientReports?.middleName || ''\n                  } ${patientReports?.lastName || ''}`}</PdfSmall>\n                  <PdfSmall>{`Lab No: ${\n                    patientReports?.labId || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`A/c Status: ${\n                    patientReports?.acStatus || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n                    patientReports?.ageUnits || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall>{`Ref By: ${\n                    patientReports?.refBy || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Gender: ${patientReports?.sex || ''}`}</PdfSmall>\n                </PdfGrid>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall>{`Collected: ${dayjs(\n                    patientReports?.collectionDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Registration: ${dayjs(\n                    patientReports?.registrationDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Reported: ${dayjs(\n                    patientReports?.reportedDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Report Status: ${\n                    patientReports?.reportStatus || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n              </PdfView>\n            </PdfBorderView>\n\n            {/* Table */}\n            <PdfTPRTemp0001List\n              headerStyle={{backgroundColor: 'transparent'}}\n              headerFixed\n              data={patientReports?.patientResultList}\n            />\n\n            {/* End of Page */}\n            <PdfView\n              style={{\n                position: 'absolute',\n                bottom: 65,\n                left: 5,\n                fontSize: 12,\n              }}\n              fixed\n            >\n              {testBottomMarker?.map(item => (\n                <PdfSmall>{` ${item}`}</PdfSmall>\n              ))}\n              {patientReports?.templatePatientResultLabWise?.endOfPage?.map(\n                item => (\n                  <PdfSmall>{` ${item?.details}`}</PdfSmall>\n                ),\n              )}\n            </PdfView>\n\n            {/* End of Report */}\n            <PdfView alignItems='center' style={{marginTop: 15}}>\n              <PdfRegular fontSize={13}>\n                ---------------------- End of report ----------------------\n              </PdfRegular>\n              <PdfBorderView\n                style={{width: '100%', minHeight: 15, marginTop: 20}}\n                mh={0}\n                p={0}\n              >\n                <PdfRegular\n                  style={{\n                    textDecoration: 'underline',\n                    textAlign: 'center',\n                  }}\n                  fontSize={10}\n                >\n                  IMPORTANT INSTRUCTIONS\n                </PdfRegular>\n\n                <PdfView flexDirection='row' style={{marginTop: 10}}>\n                  {patientReports?.templatePatientResultLabWise?.endOfReport?.map(\n                    item => (\n                      <PdfSmall>{` * ${item?.details}`}</PdfSmall>\n                    ),\n                  )}\n                </PdfView>\n              </PdfBorderView>\n            </PdfView>\n          </>\n        }\n      />\n    );\n  },\n);\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _ from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {PdfSmall, PdfBorderView, PdfImage, PdfView} from '@/library/components';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 20,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 5,\n  },\n  headerBg: {\n    backgroundColor: '#aaa',\n    borderStyle: 'solid',\n    borderColor: '#000',\n    borderWidth: 1,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfTPRTemp0002ListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data: Array<any>;\n}\n\nexport const PdfTPRTemp0002List = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfTPRTemp0002ListProps) => {\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Results',\n      width: '20',\n    },\n    {\n      title: 'Units',\n      width: '20',\n    },\n    {\n      title: 'Bio. Ref. Interval',\n      width: '20',\n    },\n  ];\n  const [patientResultList, setPatientResultList] = useState<Array<any>>();\n  useEffect(() => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        let panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          let testHeader: Array<any> = [];\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            // eslint-disable-next-line @typescript-eslint/no-loop-func\n            testItems.filter(testItem => {\n              testHeader.push({\n                testHeader: {\n                  testDescription: testKey,\n                  testMethodDescription:\n                    testItem?.testHeader?.testMethodDescription,\n                  testBottomMarker: testItem?.testHeader?.testBottomMarker,\n                  testRightMarker: testItem?.testHeader?.testRightMarker,\n                  tpmPrintTestName: testItem?.testHeader?.tpmPrintTestName,\n                  tpmTestMethod: testItem?.testHeader?.tpmTestMethod,\n                },\n                patientResultList: {\n                  analyte: testItem?.analyte,\n                  result: testItem?.result,\n                  units: testItem?.units,\n                  bioRefInterval: testItem?.bioRefInterval,\n                },\n                testFooter: {\n                  testInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.testInterpretation,\n                  tpmTestInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.tpmTestInterpretation,\n                },\n                reportOrder: testItem?.testReportOrder,\n              });\n            });\n          }\n          testHeader = _.orderBy(testHeader, 'reportOrder', 'asc');\n          panelHeader.push({\n            panelHeader: {\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              tpmPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPrintPanelName,\n              tpmPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPanelMethod,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            reportOrder: panelItems?.find(\n              pItem => pItem?.panelHeader?.panelDescription == panelKey,\n            )?.panelReportOrder,\n            testHeader,\n          });\n        }\n        panelHeader = _.orderBy(panelHeader, 'reportOrder', 'asc');\n        patientResultList.push({\n          departmentHeader: {\n            departmentName: deptKey,\n          },\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      setPatientResultList(patientResultList);\n    }\n  }, [data]);\n\n  return (\n    <View style={[styles.table, {...style}]}>\n      <View\n        style={[styles.tableRow, styles.headerBg, {...headerStyle}]}\n        fixed={headerFixed}\n      >\n        {fields.map((item, index) => (\n          <View key={index} style={[{width: item.width + '%'}]}>\n            <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n          </View>\n        ))}\n      </View>\n      {patientResultList?.map((deptItem, index) => (\n        <>\n          <PdfView key={index} mh={0} p={0}>\n            {/* Department Header */}\n            <PdfBorderView\n              style={{\n                width: '100%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={0}\n              borderColor='transparent'\n            >\n              <PdfSmall style={{marginLeft: 10}}>\n                {deptItem?.departmentHeader?.departmentName}\n              </PdfSmall>\n            </PdfBorderView>\n            {/* Panel Header */}\n            {deptItem.panelHeader.map((panelItem, index) => (\n              <>\n                <PdfBorderView\n                  style={{\n                    width: '100%',\n                  }}\n                  mh={0}\n                  mv={0}\n                  p={0}\n                  bw={0}\n                  borderColor='transparent'\n                >\n                  <PdfSmall style={{marginLeft: 10}}>\n                    {panelItem.panelHeader?.tpmPrintPanelName\n                      ? panelItem?.panelHeader?.panelDescription\n                      : ''}\n                  </PdfSmall>\n                  <PdfSmall\n                    style={{\n                      marginLeft: 10,\n                      fontSize: 8,\n                      marginTop: -2,\n                    }}\n                  >\n                    {panelItem?.panelHeader?.tpmPanelMethod\n                      ? panelItem?.panelHeader?.panelMethodDescription\n                      : ''}\n                  </PdfSmall>\n                </PdfBorderView>\n                {/* Test Header */}\n                {panelItem?.testHeader?.map((testItem, testIndex) => (\n                  <>\n                    <PdfBorderView\n                      style={{\n                        width: '100%',\n                      }}\n                      mh={0}\n                      mv={0}\n                      p={0}\n                      bw={0}\n                      borderColor='transparent'\n                    >\n                      {testItem.testHeader?.tpmPrintTestName ? (\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testHeader?.testDescription}{' '}\n                          {` ${testItem.testHeader?.testRightMarker}`}\n                        </PdfSmall>\n                      ) : null}\n                      <PdfSmall\n                        style={{\n                          marginLeft: 10,\n                          fontSize: 8,\n                          marginTop: -2,\n                        }}\n                      >\n                        {testItem?.testHeader?.tpmTestMethod\n                          ? testItem?.testHeader?.testMethodDescription\n                          : ''}\n                      </PdfSmall>\n                    </PdfBorderView>\n\n                    {/* Patient Result List */}\n\n                    <View key={testIndex} style={styles.tableRow}>\n                      {Object.entries(testItem?.patientResultList).map(\n                        (_item: any, _idx) => (\n                          <PdfBorderView\n                            key={testIndex}\n                            style={{\n                              width: fields[_idx]?.width + '%',\n                            }}\n                            mh={0}\n                            mv={0}\n                            p={0}\n                            bw={0}\n                            borderColor='transparent'\n                          >\n                            {typeof _item[1] == 'object' ? (\n                              <>\n                                <PdfSmall style={{marginLeft: 10}}>\n                                  {_item[1]?.analyteDescription}\n                                </PdfSmall>\n\n                                {_item[1]?.analyteMethod ? (\n                                  <PdfSmall\n                                    style={{marginLeft: 10, fontSize: 8}}\n                                  >\n                                    {_item[1]?.analyteMethodDescription}\n                                  </PdfSmall>\n                                ) : null}\n                                {_item[1]?.analyteInterpretation ? (\n                                  <PdfSmall\n                                    style={{marginLeft: 10, fontSize: 8}}\n                                  >\n                                    {_item[1]?.analyteMasterInterpretation}\n                                  </PdfSmall>\n                                ) : null}\n                              </>\n                            ) : (\n                              <PdfSmall style={{textAlign: 'center'}}>\n                                {_item[1] || ''}\n                              </PdfSmall>\n                            )}\n                          </PdfBorderView>\n                        ),\n                      )}\n                    </View>\n\n                    {/* Test Footer */}\n                    {testItem?.testFooter?.tpmTestInterpretation && (\n                      <PdfBorderView\n                        style={{\n                          width: '100%',\n                        }}\n                        mh={0}\n                        mv={0}\n                        p={0}\n                        bw={0}\n                        borderColor='transparent'\n                      >\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testFooter?.testInterpretation || ''}\n                        </PdfSmall>\n                      </PdfBorderView>\n                    )}\n                  </>\n                ))}\n\n                {/* Panel Footer */}\n                {panelItem?.panelFooter?.tpmPanelInterpretation && (\n                  <PdfBorderView\n                    style={{\n                      width: '100%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall style={{marginLeft: 10}}>\n                      {panelItem?.panelFooter?.panelInterpretation}\n                    </PdfSmall>\n                  </PdfBorderView>\n                )}\n              </>\n            ))}\n\n            {/* Department Footer */}\n            {deptItem?.departmentFooter?.userInfo?.length > 0 && (\n              <PdfBorderView\n                style={{\n                  width: '100%',\n                }}\n                mh={0}\n                mv={0}\n                p={0}\n                bw={0}\n                flexDirection='row'\n                borderColor='transparent'\n              >\n                {deptItem?.departmentFooter?.userInfo?.map(deptFooterItem => (\n                  <PdfView flexDirection='column' alignItems='center'>\n                    <PdfImage\n                      src={deptFooterItem?.signature}\n                      style={{\n                        width: 80,\n                        height: 60,\n                        marginLeft: 10,\n                        padding: 5,\n                      }}\n                    />\n                    <PdfSmall>{deptFooterItem?.fullName}</PdfSmall>\n                    <PdfSmall style={{marginTop: -4}}>\n                      {deptFooterItem?.userDegree}\n                    </PdfSmall>\n                    <PdfSmall style={{marginTop: -4}}>\n                      {deptFooterItem?.deginisation}\n                    </PdfSmall>\n                  </PdfView>\n                ))}\n              </PdfBorderView>\n            )}\n          </PdfView>\n        </>\n      ))}\n    </View>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfRegular,\n  PdfView,\n  PdfBorderView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\nimport {PdfPBTemp0001} from '../../page-branding/temp0001/temp0001.component';\nimport {PdfTPRTemp0002List} from './temp0002-list.component';\n\ninterface PdfTemp0002Props {\n  data: any;\n  isWithHeader?: boolean;\n}\n\nexport const PdfTemp0002 = observer(\n  ({data, isWithHeader = true}: PdfTemp0002Props) => {\n    const {pageBranding, patientReports} = data;\n    const [testBottomMarker, setTestBottomMarker] = useState<Array<any>>();\n    useEffect(() => {\n      const arrDetails: any = [];\n      patientReports?.patientResultList?.filter(item => {\n        arrDetails.push(item?.testHeader?.testBottomMarker?.details);\n      });\n      setTestBottomMarker(_.compact(_.uniq(arrDetails)));\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [patientReports]);\n\n    return (\n      <PdfPBTemp0001\n        data={pageBranding}\n        isWithHeader={isWithHeader}\n        children={\n          <>\n            {/* Address */}\n            <PdfView fixed>\n              <PdfRegular>{`${patientReports?.rLabCode || ''} - ${\n                patientReports?.rLabName || ''\n              }`}</PdfRegular>\n              <PdfRegular>{`${patientReports?.rLabAddress || ''}`}</PdfRegular>\n              <PdfRegular>{`${patientReports?.rLabCity || ''}`}</PdfRegular>\n            </PdfView>\n\n            {/* Patient Details */}\n            <PdfBorderView mv={10} fixed>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall fontSize={11}>{`Name: ${\n                    patientReports?.title || ''\n                  } ${patientReports?.firstName || ''} ${\n                    patientReports?.middleName || ''\n                  } ${patientReports?.lastName || ''}`}</PdfSmall>\n                  <PdfSmall>{`Lab No: ${\n                    patientReports?.labId || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`A/c Status: ${\n                    patientReports?.acStatus || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n                    patientReports?.ageUnits || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall>{`Ref By: ${\n                    patientReports?.refBy || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Gender: ${patientReports?.sex || ''}`}</PdfSmall>\n                </PdfGrid>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall>{`Collected: ${dayjs(\n                    patientReports?.collectionDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Registration: ${dayjs(\n                    patientReports?.registrationDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Reported: ${dayjs(\n                    patientReports?.reportedDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Report Status: ${\n                    patientReports?.reportStatus || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n              </PdfView>\n            </PdfBorderView>\n\n            {/* Table */}\n            <PdfTPRTemp0002List\n              headerStyle={{backgroundColor: 'transparent'}}\n              headerFixed\n              data={patientReports?.patientResultList}\n            />\n\n            {/* End of Page */}\n            <PdfView\n              style={{\n                position: 'absolute',\n                bottom: 65,\n                left: 5,\n                fontSize: 12,\n              }}\n              fixed\n            >\n              {testBottomMarker?.map(item => (\n                <PdfSmall>{` ${item}`}</PdfSmall>\n              ))}\n              {patientReports?.templatePatientResultLabWise?.endOfPage?.map(\n                item => (\n                  <PdfSmall>{` ${item?.details}`}</PdfSmall>\n                ),\n              )}\n            </PdfView>\n\n            {/* End of Report */}\n            <PdfView alignItems='center' style={{marginTop: 15}}>\n              <PdfRegular fontSize={13}>\n                ---------------------- End of report ----------------------\n              </PdfRegular>\n              <PdfBorderView\n                style={{width: '100%', minHeight: 15, marginTop: 20}}\n                mh={0}\n                p={0}\n              >\n                <PdfRegular\n                  style={{\n                    textDecoration: 'underline',\n                    textAlign: 'center',\n                  }}\n                  fontSize={10}\n                >\n                  IMPORTANT INSTRUCTIONS\n                </PdfRegular>\n\n                <PdfView flexDirection='row' style={{marginTop: 10}}>\n                  {patientReports?.templatePatientResultLabWise?.endOfReport?.map(\n                    item => (\n                      <PdfSmall>{` * ${item?.details}`}</PdfSmall>\n                    ),\n                  )}\n                </PdfView>\n              </PdfBorderView>\n            </PdfView>\n          </>\n        }\n      />\n    );\n  },\n);\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _ from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {PdfSmall, PdfBorderView, PdfImage, PdfView} from '@/library/components';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 20,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 5,\n  },\n  headerBg: {\n    backgroundColor: '#aaa',\n    borderStyle: 'solid',\n    borderColor: '#000',\n    borderWidth: 1,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfTPRTemp0003ListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data: Array<any>;\n}\n\nexport const PdfTPRTemp0003List = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfTPRTemp0003ListProps) => {\n  const [patientResultList, setPatientResultList] = useState<Array<any>>();\n  const [departmentFooter, setDepartmentFooter] = useState<Array<any>>([]);\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Results',\n      width: '20',\n    },\n    {\n      title: 'Units',\n      width: '20',\n    },\n    {\n      title: 'Bio. Ref. Interval',\n      width: '20',\n    },\n  ];\n\n  useEffect(() => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        let panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          let testHeader: Array<any> = [];\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            // eslint-disable-next-line @typescript-eslint/no-loop-func\n            testItems.filter(testItem => {\n              testHeader.push({\n                testHeader: {\n                  testDescription: testKey,\n                  testMethodDescription:\n                    testItem?.testHeader?.testMethodDescription,\n                  testBottomMarker: testItem?.testHeader?.testBottomMarker,\n                  testRightMarker: testItem?.testHeader?.testRightMarker,\n                  tpmPrintTestName: testItem?.testHeader?.tpmPrintTestName,\n                  tpmTestMethod: testItem?.testHeader?.tpmTestMethod,\n                },\n                patientResultList: {\n                  analyte: testItem?.analyte,\n                  result: testItem?.result,\n                  units: testItem?.units,\n                  bioRefInterval: testItem?.bioRefInterval,\n                },\n                testFooter: {\n                  testInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.testInterpretation,\n                  tpmTestInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.tpmTestInterpretation,\n                },\n                reportOrder: testItem?.testReportOrder,\n              });\n            });\n          }\n          testHeader = _.orderBy(testHeader, 'reportOrder', 'asc');\n          panelHeader.push({\n            panelHeader: {\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              tpmPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPrintPanelName,\n              tpmPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPanelMethod,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            reportOrder: panelItems?.find(\n              pItem => pItem?.panelHeader?.panelDescription == panelKey,\n            )?.panelReportOrder,\n            testHeader,\n          });\n        }\n        panelHeader = _.orderBy(panelHeader, 'reportOrder', 'asc');\n        patientResultList.push({\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      const userInfo: Array<any> = [];\n      patientResultList.map(item => {\n        return item?.departmentFooter?.userInfo?.filter(e => {\n          userInfo.push(e);\n        });\n      });\n      const departmentFooter = _.uniqBy(userInfo, function (e) {\n        return e?.userId;\n      });\n      setDepartmentFooter(departmentFooter);\n      setPatientResultList(patientResultList);\n    }\n  }, [data]);\n\n  return (\n    <View style={[styles.table, {...style}]}>\n      <View\n        style={[styles.tableRow, styles.headerBg, {...headerStyle}]}\n        fixed={headerFixed}\n      >\n        {fields.map((item, index) => (\n          <View key={index} style={[{width: item.width + '%'}]}>\n            <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n          </View>\n        ))}\n      </View>\n      {patientResultList?.map((deptItem, index) => (\n        <>\n          <PdfView key={index} mh={0} p={0}>\n            {/* Panel Header */}\n            {deptItem.panelHeader.map((panelItem, index) => (\n              <>\n                <PdfBorderView\n                  style={{\n                    width: '100%',\n                  }}\n                  mh={0}\n                  mv={0}\n                  p={0}\n                  bw={0}\n                  borderColor='transparent'\n                >\n                  <PdfSmall style={{marginLeft: 10}}>\n                    {panelItem.panelHeader?.tpmPrintPanelName\n                      ? panelItem?.panelHeader?.panelDescription\n                      : ''}\n                  </PdfSmall>\n                  <PdfSmall\n                    style={{\n                      marginLeft: 10,\n                      fontSize: 8,\n                      marginTop: -2,\n                    }}\n                  >\n                    {panelItem?.panelHeader?.tpmPanelMethod\n                      ? panelItem?.panelHeader?.panelMethodDescription\n                      : ''}\n                  </PdfSmall>\n                </PdfBorderView>\n                {/* Test Header */}\n                {panelItem?.testHeader?.map((testItem, testIndex) => (\n                  <>\n                    <PdfBorderView\n                      style={{\n                        width: '100%',\n                      }}\n                      mh={0}\n                      mv={0}\n                      p={0}\n                      bw={0}\n                      borderColor='transparent'\n                    >\n                      {testItem.testHeader?.tpmPrintTestName ? (\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testHeader?.testDescription}{' '}\n                          {` ${testItem.testHeader?.testRightMarker}`}\n                        </PdfSmall>\n                      ) : null}\n                      <PdfSmall\n                        style={{\n                          marginLeft: 10,\n                          fontSize: 8,\n                          marginTop: -2,\n                        }}\n                      >\n                        {testItem?.testHeader?.tpmTestMethod\n                          ? testItem?.testHeader?.testMethodDescription\n                          : ''}\n                      </PdfSmall>\n                    </PdfBorderView>\n\n                    {/* Patient Result List */}\n\n                    <View key={testIndex} style={styles.tableRow}>\n                      {Object.entries(testItem?.patientResultList).map(\n                        (_item: any, _idx) => (\n                          <PdfBorderView\n                            key={testIndex}\n                            style={{\n                              width: fields[_idx]?.width + '%',\n                            }}\n                            mh={0}\n                            mv={0}\n                            p={0}\n                            bw={0}\n                            borderColor='transparent'\n                          >\n                            {typeof _item[1] == 'object' ? (\n                              <>\n                                <PdfSmall style={{marginLeft: 10}}>\n                                  {_item[1]?.analyteDescription}\n                                </PdfSmall>\n\n                                {_item[1]?.analyteMethod ? (\n                                  <PdfSmall\n                                    style={{marginLeft: 10, fontSize: 8}}\n                                  >\n                                    {_item[1]?.analyteMethodDescription}\n                                  </PdfSmall>\n                                ) : null}\n                                {_item[1]?.analyteInterpretation ? (\n                                  <PdfSmall\n                                    style={{marginLeft: 10, fontSize: 8}}\n                                  >\n                                    {_item[1]?.analyteMasterInterpretation}\n                                  </PdfSmall>\n                                ) : null}\n                              </>\n                            ) : (\n                              <PdfSmall style={{textAlign: 'center'}}>\n                                {_item[1] || ''}\n                              </PdfSmall>\n                            )}\n                          </PdfBorderView>\n                        ),\n                      )}\n                    </View>\n\n                    {/* Test Footer */}\n                    {testItem?.testFooter?.tpmTestInterpretation && (\n                      <PdfBorderView\n                        style={{\n                          width: '100%',\n                        }}\n                        mh={0}\n                        mv={0}\n                        p={0}\n                        bw={0}\n                        borderColor='transparent'\n                      >\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testFooter?.testInterpretation || ''}\n                        </PdfSmall>\n                      </PdfBorderView>\n                    )}\n                  </>\n                ))}\n\n                {/* Panel Footer */}\n                {panelItem?.panelFooter?.tpmPanelInterpretation && (\n                  <PdfBorderView\n                    style={{\n                      width: '100%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall style={{marginLeft: 10}}>\n                      {panelItem?.panelFooter?.panelInterpretation}\n                    </PdfSmall>\n                  </PdfBorderView>\n                )}\n              </>\n            ))}\n          </PdfView>\n        </>\n      ))}\n      {/* Department Footer */}\n      {departmentFooter?.length > 0 && (\n        <PdfBorderView\n          style={{\n            width: '100%',\n          }}\n          mh={0}\n          mv={0}\n          p={0}\n          bw={0}\n          flexDirection='row'\n          borderColor='transparent'\n        >\n          {departmentFooter?.map(deptFooterItem => (\n            <PdfView flexDirection='column' alignItems='center'>\n              <PdfImage\n                src={deptFooterItem?.signature}\n                style={{\n                  width: 80,\n                  height: 60,\n                  marginLeft: 10,\n                  padding: 5,\n                }}\n              />\n              <PdfSmall>{deptFooterItem?.fullName}</PdfSmall>\n              <PdfSmall style={{marginTop: -4}}>\n                {deptFooterItem?.userDegree}\n              </PdfSmall>\n              <PdfSmall style={{marginTop: -4}}>\n                {deptFooterItem?.deginisation}\n              </PdfSmall>\n            </PdfView>\n          ))}\n        </PdfBorderView>\n      )}\n    </View>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfRegular,\n  PdfView,\n  PdfBorderView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\nimport {PdfPBTemp0001} from '../../page-branding/temp0001/temp0001.component';\nimport {PdfTPRTemp0003List} from './temp0003-list.component';\n\ninterface PdfTemp0003Props {\n  data: any;\n  isWithHeader?: boolean;\n}\n\nexport const PdfTemp0003 = observer(\n  ({data, isWithHeader = true}: PdfTemp0003Props) => {\n    const {pageBranding, patientReports} = data;\n    const [testBottomMarker, setTestBottomMarker] = useState<Array<any>>();\n    useEffect(() => {\n      const arrDetails: any = [];\n      patientReports?.patientResultList?.filter(item => {\n        arrDetails.push(item?.testHeader?.testBottomMarker?.details);\n      });\n      setTestBottomMarker(_.compact(_.uniq(arrDetails)));\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [patientReports]);\n\n    //console.log({report3: patientReports});\n\n    return (\n      <PdfPBTemp0001\n        data={pageBranding.pageBrandingRes}\n        templateSettings={pageBranding.templateSettingsRes}\n        isWithHeader={isWithHeader}\n        children={\n          <>\n            {/* Address */}\n            <PdfView fixed>\n              <PdfRegular>{`${patientReports?.rLabCode || ''} - ${\n                patientReports?.rLabName || ''\n              }`}</PdfRegular>\n              <PdfRegular>{`${patientReports?.rLabAddress || ''}`}</PdfRegular>\n              <PdfRegular>{`${patientReports?.rLabCity || ''}`}</PdfRegular>\n            </PdfView>\n\n            {/* Patient Details */}\n            <PdfBorderView mv={10} fixed>\n              <PdfView mh={0} p={0} flexDirection='row'>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall fontSize={11}>{`Name: ${\n                    patientReports?.title || ''\n                  } ${patientReports?.firstName || ''} ${\n                    patientReports?.middleName || ''\n                  } ${patientReports?.lastName || ''}`}</PdfSmall>\n                  <PdfSmall>{`Lab No: ${\n                    patientReports?.labId || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`A/c Status: ${\n                    patientReports?.acStatus || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n                    patientReports?.ageUnits || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall>{`Ref By: ${\n                    patientReports?.refBy || ''\n                  }`}</PdfSmall>\n                  <PdfSmall>{`Gender: ${patientReports?.sex || ''}`}</PdfSmall>\n                </PdfGrid>\n                <PdfGrid cols={3} bg='transparent'>\n                  <PdfSmall>{`Collected: ${dayjs(\n                    patientReports?.collectionDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Registration: ${dayjs(\n                    patientReports?.registrationDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Reported: ${dayjs(\n                    patientReports?.reportedDate,\n                  ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                  <PdfSmall>{`Report Status: ${\n                    patientReports?.reportStatus || ''\n                  }`}</PdfSmall>\n                </PdfGrid>\n              </PdfView>\n            </PdfBorderView>\n\n            {/* Table */}\n            <PdfTPRTemp0003List\n              headerStyle={{backgroundColor: 'transparent'}}\n              headerFixed\n              data={patientReports?.patientResultList}\n            />\n\n            {/* End of Page */}\n            <PdfView\n              style={{\n                position: 'absolute',\n                bottom: 65,\n                left: 5,\n                fontSize: 12,\n              }}\n              fixed\n            >\n              {testBottomMarker?.map(item => (\n                <PdfSmall>{` ${item}`}</PdfSmall>\n              ))}\n              {patientReports?.templatePatientResultLabWise?.endOfPage?.map(\n                item => (\n                  <PdfSmall>{` ${item?.details}`}</PdfSmall>\n                ),\n              )}\n            </PdfView>\n\n            {/* End of Report */}\n            <PdfView alignItems='center' style={{marginTop: 15}}>\n              <PdfRegular fontSize={13}>\n                ---------------------- End of report ----------------------\n              </PdfRegular>\n              <PdfBorderView\n                style={{width: '100%', minHeight: 15, marginTop: 20}}\n                mh={0}\n                p={0}\n              >\n                <PdfRegular\n                  style={{\n                    textDecoration: 'underline',\n                    textAlign: 'center',\n                  }}\n                  fontSize={10}\n                >\n                  IMPORTANT INSTRUCTIONS\n                </PdfRegular>\n                {patientReports?.templatePatientResultLabWise?.endOfReport\n                  ?.length > 0 && (\n                  <PdfView flexDirection='row' style={{marginTop: 10}}>\n                    {patientReports?.templatePatientResultLabWise?.endOfReport?.map(\n                      item => (\n                        <PdfSmall>{` * ${item?.details}`}</PdfSmall>\n                      ),\n                    )}\n                  </PdfView>\n                )}\n              </PdfBorderView>\n            </PdfView>\n          </>\n        }\n      />\n    );\n  },\n);\n","export {};\nimport React from 'react';\nimport {\n  PdfRegular,\n  PdfFooterView,\n  PdfSmall,\n} from '@components';\n\ninterface FooterProps {\n  data?: any;\n}\n\nexport const Footer = ({data}: FooterProps) => {\n  return (\n    <PdfFooterView fixed bg='white' p={5}>\n      <PdfSmall>\n        <PdfRegular style={{color: '#A52728'}}>Red. Address:</PdfRegular> 1310,\n        Behind SBI Bank, Badshahpur, Sohna Road, Sector 66, Gurugram, Haryana -\n        122101,\n      </PdfSmall>\n      {/* <PdfSmall>\n        <PdfRegular style={{color: '#A52728'}}>Lab Address:</PdfRegular>Opp.\n        Radha Krishna Mandir, Main Sohna Road, Badhshahpur, Sector 66, Gurugram,\n        Haryana - 122101\n      </PdfSmall> */}\n      <PdfSmall>\n        <PdfRegular style={{color: '#A52728'}}>Phone:</PdfRegular> +91\n        9810063340, 9354212163{' '}\n        <PdfRegular style={{color: '#A52728'}}>Email:</PdfRegular>{' '}\n        info@aarvakdiagnosticcentre.com\n      </PdfSmall>\n      <PdfRegular style={{color: '#A52728'}}>\n        www.aarvakdiagnosticcentre.com\n      </PdfRegular>\n    </PdfFooterView>\n  );\n};\n","import React from 'react';\nimport {\n  PdfHeader,\n  PdfView,\n  PdfImage,\n  PdfMedium,\n} from '@components';\nimport {logos} from '@/library/assets';\n\ninterface HeaderProps {\n  data?: any;\n}\n\nexport const Header = ({data}: HeaderProps) => {\n  return (\n    <PdfHeader\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}\n      bg='white'\n      fixed\n    >\n      <PdfImage\n        src={logos.aarvakDiagnosticCenter}\n        style={{\n          width: 100,\n          height: 100,\n          marginHorizontal: 10,\n        }}\n      />\n      <PdfView mh={0} p={0}>\n        <PdfMedium fontSize={14} style={{color: 'green'}}>\n          Committed to provide\n        </PdfMedium>\n        <PdfMedium style={{marginTop: -4}}>\n          <PdfMedium style={{color: '#A52728'}}>Best Diagnostic </PdfMedium>\n          Services<PdfMedium style={{color: 'green'}}>+</PdfMedium>\n        </PdfMedium>\n      </PdfView>\n    </PdfHeader>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  PdfFooterView,\n  PdfSmall,\n} from '@components';\nimport {Image, View} from '@react-pdf/renderer';\n\ninterface PdfTemp0001FooterProps {\n  data: any;\n}\n\nexport const PdfTemp0001Footer = ({data}: PdfTemp0001FooterProps) => {\n  const mainBoxCSS = useRef<any>({});\n  const titleCSS = useRef<any>({});\n  const subTitleCSS = useRef<any>({});\n  if (data.footer?.mainBoxCSS) {\n    try {\n      mainBoxCSS.current = eval('({' + data.footer?.mainBoxCSS + '})');\n    } catch (e) {\n      mainBoxCSS.current = {};\n    }\n  }\n  if (data.footer?.titleCSS) {\n    try {\n      titleCSS.current = eval('({' + data.footer?.titleCSS + '})');\n    } catch (e) {\n      titleCSS.current = {};\n    }\n  }\n  if (data.footer?.subTitleCSS) {\n    try {\n      subTitleCSS.current = eval('({' + data.footer?.subTitleCSS + '})');\n    } catch (e) {\n      subTitleCSS.current = {};\n    }\n  }\n\n  return (\n    <PdfFooterView fixed style={{...mainBoxCSS.current}}>\n      {data.footer?.backgroundImage && (\n        <>\n          <View\n            style={{\n              position: 'absolute',\n              bottom: 0,\n              left: 0,\n              right: 0,\n              top: 0,\n            }}\n            fixed={true}\n          >\n            <Image\n              object-fit='fill'\n              style={{\n                position: 'absolute',\n                bottom: 0,\n                left: 0,\n                right: 0,\n                top: 0,\n                objectFit: 'fill',\n              }}\n              source={{\n                uri:\n                  typeof data.footer?.backgroundImage == 'object'\n                    ? data.footer?.backgroundImageBase64\n                    : data.footer?.backgroundImage,\n                method: 'GET',\n                headers: {'Cache-Control': 'no-cache'},\n                body: '',\n              }}\n            />\n          </View>\n        </>\n      )}\n      <PdfSmall style={{textAlign: 'center', ...titleCSS.current}}>\n        {data.footer?.title || 'Title'}\n      </PdfSmall>\n      <PdfSmall style={{...subTitleCSS.current}}>{`${\n        data.footer?.subTitle || 'Tel: 1234'\n      }`}</PdfSmall>\n    </PdfFooterView>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  PdfHeading,\n  PdfHeader,\n  PdfImage,\n} from '@components';\nimport {Image, View} from '@react-pdf/renderer';\n\ninterface PdfTemp0001HeaderProps {\n  data: any;\n}\n\nexport const PdfTemp0001Header = ({data}: PdfTemp0001HeaderProps) => {\n  const headerTitleCSS = useRef<any>({});\n  const headerMainBoxCSS = useRef<any>({});\n  const imageCSS = useRef<any>({});\n  if (data.header?.titleCSS) {\n    try {\n      headerTitleCSS.current = eval('({' + data.header?.titleCSS + '})');\n    } catch (e) {\n      headerTitleCSS.current = {};\n    }\n  }\n  if (data.header?.mainBoxCSS) {\n    try {\n      headerMainBoxCSS.current = eval('({' + data.header?.mainBoxCSS + '})');\n    } catch (e) {\n      headerMainBoxCSS.current = {};\n    }\n  }\n  if (data.header?.logoCSS) {\n    try {\n      imageCSS.current = eval('({' + data.header?.logoCSS + '})');\n    } catch (e) {\n      imageCSS.current = {};\n    }\n  }\n\n  //\n  return (\n    <>\n      <PdfHeader\n        style={{\n          flexDirection: 'row',\n          alignItems: 'center',\n          ...headerMainBoxCSS.current,\n        }}\n        fixed\n      >\n        {data.header?.backgroundImage && (\n          <>\n            <View\n              style={{\n                position: 'absolute',\n                bottom: 0,\n                left: 0,\n                right: 0,\n                top: 0,\n              }}\n              fixed={true}\n            >\n              <Image\n                object-fit='fill'\n                style={{\n                  position: 'absolute',\n                  bottom: 0,\n                  left: 0,\n                  right: 0,\n                  top: 0,\n                  objectFit: 'fill',\n                }}\n                source={{\n                  uri:\n                    typeof data.header?.backgroundImage == 'object'\n                      ? data.header?.backgroundImageBase64\n                      : data.header?.backgroundImage,\n                  method: 'GET',\n                  headers: {'Cache-Control': 'no-cache'},\n                  body: '',\n                }}\n              />\n            </View>\n          </>\n        )}\n        {data.header?.logo && (\n          <PdfImage\n            src={data.header?.logo}\n            style={{\n              width: 50,\n              height: 50,\n              borderRadius: 25,\n              marginHorizontal: 10,\n              ...imageCSS.current,\n            }}\n          />\n        )}\n        <PdfHeading style={headerTitleCSS.current}>\n          {data.header?.title || 'Title'}\n        </PdfHeading>\n      </PdfHeader>\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  PdfRegular,\n  PdfSubHeader,\n} from '@components';\n\ninterface PdfTemp0001SubHeaderProps {\n  data: any;\n}\n\nexport const PdfTemp0001SubHeader = ({data}: PdfTemp0001SubHeaderProps) => {\n  const mainBoxCSS = useRef<any>({});\n  const titleCSS = useRef<any>({});\n  const subTitleCSS = useRef<any>({});\n  if (data.subHeader?.mainBoxCSS) {\n    try {\n      mainBoxCSS.current = eval('({' + data.subHeader?.mainBoxCSS + '})');\n    } catch (e) {\n      mainBoxCSS.current = {};\n    }\n  }\n  if (data.subHeader?.titleCSS) {\n    try {\n      titleCSS.current = eval('({' + data.subHeader?.titleCSS + '})');\n    } catch (e) {\n      titleCSS.current = {};\n    }\n  }\n  if (data.subHeader?.subTitleCSS) {\n    try {\n      subTitleCSS.current = eval('({' + data.subHeader?.subTitleCSS + '})');\n    } catch (e) {\n      subTitleCSS.current = {};\n    }\n  }\n\n  return (\n    <PdfSubHeader style={{...mainBoxCSS.current}} fixed>\n      <PdfRegular style={{...titleCSS.current}}>\n        {data.subHeader?.title || 'Title'}\n      </PdfRegular>\n      <PdfRegular style={{...subTitleCSS.current}}>{`${\n        data.subHeader?.subTitle || 'web-url'\n      }`}</PdfRegular>\n    </PdfSubHeader>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  Font,\n} from '@react-pdf/renderer';\nimport {\n  PdfView,\n  PdfFooterView,\n} from '@components';\nimport {observer} from 'mobx-react';\nimport {PdfTSTemp0001} from '../../page-layout/temp0001/temp0001.component';\n\nimport {PdfTemp0001Header} from './temp0001-header.component';\nimport {PdfTemp0001SubHeader} from './temp0001-sub-header.component';\nimport {PdfTemp0001Footer} from './temp0001-footer.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\ninterface PdfPBTemp0001Props {\n  data: any;\n  templateSettings?: any;\n  isWithHeader?: boolean;\n  children?: any;\n}\n\nexport const PdfPBTemp0001 = observer(\n  ({\n    data,\n    templateSettings,\n    isWithHeader = true,\n    children,\n  }: PdfPBTemp0001Props) => {\n    const pageNumberCSS = useRef<any>({});\n    if (data?.pageNumber?.pageNumberCSS) {\n      try {\n        pageNumberCSS.current = eval(\n          '({' + data?.pageNumber?.pageNumberCSS + '})',\n        );\n      } catch (e) {\n        pageNumberCSS.current = {};\n      }\n    }\n\n    return (\n      <PdfTSTemp0001\n        height={window.innerHeight / 1.3}\n        documentTitle='Page Branding'\n        isToolbar={templateSettings?.isToolbar}\n        isBackgroundImage={templateSettings?.isBackgroundImage || ''}\n        backgroundImage={templateSettings?.backgroundImage || ''}\n        mainBoxCSS={templateSettings?.mainBoxCSS}\n        pageSize={templateSettings?.pageSize}\n        isWithHeader={isWithHeader}\n        children={\n          <>\n            <PdfView style={{height: 100}} fixed mh={0} p={0}>\n              {isWithHeader && (\n                <>\n                  {/* Header */}\n                  {data?.isHeader && <PdfTemp0001Header data={data} />}\n\n                  {/* Sub Header */}\n                  {data?.isSubHeader && <PdfTemp0001SubHeader data={data} />}\n                </>\n              )}\n            </PdfView>\n\n            {/* children */}\n            {children}\n\n            {/* Page Number */}\n            {/* {data?.isPdfPageNumber && (\n              <PdfPageNumber style={{...pageNumberCSS.current}} />\n            )} */}\n\n            <PdfFooterView fixed bg='transparent' style={{height: 40}} p={0}>\n              {isWithHeader && data?.isFooter && (\n                <PdfTemp0001Footer data={data} />\n              )}\n            </PdfFooterView>\n          </>\n        }\n      />\n    );\n  },\n);\n","import React, {useRef} from 'react';\nimport {\n  Page,\n  StyleSheet,\n  Font,\n  Image,\n  View,\n} from '@react-pdf/renderer';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTSTemp0001Props {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize: any;\n  mainBoxCSS?: any;\n  isWithHeader?: boolean;\n  children: React.ReactNode;\n}\n\nexport const PdfTSTemp0001 = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Page Layout',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage = '',\n  mainBoxCSS = {},\n  pageSize,\n  isWithHeader = true,\n  children,\n}: PdfTSTemp0001Props) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {isToolbar ? (\n        <Page size={pageSize} style={boxCSS.current}>\n          {isBackgroundImage && isWithHeader && (\n            <View\n              style={{\n                position: 'absolute',\n                bottom: 0,\n                left: 0,\n                right: 0,\n                top: 0,\n              }}\n              fixed={true}\n            >\n              <Image\n                object-fit='fill'\n                style={{\n                  position: 'absolute',\n                  bottom: 0,\n                  left: 0,\n                  right: 0,\n                  top: 0,\n                  objectFit: 'fill',\n                }}\n                src={backgroundImage}\n              />\n            </View>\n          )}\n\n          {children}\n        </Page>\n      ) : (\n        <Page size={pageSize} style={boxCSS.current}>\n          {isBackgroundImage && isWithHeader && (\n            <View\n              style={{\n                position: 'absolute',\n                bottom: 0,\n                left: 0,\n                right: 0,\n                top: 0,\n              }}\n              fixed={true}\n            >\n              <Image\n                object-fit='fill'\n                style={{\n                  position: 'absolute',\n                  bottom: 0,\n                  left: 0,\n                  right: 0,\n                  top: 0,\n                  objectFit: 'fill',\n                }}\n                src={{\n                  uri: backgroundImage,\n                  method: 'GET',\n                  headers: {'Cache-Control': 'no-cache'},\n                  body: '',\n                }}\n              />\n            </View>\n          )}\n          {children}\n        </Page>\n      )}\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  Page,\n  Document,\n  StyleSheet,\n  Font,\n} from '@react-pdf/renderer';\nimport {PdfSmall} from '@components';\nimport {Header} from '../../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Footer} from '../../../common/aarvak-diagnostic-center/pdf-footer.component';\nimport {PdfMedicialFitnessCertificate} from './pdf-medicial-fitness-certificate';\nimport {PdfMedicalCheckup} from './pdf-medical-checkup';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface ADCMedicalReportPdfProps {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const ADCMedicalReportPdf = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Template Settings',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: ADCMedicalReportPdfProps) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {/* <PDFViewer style={{width, height}} showToolbar={isToolbar}> */}\n      <Document title={documentTitle}>\n        <Page size={pageSize} style={boxCSS.current}>\n          <Header />\n          <PdfMedicialFitnessCertificate />\n          <PdfMedicalCheckup />\n          <PdfSmall style={{left: 20, marginTop: 10}} fixed>\n            Registration No.: 0887687987678\n          </PdfSmall>\n          <Footer />\n        </Page>\n      </Document>\n      {/* </PDFViewer> */}\n    </>\n  );\n};\n","import React from 'react';\nimport { StyleSheet} from '@react-pdf/renderer';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n} from '@/library/components';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfMedicalCheckupProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfMedicalCheckup = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfMedicalCheckupProps) => {\n  return (\n    <>\n      {/* S.No */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row'}}\n        isBreak={true}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>S.No :- 101</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Medical Checkup</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Date</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>22/04/2022</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Company/Address */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Company/Address</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`M/S Haldiram Ethnic Foods Private Limited \n          (SPICE MALL)`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n      {/* Name */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Name</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>BIKASH HALDAR</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Age/Sex</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>18 YRS</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* EMP. CODE */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>EMP. CODE</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>87698798</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Gender</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>MALE</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Job Description */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Job Description</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '30%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '30%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Department</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Present Complaints */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Present Complaints</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NO ANY Complaints</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Past History */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Past History</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NO</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Smoking */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Smoking</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>YES</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '40%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Alcohol</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n          }}\n        >\n          <PdfSmall textAlign='center'>Yes</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Other Relevant Information */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Other Relevant \n          Information`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NO</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Physical Examination */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '100%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{'Physical Examination'}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Height */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Height</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>167 CMS</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Weight</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>68 KGS</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Pulse</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>68/MIN</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>BP</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>122/70 mmHg</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Skin */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Skin</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Respiratory System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Respiratory\n          System`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Cardiovascular */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Cardiovascular'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Nervous System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Nervous System'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* G.I.System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'G.I.System'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Vision */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Vision'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Hearing */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Hearing'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Blood Test */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Blood Test'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>REPORT ATTACH</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Final Observation */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Final Observation'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Final Observation */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Signature of\n          Medical Examiner`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n    </>\n  );\n};\n","import React from 'react';\nimport {\n  PdfRegular,\n  PdfMedium,\n  PdfView,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfMedicialFitnessCertificateProps {\n  data?: any;\n}\n\nexport const PdfMedicialFitnessCertificate = observer(\n  ({data}: PdfMedicialFitnessCertificateProps) => {\n    return (\n      <PdfView>\n        <PdfSmall style={{alignSelf: 'flex-end', marginTop: -30}}>\n          {'S.NO - 101'}\n        </PdfSmall>\n        <PdfMedium textAlign='center'>\n          PERFORMA FOR MEDICIAL FITNESS CERTIFICATE FOR FOOD HANDLERS\n        </PdfMedium>\n        <PdfMedium textAlign='center'>(FOR THE YEAR...2022)</PdfMedium>\n        <PdfRegular textAlign='center'>\n          (see Para No. 10.1.2, Part-II, Schedule-4 of FSS Regulation, 2011)\n        </PdfRegular>\n        <PdfRegular style={{marginTop: 20}}>\n          {\n            'It is certified that Mr/Mrs./Miss BIKASH HALDAR Age 18 yrs MALE Emp.Code 0 5003849 is having employed with M/s Haldiram Ethnic Foods Private Limited, SPICE MALL coming in direct contact with food items has been carefully examined* by me on date 22/02/2022.'\n          }\n        </PdfRegular>\n        <PdfRegular style={{marginTop: 20}}>\n          {\n            'Based on the medical examination conducted, he/she is found free from any infectious or communicable diseases and then person is fit to work in the above mentioned food establishment.'\n          }\n        </PdfRegular>\n\n        <PdfRegular style={{marginTop: 30}}>\n          {'Typhoid Vaccine Batch No.- 876876978A, Given on 22/04/2022.'}\n        </PdfRegular>\n        <PdfRegular>\n          {'Hepatitis B Vaccine Batch No.- 8769879A, Given on 22/04/2022'}\n        </PdfRegular>\n        <PdfView alignItems='flex-end' mt={30}>\n          <PdfMedium fontSize={14} fontFamily='Times-Bold'>\n            Name and Signature with Seal\n          </PdfMedium>\n          <PdfRegular>{`of registered Medical Practitioner/\n          Civil Surgeon`}</PdfRegular>\n        </PdfView>\n        <PdfView style={{marginTop: 40}}>\n          <PdfRegular style={{textDecoration: 'underline'}}>\n            Medical examination to be conducted:\n          </PdfRegular>\n          <PdfView mh={15}>\n            <PdfRegular>1. Physical Examination</PdfRegular>\n            <PdfRegular>2. Eye Test</PdfRegular>\n            <PdfRegular>3. Skin examination</PdfRegular>\n            <PdfRegular>\n              4. Compliance with schedule of Vaccine to be inoculated against\n              enteric group of diseases\n            </PdfRegular>\n            <PdfRegular>\n              5. Any test required to confirm any communicable of infectious\n              disease which the person\n            </PdfRegular>\n            <PdfRegular style={{marginLeft: 12}}>\n              suspected to be suffering from on clinical examination.\n            </PdfRegular>\n          </PdfView>\n        </PdfView>\n      </PdfView>\n    );\n  },\n);\n","import React, { useRef} from 'react';\nimport {\n  Page,\n  Document,\n  StyleSheet,\n  Font,\n} from '@react-pdf/renderer';\nimport {PdfPageNumber} from '@components';\nimport {PdfPatientDetails} from './pdf-patient-details.component';\nimport {PdfResultList} from './pdf-result-list.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface ADCWithoutHeaderFooterPdfProps {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const ADCWithoutHeaderFooterPdf = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Template Settings',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: ADCWithoutHeaderFooterPdfProps) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {/* <PDFViewer style={{width, height}} showToolbar={isToolbar}> */}\n      <Document title={documentTitle}>\n        <Page size={pageSize} style={boxCSS.current}>\n          <PdfPatientDetails />\n          <PdfResultList />\n          <PdfPageNumber\n            style={{textAlign: 'center', right: '45%'}}\n            bottom={10}\n          />\n        </Page>\n      </Document>\n      {/* </PDFViewer> */}\n    </>\n  );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport {\n  PdfView,\n  PdfBorderView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfPatientDetailsProps {\n  data?: any;\n}\n\nexport const PdfPatientDetails = observer(({data}: PdfPatientDetailsProps) => {\n  return (\n    <PdfBorderView mv={10} fixed>\n      <PdfView mh={10} p={0} flexDirection='row'>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall fontSize={11}>{'Name: MR. NITESH AHLAWAT'}</PdfSmall>\n          <PdfSmall>{'Ref. By: Dr.MEENAKSHI SHUKLA'}</PdfSmall>\n          <PdfSmall>{'Ref Lab: '}</PdfSmall>\n        </PdfGrid>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall>{'Srl No: 5'}</PdfSmall>\n          <PdfSmall>{'Age: 27 Yrs'}</PdfSmall>\n          <PdfSmall>{'Sex: Female'}</PdfSmall>\n        </PdfGrid>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall>{'Patient Id: 869876987'}</PdfSmall>\n          <PdfSmall>{`Samp. Collected: ${dayjs().format(\n            'DD/MM/YYYY',\n          )}`}</PdfSmall>\n          <PdfSmall>{`Reporting Date: ${dayjs().format(\n            'DD/MM/YYYY hh:mm:ss A',\n          )}`}</PdfSmall>\n        </PdfGrid>\n      </PdfView>\n    </PdfBorderView>\n  );\n});\n","import React from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfImage,\n} from '@/library/components';\nimport {images} from '@/library/assets';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfResultListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfResultList = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfResultListProps) => {\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Value',\n      width: '20',\n    },\n    {\n      title: 'Unit',\n      width: '20',\n    },\n    {\n      title: 'Normal Value',\n      width: '20',\n    },\n  ];\n\n  const resultList: any = [\n    {\n      title: 'HAEMOGLOBIN (Hb)',\n      value: '12.0',\n      unit: 'gm/dl',\n      normalValue: '12 - 15',\n    },\n    {\n      title: 'TOTAL LEUCOCYTE COUNT (TLC)',\n      value: '4,900',\n      unit: '/cumm',\n      normalValue: '4000 - 11000',\n    },\n  ];\n\n  for (let index = 0; index < 30; index++) {\n    resultList.push(resultList[index % 2]);\n  }\n\n  return (\n    <>\n      <View style={[styles.table, {...style}]}>\n        <View style={[styles.tableRow, {...headerStyle}]} fixed={headerFixed}>\n          {fields.map((item, index) => (\n            <View key={index} style={[{width: item.width + '%'}]}>\n              <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n            </View>\n          ))}\n        </View>\n        {resultList?.map((item, index) => (\n          <>\n            <PdfView key={index} mh={0} p={0}>\n              {/* Department Header */}\n              {/* <PdfBorderView\n              style={{\n                width: '100%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={0}\n              borderColor='transparent'\n            >\n              <PdfSmall style={{marginLeft: 10}}>{item.title}</PdfSmall>\n            </PdfBorderView> */}\n              <View key={index} style={styles.tableRow}>\n                {Object.entries(item).map((_item: any, _idx) => (\n                  <PdfBorderView\n                    key={_idx}\n                    style={{\n                      width: fields[_idx]?.width + '%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall style={{textAlign: 'center'}}>\n                      {_item[1] || ''}\n                    </PdfSmall>\n                  </PdfBorderView>\n                ))}\n              </View>\n            </PdfView>\n          </>\n        ))}\n      </View>\n      <PdfView style={{marginTop: 10}}>\n        <PdfSmall style={{textAlign: 'center'}}>\n          ---------------------- End of report ----------------------\n        </PdfSmall>\n        <PdfView alignItems='flex-end'>\n          <PdfImage\n            src={images.signAparajita}\n            style={{\n              width: 50,\n              height: 40,\n            }}\n          />\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'Dr.Aparajita Sharma'}\n          </PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>{'MBBS, MD'}</PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'CONSULTANT PATHOLOGIST'}\n          </PdfSmall>\n        </PdfView>\n      </PdfView>\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {Page, Document, StyleSheet, Font} from '@react-pdf/renderer';\nimport {PdfPageNumber} from '@components';\nimport {Header} from '../../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Footer} from '../../../common/aarvak-diagnostic-center/pdf-footer.component';\nimport {PdfPatientDetails} from './pdf-patient-details.component';\nimport {PdfResultList} from './pdf-result-list.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface ADCPdfProps {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const ADCPdf = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Template Settings',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: ADCPdfProps) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {/* <PDFViewer style={{width, height}} showToolbar={isToolbar}> */}\n      <Document title={documentTitle}>\n        <Page size={pageSize} style={boxCSS.current}>\n          <Header />\n          <PdfPatientDetails />\n          <PdfResultList />\n          <PdfPageNumber\n            style={{textAlign: 'center', right: '45%'}}\n            bottom={77}\n          />\n          <Footer />\n        </Page>\n      </Document>\n      {/* </PDFViewer> */}\n    </>\n  );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport {\n  PdfView,\n  PdfBorderView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfPatientDetailsProps {\n  data?: any;\n}\n\nexport const PdfPatientDetails = observer(({data}: PdfPatientDetailsProps) => {\n  return (\n    <PdfBorderView mv={10} fixed>\n      <PdfView mh={10} p={0} flexDirection='row'>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall fontSize={11}>{'Name: MR. NITESH AHLAWAT'}</PdfSmall>\n          <PdfSmall>{'Ref. By: Dr.MEENAKSHI SHUKLA'}</PdfSmall>\n          <PdfSmall>{'Ref Lab: '}</PdfSmall>\n        </PdfGrid>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall>{'Sr No: 5'}</PdfSmall>\n          <PdfSmall>{'Age: 27 Yrs'}</PdfSmall>\n          <PdfSmall>{'Sex: Female'}</PdfSmall>\n        </PdfGrid>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall>{'Patient Id: 869876987'}</PdfSmall>\n          <PdfSmall>{`Samp. Collected: ${dayjs().format(\n            'DD/MM/YYYY',\n          )}`}</PdfSmall>\n          <PdfSmall>{`Reporting Date: ${dayjs().format(\n            'DD/MM/YYYY hh:mm:ss A',\n          )}`}</PdfSmall>\n        </PdfGrid>\n      </PdfView>\n    </PdfBorderView>\n  );\n});\n","import React from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfImage,\n} from '@/library/components';\nimport {images} from '@/library/assets';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfResultListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfResultList = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfResultListProps) => {\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Value',\n      width: '20',\n    },\n    {\n      title: 'Unit',\n      width: '20',\n    },\n    {\n      title: 'Normal Value',\n      width: '20',\n    },\n  ];\n\n  const resultList: any = [\n    {\n      title: 'HAEMOGLOBIN (Hb)',\n      value: '12.0',\n      unit: 'gm/dl',\n      normalValue: '12 - 15',\n    },\n    {\n      title: 'TOTAL LEUCOCYTE COUNT (TLC)',\n      value: '4,900',\n      unit: '/cumm',\n      normalValue: '4000 - 11000',\n    },\n  ];\n\n  for (let index = 0; index < 30; index++) {\n    resultList.push(resultList[index % 2]);\n  }\n\n  return (\n    <>\n      <View style={[styles.table, {...style}]}>\n        <View style={[styles.tableRow, {...headerStyle}]} fixed={headerFixed}>\n          {fields.map((item, index) => (\n            <View key={index} style={[{width: item.width + '%'}]}>\n              <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n            </View>\n          ))}\n        </View>\n        {resultList?.map((item, index) => (\n          <>\n            <PdfView key={index} mh={0} p={0}>\n              {/* Department Header */}\n              {/* <PdfBorderView\n              style={{\n                width: '100%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={0}\n              borderColor='transparent'\n            >\n              <PdfSmall style={{marginLeft: 10}}>{item.title}</PdfSmall>\n            </PdfBorderView> */}\n              <View key={index} style={styles.tableRow}>\n                {Object.entries(item).map((_item: any, _idx) => (\n                  <PdfBorderView\n                    key={_idx}\n                    style={{\n                      width: fields[_idx]?.width + '%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall style={{textAlign: 'center'}}>\n                      {_item[1] || ''}\n                    </PdfSmall>\n                  </PdfBorderView>\n                ))}\n              </View>\n            </PdfView>\n          </>\n        ))}\n      </View>\n      <PdfView style={{marginTop: 10}}>\n        <PdfSmall style={{textAlign: 'center'}}>\n          ---------------------- End of report ----------------------\n        </PdfSmall>\n        <PdfView alignItems='flex-end'>\n          <PdfImage\n            src={images.signAparajita}\n            style={{\n              width: 50,\n              height: 40,\n            }}\n          />\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'Dr.Aparajita Sharma'}\n          </PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>{'MBBS, MD'}</PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'CONSULTANT PATHOLOGIST'}\n          </PdfSmall>\n        </PdfView>\n      </PdfView>\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {Page, StyleSheet, Font} from '@react-pdf/renderer';\nimport {PdfPageNumber, PdfView, PdfFooterView} from '@components';\nimport {Header} from '../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Footer} from '../../common/aarvak-diagnostic-center/pdf-footer.component';\nimport {PdfPatientDetails} from './pdf-patient-details.component';\nimport {PdfResultList} from './pdf-result-list.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTemp0004Props {\n  data?: any;\n  isWithHeader?: boolean;\n  width?: string | number;\n  height?: number | string;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const PdfTemp0004 = ({\n  data,\n  isWithHeader = true,\n  width = '100%',\n  height = '90%',\n  documentTitle = 'Aarvak Diagnostic Center Without',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTemp0004Props) => {\n  const {patientReports} = data;\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      <Page size={pageSize} style={boxCSS.current}>\n        <PdfView style={{height: 100}} fixed mh={0} p={0}>\n          {isWithHeader && <Header />}\n        </PdfView>\n        <PdfPatientDetails data={patientReports} />\n        <PdfResultList data={patientReports?.patientResultList} />\n        <PdfPageNumber\n          style={{textAlign: 'center', right: '45%'}}\n          bottom={80}\n        />\n        <PdfFooterView fixed bg='transparent' style={{height: 90}} p={0}>\n          {isWithHeader && <Footer />}\n        </PdfFooterView>\n      </Page>\n    </>\n  );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport {PdfView, PdfBorderView, PdfGrid, PdfSmall} from '@components';\nimport {observer} from 'mobx-react';\nimport {getAgeUnits, getSex} from '@/core-utils';\n\ninterface PdfPatientDetailsProps {\n  data?: any;\n}\n\nexport const PdfPatientDetails = observer(\n  ({data: patientReports}: PdfPatientDetailsProps) => {\n    return (\n      <PdfBorderView mv={16} fixed>\n        <PdfView mh={10} p={0} flexDirection='row'>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{`Name: ${patientReports?.title || ''} ${\n              patientReports?.firstName || ''\n            } ${patientReports?.middleName || ''} ${\n              patientReports?.lastName || ''\n            }`}</PdfSmall>\n            <PdfSmall>{`Ref. By: ${patientReports?.refBy}`}</PdfSmall>\n            <PdfSmall>{`Ref Lab: ${patientReports?.refLab}`}</PdfSmall>\n          </PdfGrid>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{`Sr No: ${patientReports?.labId?.toString()}`}</PdfSmall>\n            <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n              getAgeUnits(patientReports?.ageUnits) || ''\n            }`}</PdfSmall>\n            <PdfSmall>{`Sex: ${getSex(patientReports?.sex) || ''}`}</PdfSmall>\n          </PdfGrid>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{`Patient Id: ${patientReports?.pId?.toString()}`}</PdfSmall>\n            <PdfSmall fontSize={9}>{`Samp. Collected: ${dayjs(\n              patientReports?.collectionDate,\n            ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n            <PdfSmall fontSize={9}>{`Reporting Date: ${dayjs(\n              patientReports?.reportedDate,\n            ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n          </PdfGrid>\n        </PdfView>\n      </PdfBorderView>\n    );\n  },\n);\n","import React from 'react';\nimport { Text, View, StyleSheet, Font } from '@react-pdf/renderer';\nimport _ from 'lodash';\nimport { Style } from '@react-pdf/types';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfImage,\n} from '@/library/components';\n\nFont.register({\n  family: 'arimaBold',\n  src: 'https://fonts.googleapis.com/css2?family=Arima:wght@500&display=swap',\n});\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfResultListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfResultList = ({\n  headerFixed = false,\n  data = [],\n  style,\n  headerStyle,\n}: PdfResultListProps) => {\n  const userInfo: Array<any> = [];\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Value',\n      width: '20',\n    },\n    {\n      title: 'Unit',\n      width: '20',\n    },\n    {\n      title: 'Normal Value',\n      width: '20',\n    },\n  ];\n\n  const getPatientResultList = data => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        let panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          let testHeader: Array<any> = [];\n\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            const analyteList = _.groupBy(\n              testItems,\n              (o: any) => o.analyte?.analyteDescription,\n            );\n            let patientResultList: any = [];\n            for (const [analyteKey, analyteItems] of Object.entries(\n              analyteList,\n            )) {\n              patientResultList.push({\n                analyteName: analyteKey,\n                value: {\n                  ...analyteItems[0],\n                  analyteType: analyteItems[0]?.panelHeader?.analyteType,\n                  ...analyteItems[0]?.analyte,\n                },\n                reportOrder: analyteItems[0]?.analyteReportOrder || 0,\n              });\n            }\n            patientResultList = _.orderBy(\n              patientResultList,\n              'reportOrder',\n              'asc',\n            );\n            testHeader.push({\n              testHeader: {\n                testDescription: testKey,\n                testMethodDescription: testItems?.find(\n                  testItem => testItem?.testHeader?.testDescription == testKey,\n                )?.testHeader?.testMethodDescription,\n                testBottomMarker: testItems?.find(\n                  testItem => testItem?.testHeader?.testDescription == testKey,\n                )?.testHeader?.testBottomMarker,\n                testRightMarker: testItems?.find(\n                  testItem => testItem?.testHeader?.testDescription == testKey,\n                )?.testHeader?.testRightMarker,\n                isPrintTestName: testItems?.find(\n                  testItem => testItem?.testHeader?.testDescription == testKey,\n                )?.testHeader?.isPrintTestName,\n                isTestMethod: testItems?.find(\n                  testItem => testItem?.testHeader?.testDescription == testKey,\n                )?.testHeader?.isTestMethod,\n              },\n              testFooter: {\n                testInterpretation: testItems?.find(\n                  testItem => testItem?.testHeader?.testDescription == testKey,\n                )?.testFooter?.testInterpretation,\n                tpmTestInterpretation: testItems?.find(\n                  testItem => testItem?.testHeader?.testDescription == testKey,\n                )?.testFooter?.tpmTestInterpretation,\n              },\n              reportOrder: testItems?.find(\n                testItem => testItem?.testHeader?.testDescription == testKey,\n              )?.testReportOrder,\n              patientResultList,\n            });\n          }\n\n          testHeader = _.orderBy(testHeader, 'reportOrder', 'asc');\n\n          panelHeader.push({\n            panelHeader: {\n              analyteType: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.analyteType,\n              analyteDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.analyteDescription,\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              isPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.isPrintPanelName,\n              isPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.isPanelMethod,\n              critical: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.critical,\n              abnFlag: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.abnFlag,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            reportOrder: panelItems?.find(\n              pItem => pItem?.panelHeader?.panelDescription == panelKey,\n            )?.panelReportOrder,\n            isPMPageBreak: panelItems?.find(\n              pItem => pItem?.panelHeader?.panelDescription == panelKey,\n            )?.panelHeader?.isPMPageBreak,\n            testHeader,\n          });\n        }\n\n        panelHeader = _.orderBy(panelHeader, 'reportOrder', 'asc');\n\n        patientResultList.push({\n          departmentHeader: {\n            departmentName: deptKey,\n          },\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      return patientResultList;\n    }\n    return [];\n  };\n\n  const omitEmpty = value => {\n    if (value == 'undefined' || value == _.isEmpty(value)) return '';\n    else return value;\n  };\n\n  const getUserInfo = patientResultList => {\n    patientResultList.filter(item => {\n      if (item?.departmentFooter?.userInfo?.length > 0) {\n        item.departmentFooter?.userInfo?.filter(e => {\n          userInfo.push(e);\n        });\n      }\n    });\n    return _.uniqBy(userInfo, 'userId' as any);\n  };\n\n  return (\n    <>\n      <View style={[styles.table, { ...style }]}>\n        <View style={[styles.tableRow, { ...headerStyle }]} fixed={headerFixed}>\n          {fields?.map((item, index) => (\n            <View key={index} style={[{ width: item.width + '%' }]}>\n              {index == 0 ? (\n                <Text\n                  style={[\n                    styles.tableCellHeader,\n                    { textAlign: 'left', marginLeft: 20 },\n                  ]}\n                >\n                  {item?.title}\n                </Text>\n              ) : (\n                <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n              )}\n            </View>\n          ))}\n        </View>\n\n        {getPatientResultList(data)?.map((deptItem, index) => (\n          <>\n            <PdfView key={index} mh={0} p={0}>\n              {/* Panel Header */}\n              {deptItem.panelHeader.map((panelItem, index) => (\n                <>\n                  <PdfBorderView\n                    isBreak={panelItem?.isPMPageBreak}\n                    style={{\n                      width: '100%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall\n                      style={{\n                        marginLeft: 10,\n                        marginTop: 3,\n                        fontFamily: 'Arima-Bold',\n                      }}\n                    >\n                      {panelItem.panelHeader?.isPrintPanelName &&\n                      panelItem.panelHeader?.analyteType !== 'H'\n                        ? omitEmpty(panelItem?.panelHeader?.panelDescription)\n                        : ''}\n                    </PdfSmall>\n                    <PdfSmall\n                      style={{\n                        marginLeft: 10,\n                        fontSize: 9,\n                        fontFamily: 'Arima-Bold',\n                        marginTop: -2,\n                      }}\n                    >\n                      {panelItem?.panelHeader?.isPanelMethod &&\n                      panelItem.panelHeader?.analyteType !== 'H'\n                        ? omitEmpty(\n                            panelItem?.panelHeader?.panelMethodDescription,\n                          )\n                        : ''}\n                    </PdfSmall>\n                  </PdfBorderView>\n                  {/* Test Header */}\n                  {panelItem?.testHeader?.map((testItem, testIndex) => (\n                    <>\n                      <PdfBorderView\n                        style={{\n                          width: '100%',\n                        }}\n                        mh={0}\n                        mv={0}\n                        p={0}\n                        bw={0}\n                        borderColor='transparent'\n                      >\n                        {testItem.testHeader?.isPrintTestName &&\n                        panelItem.panelHeader?.analyteType !== 'H' ? (\n                          <PdfSmall\n                            style={{\n                              marginLeft: 10,\n                              fontFamily: 'Arima-Bold',\n                              marginTop: 2,\n                            }}\n                          >\n                            {testItem?.testHeader?.testDescription || ''}{' '}\n                            {` ${testItem.testHeader?.testRightMarker || ''}`}\n                          </PdfSmall>\n                        ) : null}\n                        <PdfSmall\n                          style={{\n                            marginLeft: 10,\n                            fontSize: 8,\n                            fontFamily: 'Arima-Bold',\n                            marginTop: -2,\n                          }}\n                        >\n                          {testItem?.testHeader?.isTestMethod &&\n                          panelItem.panelHeader?.analyteType !== 'H'\n                            ? omitEmpty(\n                                testItem?.testHeader?.testMethodDescription,\n                              )\n                            : ''}\n                        </PdfSmall>\n                      </PdfBorderView>\n                      {/* Patient Result List */}\n                      {panelItem.panelHeader?.analyteType === 'H' ? (\n                        <PdfSmall\n                          style={{ marginLeft: 10, fontFamily: 'Arima-Bold' }}\n                        >\n                          {panelItem.panelHeader?.analyteDescription}\n                        </PdfSmall>\n                      ) : (\n                        <View key={testIndex}>\n                          {testItem.patientResultList?.map(\n                            ({ value: _item }: any, _idx) => (\n                              <>\n                                {_item?.reportable ? (\n                                  <>\n                                    <PdfBorderView\n                                      key={_idx}\n                                      style={{\n                                        width: '100%',\n                                        flexDirection: 'row',\n                                      }}\n                                      mh={0}\n                                      mv={0}\n                                      p={0}\n                                      bw={0}\n                                      borderColor='transparent'\n                                    >\n                                      {_item?.analyteType === 'H' ? (\n                                        <PdfBorderView\n                                          style={{\n                                            width: '100%',\n                                          }}\n                                          mh={0}\n                                          mv={0}\n                                          p={0}\n                                          bw={0}\n                                          borderColor='transparent'\n                                        >\n                                          <PdfSmall\n                                            style={{\n                                              marginLeft: 10,\n                                              marginVertical: 2,\n                                              fontFamily: 'Arima-Bold',\n                                            }}\n                                          >\n                                            {_item?.analyteDescription}\n                                          </PdfSmall>\n                                        </PdfBorderView>\n                                      ) : (\n                                        <>\n                                          <PdfBorderView\n                                            style={{\n                                              width: '40%',\n                                            }}\n                                            mh={0}\n                                            mv={0}\n                                            p={0}\n                                            bw={0}\n                                            borderColor='transparent'\n                                          >\n                                            {_item.isPrintAnalyteName ? (\n                                              <PdfSmall\n                                                style={{\n                                                  marginLeft: 10,\n                                                  color: _item?.critical\n                                                    ? '#FF0000'\n                                                    : '#000000',\n                                                }}\n                                              >\n                                                {_item?.analyteDescription}\n                                              </PdfSmall>\n                                            ) : null}\n\n                                            {_item?.isAnalyteMethod ? (\n                                              <PdfSmall\n                                                style={{\n                                                  marginLeft: 10,\n                                                  fontSize: 8,\n                                                }}\n                                              >\n                                                {\n                                                  _item?.analyteMethodDescription\n                                                }\n                                              </PdfSmall>\n                                            ) : null}\n                                            {_item?.analyteInterpretation ? (\n                                              <PdfSmall\n                                                style={{\n                                                  marginLeft: 10,\n                                                  fontSize: 8,\n                                                }}\n                                              >\n                                                {\n                                                  _item?.analyteMasterInterpretation\n                                                }\n                                              </PdfSmall>\n                                            ) : null}\n                                          </PdfBorderView>\n\n                                          <PdfBorderView\n                                            style={{\n                                              width: '20%',\n                                            }}\n                                            mh={0}\n                                            mv={0}\n                                            p={0}\n                                            bw={0}\n                                            borderColor='transparent'\n                                          >\n                                            <PdfSmall\n                                              style={{\n                                                textAlign: 'center',\n                                                color:\n                                                  _item?.critical ||\n                                                  _item?.abnFlag\n                                                    ? '#FF0000'\n                                                    : '#000000',\n                                              }}\n                                            >\n                                              {\n                                                JSON.parse(_item?.result)\n                                                  ?.result\n                                              }\n                                            </PdfSmall>\n                                          </PdfBorderView>\n\n                                          <PdfBorderView\n                                            style={{\n                                              width: '20%',\n                                            }}\n                                            mh={0}\n                                            mv={0}\n                                            p={0}\n                                            bw={0}\n                                            borderColor='transparent'\n                                          >\n                                            <PdfSmall\n                                              style={{\n                                                textAlign: 'center',\n                                                color: _item?.critical\n                                                  ? '#FF0000'\n                                                  : '#000000',\n                                              }}\n                                            >\n                                              {JSON.parse(_item?.units)?.unit}\n                                            </PdfSmall>\n                                          </PdfBorderView>\n                                          {_item?.showRanges && (\n                                            <PdfBorderView\n                                              style={{\n                                                width: '20%',\n                                              }}\n                                              mh={0}\n                                              mv={0}\n                                              p={0}\n                                              bw={0}\n                                              borderColor='transparent'\n                                            >\n                                              <PdfSmall\n                                                style={{\n                                                  textAlign: 'center',\n                                                  color: _item?.critical\n                                                    ? '#FF0000'\n                                                    : '#000000',\n                                                }}\n                                              >\n                                                {\n                                                  JSON.parse(\n                                                    _item?.bioRefInterval,\n                                                  )?.range\n                                                }\n                                              </PdfSmall>\n                                            </PdfBorderView>\n                                          )}\n                                        </>\n                                      )}\n                                    </PdfBorderView>\n                                  </>\n                                ) : (\n                                  <></>\n                                )}\n                              </>\n                            ),\n                          )}\n                        </View>\n                      )}\n\n                      {/* Test Footer */}\n                      {testItem?.testFooter?.tpmTestInterpretation && (\n                        <PdfBorderView\n                          style={{\n                            width: '100%',\n                          }}\n                          mh={0}\n                          mv={0}\n                          p={0}\n                          bw={0}\n                          borderColor='transparent'\n                        >\n                          <PdfSmall style={{ marginLeft: 10 }}>\n                            {testItem?.testFooter?.testInterpretation || ''}\n                          </PdfSmall>\n                        </PdfBorderView>\n                      )}\n                    </>\n                  ))}\n\n                  {/* Panel Footer */}\n                  {panelItem?.panelFooter?.tpmPanelInterpretation && (\n                    <PdfBorderView\n                      style={{\n                        width: '100%',\n                      }}\n                      mh={0}\n                      mv={0}\n                      p={0}\n                      bw={0}\n                      borderColor='transparent'\n                    >\n                      <PdfSmall style={{ marginLeft: 10 }}>\n                        {panelItem?.panelFooter?.panelInterpretation}\n                      </PdfSmall>\n                    </PdfBorderView>\n                  )}\n                </>\n              ))}\n            </PdfView>\n          </>\n        ))}\n        {/* Department Footer */}\n        {getUserInfo(getPatientResultList(data))?.length > 0 && (\n          <PdfBorderView\n            style={{\n              width: '100%',\n            }}\n            mh={0}\n            mv={0}\n            p={0}\n            bw={0}\n            flexDirection='row'\n            borderColor='transparent'\n          >\n            {getUserInfo(getPatientResultList(data))?.map(item => (\n              <PdfView flexDirection='column' alignItems='center'>\n                <PdfImage\n                  src={item?.signature}\n                  style={{\n                    width: 80,\n                    height: 60,\n                    marginLeft: 10,\n                    padding: 5,\n                  }}\n                />\n                <PdfSmall>{item?.fullName}</PdfSmall>\n                <PdfSmall style={{ marginTop: -4 }}>\n                  {item?.userDegree}\n                </PdfSmall>\n                <PdfSmall style={{ marginTop: -4 }}>\n                  {item?.deginisation}\n                </PdfSmall>\n              </PdfView>\n            ))}\n          </PdfBorderView>\n        )}\n      </View>\n      <PdfView style={{ marginTop: 10 }}>\n        <Text\n          style={{\n            fontWeight: 'normal',\n            fontSize: 10,\n            fontFamily: 'arimaRegular',\n            lineHeight: 0,\n            textAlign: 'center',\n          }}\n          render={({ pageNumber, totalPages }) =>\n            pageNumber == totalPages &&\n            ' ---------------------- End of report ----------------------'\n          }\n        />\n      </PdfView>\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  Page,\n  StyleSheet,\n  Font,\n  Text,\n} from '@react-pdf/renderer';\nimport {PdfSmall, PdfView, PdfFooterView} from '@components';\nimport {Header} from '../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Footer} from '../../common/aarvak-diagnostic-center/pdf-footer.component';\nimport {PdfMedicialFitnessCertificate} from './pdf-medicial-fitness-certificate';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTemp0005Props {\n  data: any;\n  isWithHeader?: boolean;\n  width?: string | number;\n  height?: number | string;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const PdfTemp0005 = ({\n  data,\n  isWithHeader = true,\n  width = '100%',\n  height = '95%',\n  documentTitle = 'Medical Report',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTemp0005Props) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      <Page size={pageSize} style={boxCSS.current}>\n        <PdfView style={{height: 100}} fixed mh={0} p={0}>\n          {isWithHeader && <Header />}\n        </PdfView>\n        <PdfMedicialFitnessCertificate data={data?.patientReports} />\n        <PdfSmall style={{left: 20, marginTop: 5}} fixed>\n          {` Registration No.: ${\n            data?.patientReports?.labId?.toString() || ''\n          }`}\n        </PdfSmall>\n        <PdfView style={{height: 20, marginTop: -5}} fixed mh={0} p={0}>\n          <Text\n            style={{\n              fontWeight: 'normal',\n              fontSize: 10,\n              fontFamily: 'arimaRegular',\n              lineHeight: 0,\n              textAlign: 'center',\n            }}\n            render={({pageNumber, totalPages}) =>\n              pageNumber == totalPages &&\n              ' ---------------------- End of report ----------------------'\n            }\n          />\n        </PdfView>\n        <PdfFooterView fixed bg='transparent' style={{height: 90}} p={0}>\n          {isWithHeader && <Footer />}\n        </PdfFooterView>\n      </Page>\n    </>\n  );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport {\n  PdfRegular,\n  PdfMedium,\n  PdfView,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfMedicialFitnessCertificateProps {\n  data?: any;\n}\n\nexport const PdfMedicialFitnessCertificate = observer(\n  ({data}: PdfMedicialFitnessCertificateProps) => {\n    return (\n      <PdfView>\n        <PdfSmall style={{alignSelf: 'flex-end', marginTop: -30}}>\n          {`S.NO - ${data?.labId?.toString() || ''}`}\n        </PdfSmall>\n        <PdfMedium textAlign='center'>\n          PERFORMA FOR MEDICIAL FITNESS CERTIFICATE FOR FOOD HANDLERS\n        </PdfMedium>\n        <PdfMedium textAlign='center'>{`(FOR THE YEAR...${dayjs().format(\n          'YYYY',\n        )})`}</PdfMedium>\n        <PdfRegular textAlign='center'>\n          (see Para No. 10.1.2, Part-II, Schedule-4 of FSS Regulation, 2011)\n        </PdfRegular>\n        <PdfRegular style={{marginTop: 20}}>\n          {`It is certified that ${data?.name || ''} Age ${data?.age || ''} ${\n            data?.ageUnit || ''\n          }  Emp.Code ${\n            data?.empCode || ''\n          } is having employed with M/s Haldiram Ethnic Foods Private Limited, SPICE MALL coming in direct contact with food items has been carefully examined* by me on date ${\n            data?.date || ''\n          }.`}\n        </PdfRegular>\n        <PdfRegular style={{marginTop: 20}}>\n          {\n            'Based on the medical examination conducted, he/she is found free from any infectious or communicable diseases and then person is fit to work in the above mentioned food establishment.'\n          }\n        </PdfRegular>\n\n        {/* <PdfRegular style={{marginTop: 30}}>\n          {'Typhoid Vaccine Batch No.- 876876978A, Given on 22/04/2022.'}\n        </PdfRegular>\n        <PdfRegular>\n          {'Hepatitis B Vaccine Batch No.- 8769879A, Given on 22/04/2022'}\n        </PdfRegular> */}\n        <PdfView alignItems='flex-end' mt={30}>\n          <PdfMedium fontSize={14} fontFamily='Times-Bold'>\n            Name and Signature with Seal\n          </PdfMedium>\n          <PdfRegular>{`of registered Medical Practitioner/\n          Civil Surgeon`}</PdfRegular>\n        </PdfView>\n        <PdfView style={{marginTop: 40}}>\n          <PdfRegular style={{textDecoration: 'underline'}}>\n            Medical examination to be conducted:\n          </PdfRegular>\n          <PdfView mh={15}>\n            <PdfRegular>1. Physical Examination</PdfRegular>\n            <PdfRegular>2. Eye Test</PdfRegular>\n            <PdfRegular>3. Skin examination</PdfRegular>\n            <PdfRegular>\n              4. Compliance with schedule of Vaccine to be inoculated against\n              enteric group of diseases\n            </PdfRegular>\n            <PdfRegular>\n              5. Any test required to confirm any communicable of infectious\n              disease which the person\n            </PdfRegular>\n            <PdfRegular style={{marginLeft: 12}}>\n              suspected to be suffering from on clinical examination.\n            </PdfRegular>\n          </PdfView>\n        </PdfView>\n      </PdfView>\n    );\n  },\n);\n","import React, {useRef} from 'react';\nimport {\n  Page,\n  StyleSheet,\n  Font,\n  Text,\n} from '@react-pdf/renderer';\nimport {PdfSmall, PdfView, PdfFooterView} from '@components';\nimport {Header} from '../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Footer} from '../../common/aarvak-diagnostic-center/pdf-footer.component';\nimport {PdfMedicalCheckup} from './pdf-medical-checkup';\nimport {PdfPatientDetails} from './pdf-patient-details.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTemp0006Props {\n  data: any;\n  isWithHeader?: boolean;\n  width?: string | number;\n  height?: number | string;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const PdfTemp0006 = ({\n  data,\n  isWithHeader = true,\n  width = '100%',\n  height = '95%',\n  documentTitle = 'Medical Report',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTemp0006Props) => {\n  const {patientReports} = data;\n\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      <Page size={pageSize} style={boxCSS.current}>\n        <PdfView style={{height: 100}} mh={0} p={0}>\n          {isWithHeader && <Header />}\n        </PdfView>\n        <PdfPatientDetails data={patientReports} />\n        <PdfMedicalCheckup data={data?.patientReports} />\n        <PdfSmall style={{left: 20, marginTop: 5}}>\n          {` Registration No.: ${\n            data?.patientReports?.labId?.toString() || ''\n          }`}\n        </PdfSmall>\n        <PdfView style={{height: 20, marginTop: -5}} mh={0} p={0}>\n          <Text\n            style={{\n              fontWeight: 'normal',\n              fontSize: 10,\n              fontFamily: 'arimaRegular',\n              lineHeight: 0,\n              textAlign: 'center',\n            }}\n            render={({pageNumber, totalPages}) =>\n              pageNumber == totalPages &&\n              ' ---------------------- End of report ----------------------'\n            }\n          />\n        </PdfView>\n        <PdfFooterView fixed bg='transparent' style={{height: 90}} p={0}>\n          {isWithHeader && <Footer />}\n        </PdfFooterView>\n      </Page>\n    </>\n  );\n};\n","import React from 'react';\nimport {StyleSheet} from '@react-pdf/renderer';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {PdfSmall, PdfBorderView, PdfView} from '@/library/components';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfMedicalCheckupProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: any;\n}\n\nexport const PdfMedicalCheckup = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfMedicalCheckupProps) => {\n  const {medicalCheckup, physicalExamination} = data;\n\n  return (\n    <>\n      {/* S.No */}\n      <PdfBorderView mv={0} bw={1} style={{flexDirection: 'row'}}>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '70%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall>Medical Checkup</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Date</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.date || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Company/Address */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Company/Address</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`M/S Haldiram Ethnic Foods Private Limited \n          (SPICE MALL)`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* EMP. CODE */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>EMP. CODE</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.empCode || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Job Description */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Job Description</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '30%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.jobDescription || ''\n          }`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '30%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Department</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.department || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Present Complaints */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Present Complaints</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.presentComplaint || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Past History */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Past History</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.pastHistory || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Smoking */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Smoking</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.smoking || ''\n          }`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '40%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Alcohol</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.alcohol || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Other Relevant Information */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Other Relevant \n          Information`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            medicalCheckup?.otherRelInfo || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Physical Examination */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '100%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{'Physical Examination'}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Height */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Height</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.height || ''\n          }`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Weight</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.weight || ''\n          }`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Pulse</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.pulse || ''\n          }`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>BP</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.bp || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Skin */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Skin</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.skin || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Respiratory System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Respiratory\n          System`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.respiratorySystem || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Cardiovascular */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Cardiovascular'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.cardIovascular || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Nervous System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Nervous System'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.nervousSystem || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* G.I.System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'G.I.System'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.gISystem || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Vision */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Vision'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.vision || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Hearing */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Hearing'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.hearing || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Blood Test */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Blood Test'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.bloodTest || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Final Observation */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Final Observation'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.finalObservation || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Final Observation */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Signature of\n          Medical Examiner`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${\n            physicalExamination?.signOfMedicalExaminer || ''\n          }`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n    </>\n  );\n};\n","import React from 'react';\nimport dayjs from 'dayjs';\nimport {PdfView, PdfBorderView, PdfGrid, PdfSmall} from '@components';\nimport {observer} from 'mobx-react';\nimport {getAgeUnits, getSex} from '@/core-utils';\n\ninterface PdfPatientDetailsProps {\n  data?: any;\n}\n\nexport const PdfPatientDetails = observer(\n  ({data: patientReports}: PdfPatientDetailsProps) => {\n    return (\n      <PdfBorderView mv={10} fixed>\n        <PdfView mh={10} p={0} flexDirection='row'>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{`Name: ${patientReports?.title || ''} ${\n              patientReports?.firstName || ''\n            } ${patientReports?.middleName || ''} ${\n              patientReports?.lastName || ''\n            }`}</PdfSmall>\n            <PdfSmall>{`Ref. By: ${patientReports?.refBy}`}</PdfSmall>\n            <PdfSmall>{`Ref Lab: ${patientReports?.refLab}`}</PdfSmall>\n          </PdfGrid>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{`Sr No: ${patientReports?.labId?.toString()}`}</PdfSmall>\n            <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n              getAgeUnits(patientReports?.ageUnits) || ''\n            }`}</PdfSmall>\n            <PdfSmall>{`Sex: ${getSex(patientReports?.sex) || ''}`}</PdfSmall>\n          </PdfGrid>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{`Patient Id: ${patientReports?.pId?.toString()}`}</PdfSmall>\n            <PdfSmall fontSize={9}>{`Samp. Collected: ${dayjs(\n              patientReports?.collectionDate,\n            ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n            <PdfSmall fontSize={9}>{`Reporting Date: ${dayjs(\n              patientReports?.reportedDate,\n            ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n          </PdfGrid>\n        </PdfView>\n      </PdfBorderView>\n    );\n  },\n);\n","import React, {useEffect, useRef, useState} from 'react';\nimport {StyleSheet, Font, Page} from '@react-pdf/renderer';\nimport {Document, pdfjs, Page as PdfPage} from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTemp0007Props {\n  data: any;\n  isWithHeader?: boolean;\n  width?: string | number;\n  height?: number | string;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const PdfTemp0007 = ({\n  data,\n  isWithHeader = true,\n  width = '100%',\n  height = '95%',\n  documentTitle = 'Medical Report',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTemp0007Props) => {\n  const {patientReports} = data;\n  const [pageNumber, setPageNumber] = useState();\n\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  useEffect(() => {\n    window.open(patientReports?.patientResultList[0]?.result, '_blank');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [patientReports?.patientResultList[0]?.result]);\n\n  const onDocumentLoad = ({numPages}) => {\n    setPageNumber(numPages);\n  };\n\n  return (\n    <>\n      <Page>\n        <Document\n          file={{\n            url: 'https://limsplussolutions.blob.core.windows.net/patient-registration/1678267353_PaySlip-MPIPL-PNI-22-1214(APPASAHEB%20BALU%20LAKADE)_DEC_2022.pdf',\n          }}\n          renderMode='canvas'\n          onLoadSuccess={onDocumentLoad}\n          //className='w-full relative'\n          error={\n            'Unable to load the library article. Please reach out to the support for further assistance.'\n          }\n        >\n          <PdfPage size='A4' pageNumber={1} renderAnnotationLayer={true} />\n        </Document>\n      </Page>\n    </>\n  );\n};\n","import React, {useEffect, useRef, useState} from 'react';\nimport {StyleSheet, Font, Page} from '@react-pdf/renderer';\nimport {Document, pdfjs, Page as PdfPage} from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.min.js`;\nimport 'react-pdf/dist/esm/Page/AnnotationLayer.css';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTemp0008Props {\n  data: any;\n  isWithHeader?: boolean;\n  width?: string | number;\n  height?: number | string;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const PdfTemp0008 = ({\n  data,\n  isWithHeader = true,\n  width = '100%',\n  height = '95%',\n  documentTitle = 'Medical Report',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTemp0008Props) => {\n  const {patientReports} = data;\n  const [pageNumber, setPageNumber] = useState();\n\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  useEffect(() => {\n    window.open(patientReports?.patientResultList[0]?.result, '_blank');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [patientReports?.patientResultList[0]?.result]);\n\n  const onDocumentLoad = ({numPages}) => {\n    setPageNumber(numPages);\n  };\n\n  return (\n    <>\n      <Page>\n        <Document\n          file={{\n            url: 'https://limsplussolutions.blob.core.windows.net/patient-registration/1678267353_PaySlip-MPIPL-PNI-22-1214(APPASAHEB%20BALU%20LAKADE)_DEC_2022.pdf',\n          }}\n          renderMode='canvas'\n          onLoadSuccess={onDocumentLoad}\n          //className='w-full relative'\n          error={\n            'Unable to load the library article. Please reach out to the support for further assistance.'\n          }\n        >\n          <PdfPage size='A4' pageNumber={1} renderAnnotationLayer={true} />\n        </Document>\n      </Page>\n    </>\n  );\n};\n"],"names":["styles","StyleSheet","create","table","borderColor","borderWidth","marginHorizontal","flexFlow","tableRow","flexDirection","headerBg","backgroundColor","borderStyle","tableCellHeader","margin","fontSize","fontWeight","textAlign","tableCell","textCenter","PdfTPRTemp0001List","_ref","_ref$headerFixed","headerFixed","data","style","headerStyle","_useState","useState","_useState2","_slicedToArray","patientResultList","setPatientResultList","fields","title","width","useEffect","length","departmentList","_","o","_o$departmentHeader","departmentHeader","departmentName","_loop","_deptItems$find","_deptItems$find$depar","_Object$entries$_i","_Object$entries","_i","deptKey","deptItems","panelList","_o$panelHeader","panelHeader","panelDescription","_loop2","_panelItems$find","_panelItems$find$pane","_panelItems$find2","_panelItems$find2$pan","_panelItems$find3","_panelItems$find3$pan","_panelItems$find4","_panelItems$find4$pan","_panelItems$find5","_panelItems$find5$pan","_panelItems$find6","_Object$entries2$_i","_Object$entries2","_i2","panelKey","panelItems","testList","_o$testHeader","testHeader","testDescription","_loop3","_Object$entries3$_i","_Object$entries3","_i3","testKey","testItems","filter","testItem","_testItem$testHeader","_testItem$testHeader2","_testItem$testHeader3","_testItem$testHeader4","_testItem$testHeader5","_testItems$find","_testItems$find$testF","_testItems$find2","_testItems$find2$test","push","testMethodDescription","testBottomMarker","testRightMarker","tpmPrintTestName","tpmTestMethod","analyte","result","units","bioRefInterval","testFooter","testInterpretation","find","_testItem$testHeader6","tpmTestInterpretation","_testItem$testHeader7","reportOrder","testReportOrder","Object","entries","panelMethodDescription","pItem","_pItem$panelHeader","tpmPrintPanelName","_pItem$panelHeader2","tpmPanelMethod","_pItem$panelHeader3","panelFooter","panelInterpretation","_pItem$panelHeader4","tpmPanelInterpretation","_pItem$panelHeader5","_pItem$panelHeader6","panelReportOrder","departmentFooter","userInfo","item","_item$departmentHeade","_jsxs","View","_objectSpread","children","_jsx","fixed","map","index","Text","deptItem","_deptItem$departmentH","_deptItem$departmentF","_deptItem$departmentF2","_deptItem$departmentF3","_deptItem$departmentF4","_Fragment","PdfView","mh","p","PdfBorderView","mv","bw","PdfSmall","marginLeft","panelItem","_panelItem$panelHeade","_panelItem$panelHeade2","_panelItem$panelHeade3","_panelItem$panelHeade4","_panelItem$testHeader","_panelItem$panelFoote","_panelItem$panelFoote2","marginTop","testIndex","_testItem$testHeader8","_testItem$testHeader9","_testItem$testHeader10","_testItem$testHeader11","_testItem$testHeader12","_testItem$testFooter","_testItem$testFooter2","concat","_item","_idx","_fields$_idx","_item$","_item$2","_item$3","_item$4","_item$5","analyteDescription","analyteMethod","analyteMethodDescription","analyteInterpretation","analyteMasterInterpretation","deptFooterItem","alignItems","PdfImage","src","signature","height","padding","fullName","userDegree","deginisation","PdfTemp0001","observer","_patientReports$templ","_patientReports$templ2","_patientReports$templ3","_patientReports$templ4","_ref$isWithHeader","isWithHeader","pageBranding","patientReports","setTestBottomMarker","_patientReports$patie","arrDetails","_item$testHeader","_item$testHeader$test","details","PdfPBTemp0001","PdfRegular","rLabCode","rLabName","rLabAddress","rLabCity","PdfGrid","cols","bg","firstName","middleName","lastName","labId","acStatus","age","ageUnits","refBy","sex","dayjs","collectionDate","format","registrationDate","reportedDate","reportStatus","position","bottom","left","templatePatientResultLabWise","endOfPage","minHeight","textDecoration","endOfReport","PdfTPRTemp0002List","PdfTemp0002","PdfTPRTemp0003List","_useState3","_useState4","setDepartmentFooter","_item$departmentFoote","_item$departmentFoote2","e","userId","PdfTemp0003","_patientReports$templ5","_patientReports$templ6","pageBrandingRes","templateSettings","templateSettingsRes","Footer","PdfFooterView","color","Header","PdfHeader","justifyContent","logos","aarvakDiagnosticCenter","PdfMedium","PdfTemp0001Footer","_data$footer","_data$footer3","_data$footer5","_data$footer7","_data$footer8","_data$footer9","_data$footer10","_data$footer11","_data$footer12","mainBoxCSS","useRef","titleCSS","subTitleCSS","footer","_data$footer2","current","eval","_data$footer4","_data$footer6","backgroundImage","right","top","Image","objectFit","source","uri","backgroundImageBase64","method","headers","body","subTitle","PdfTemp0001Header","_data$header","_data$header3","_data$header5","_data$header7","_data$header8","_data$header9","_data$header10","_data$header11","_data$header12","_data$header13","headerTitleCSS","headerMainBoxCSS","imageCSS","header","_data$header2","_data$header4","logoCSS","_data$header6","logo","borderRadius","PdfHeading","PdfTemp0001SubHeader","_data$subHeader","_data$subHeader3","_data$subHeader5","_data$subHeader7","_data$subHeader8","subHeader","_data$subHeader2","_data$subHeader4","_data$subHeader6","PdfSubHeader","Font","register","family","_data$pageNumber","pageNumberCSS","pageNumber","_data$pageNumber2","PdfTSTemp0001","window","innerHeight","documentTitle","isToolbar","isBackgroundImage","pageSize","isHeader","isSubHeader","isFooter","page","paddingBottom","_ref$width","_ref$height","_ref$documentTitle","_ref$isToolbar","_ref$isBackgroundImag","_ref$backgroundImage","_ref$mainBoxCSS","boxCSS","Page","size","ADCMedicalReportPdf","Document","PdfMedicialFitnessCertificate","PdfMedicalCheckup","isBreak","borderRightColor","borderRightWidth","paddingLeft","borderTopWidth","alignSelf","mt","fontFamily","ADCWithoutHeaderFooterPdf","PdfPatientDetails","PdfResultList","PdfPageNumber","ADCPdf","resultList","value","unit","normalValue","images","signAparajita","PdfTemp0004","_patientReports$labId","_patientReports$pId","refLab","toString","getAgeUnits","getSex","pId","_getPatientResultList","_getUserInfo","_getUserInfo2","_ref$data","getPatientResultList","_panelItems$find6$pan","_panelItems$find7","_panelItems$find7$pan","_panelItems$find8","_panelItems$find8$pan","_panelItems$find9","_panelItems$find9$pan","_panelItems$find10","_panelItems$find11","_panelItems$find11$pa","_testItems$find$testH","_testItems$find3","_testItems$find3$test","_testItems$find4","_testItems$find4$test","_testItems$find5","_testItems$find5$test","_testItems$find6","_testItems$find6$test","_testItems$find7","_testItems$find7$test","_testItems$find8","analyteList","_o$analyte","_i4","_Object$entries4","_analyteItems$","_analyteItems$$panelH","_analyteItems$2","_analyteItems$3","_Object$entries4$_i","analyteKey","analyteItems","analyteName","analyteType","analyteReportOrder","isPrintTestName","isTestMethod","isPrintPanelName","isPanelMethod","critical","abnFlag","_pItem$panelHeader7","_pItem$panelHeader8","_pItem$panelHeader9","_pItem$panelHeader10","isPMPageBreak","_pItem$panelHeader11","omitEmpty","getUserInfo","_item$departmentFoote3","_item$departmentFoote4","_panelItem$panelHeade5","_panelItem$panelHeade6","_panelItem$panelHeade7","_panelItem$panelHeade8","_testItem$testHeader13","_panelItem$panelHeade9","_panelItem$panelHeade10","_testItem$patientResu","_ref2","_JSON$parse","_JSON$parse2","_JSON$parse3","reportable","marginVertical","isPrintAnalyteName","isAnalyteMethod","JSON","parse","showRanges","range","lineHeight","render","_ref3","totalPages","PdfTemp0005","_data$patientReports","_data$patientReports$","_data$labId","name","ageUnit","empCode","date","PdfTemp0006","medicalCheckup","physicalExamination","jobDescription","department","presentComplaint","pastHistory","smoking","alcohol","otherRelInfo","weight","pulse","bp","skin","respiratorySystem","cardIovascular","nervousSystem","gISystem","vision","hearing","bloodTest","finalObservation","signOfMedicalExaminer","pdfjs","workerSrc","PdfTemp0007","_patientReports$patie2","setPageNumber","open","onDocumentLoad","numPages","file","url","renderMode","onLoadSuccess","error","PdfPage","renderAnnotationLayer","PdfTemp0008"],"sourceRoot":""}