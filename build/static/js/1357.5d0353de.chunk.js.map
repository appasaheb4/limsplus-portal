{"version":3,"file":"static/js/1357.5d0353de.chunk.js","mappings":"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","sources":["features/settings/login-activity/screens/login-activity.screen.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { observer } from 'mobx-react';\nimport _ from 'lodash';\nimport {\n  Header,\n  PageHeading,\n  PageHeadingLabDetails,\n  TableBootstrap,\n  DateFilter,\n  textFilter,\n  customFilter,\n  sortCaret,\n  MainPageHeading,\n  DateRangeFilter,\n} from '@/library/components';\nimport dayjs from 'dayjs';\nimport { useStores } from '@/stores';\nimport relativeTime from 'dayjs/plugin/relativeTime';\n\ndayjs.extend(relativeTime);\n\nlet userId;\nlet systemInfo;\nlet ipInfo;\nlet environment;\nlet companyCode;\n\nconst LoginActivity = observer(() => {\n  const { loginStore, loginActivityStore, routerStore } = useStores();\n  const [statusWiseFilter, setStatusWiseFilter] = useState({});\n\n  useEffect(() => {\n    loginActivityStore.fetchLoginActivity();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <MainPageHeading\n        title={routerStore.selectedComponents?.title || ''}\n        store={loginStore}\n      />\n      <div className='mx-auto  flex-wrap'>\n        <div className='p-2 rounded-lg shadow-xl overflow-auto'>\n          <div style={{ position: 'relative' }}>\n            <TableBootstrap\n              id='_id'\n              data={loginActivityStore.listLoginActivity || []}\n              totalSize={loginActivityStore.listLoginActivityCount}\n              columns={[\n                {\n                  dataField: '_id',\n                  text: 'Id',\n                  hidden: true,\n                  csvExport: false,\n                },\n                {\n                  dataField: 'userId',\n                  text: 'User details',\n                  sort: true,\n                  headerStyle: {\n                    fontSize: 0,\n                  },\n                  sortCaret: (order, column) => sortCaret(order, column),\n                  csvFormatter: (cell, row, rowIndex) =>\n                    `UserId: ${row.user.userId}, User Name: ${row?.user?.fullName},  Lab: ${row?.user?.lab}, Role: ${row?.user?.role}`,\n                  filter: textFilter({\n                    placeholder: 'User details',\n                    getFilter: filter => {\n                      userId = filter;\n                    },\n                  }),\n                  headerClasses: 'textHeader5',\n                  editable: false,\n                  formatter: (cell, row) => {\n                    return (\n                      <div>\n                        <h6>{`UserId: ${row?.user?.userId}`} </h6>\n                        <h6>{`User Name: ${row?.user?.fullName}`}</h6>\n                        <h6>{`Lab: ${row.user?.lab}`}</h6>\n                        <h6>{`Role: ${row.user?.role}`}</h6>\n                      </div>\n                    );\n                  },\n                },\n                {\n                  dataField: 'systemInfo',\n                  text: 'System info',\n                  sort: true,\n                  headerStyle: {\n                    fontSize: 0,\n                  },\n                  sortCaret: (order, column) => sortCaret(order, column),\n                  filter: textFilter({\n                    placeholder: 'System info',\n                    getFilter: filter => {\n                      systemInfo = filter;\n                    },\n                  }),\n                  csvFormatter: (cell, row, rowIndex) =>\n                    `Device:${row?.systemInfo?.device}, OS,  Name:${\n                      row?.systemInfo?.workstation?.os?.name\n                    }, Version:${\n                      row?.systemInfo?.workstation?.os?.version || ''\n                    }, Browser,Name: ${\n                      row?.systemInfo?.workstation?.browser?.name || ''\n                    }\n                    Version:${\n                      row?.systemInfo?.workstation?.browser?.version || ''\n                    }`,\n                  headerClasses: 'textHeader5',\n                  formatter: (cell, row) => {\n                    return (\n                      <div>\n                        <h6>{`Device: ${row.systemInfo?.device}`} </h6>\n                        <h6> OS:</h6>\n                        <h6 className='ml-4'>\n                          {`Name: ${\n                            row?.systemInfo?.workstation?.os?.name || ''\n                          }\n                                       / Version:${\n                                         row?.systemInfo?.workstation?.os\n                                           ?.version || ''\n                                       }`}\n                        </h6>\n                        <h6> Browser:</h6>\n                        <h6 className='ml-4'>\n                          {`Name: ${\n                            row?.systemInfo?.workstation?.browser?.name || ''\n                          }\n                                       / Version:${\n                                         row?.systemInfo?.workstation?.browser\n                                           ?.version || ''\n                                       }`}\n                        </h6>\n                      </div>\n                    );\n                  },\n                },\n                {\n                  dataField: 'ipInfo',\n                  text: 'Ip Information',\n                  sort: true,\n                  headerStyle: {\n                    fontSize: 0,\n                  },\n                  sortCaret: (order, column) => sortCaret(order, column),\n                  filter: textFilter({\n                    placeholder: 'Ip Information',\n                    getFilter: filter => {\n                      ipInfo = filter;\n                    },\n                  }),\n                  headerClasses: 'textHeader4',\n                  csvFormatter: (cell, row, rowIndex) =>\n                    `Ip:${row?.systemInfo?.ipInfo?.ip}, Address:${row?.systemInfo?.ipInfo?.city}, ${row?.systemInfo?.ipInfo?.region}, ${row?.systemInfo?.ipInfo?.country}, Location:${row?.systemInfo?.ipInfo?.ll}`,\n                  formatter: (cell, row) => {\n                    return (\n                      <>\n                        <div>\n                          <h6>Ip: {row?.systemInfo?.ipInfo?.ip}</h6>\n                          {row?.systemInfo?.ipInfo?.city && (\n                            <>\n                              <h6>\n                                Address:{' '}\n                                {`${row?.systemInfo?.ipInfo?.city}, ${row?.systemInfo?.ipInfo?.region}, ${row?.systemInfo?.ipInfo?.country}`}\n                              </h6>\n                              <h6>\n                                Location: {`${row?.systemInfo?.ipInfo?.ll}`}\n                              </h6>\n                            </>\n                          )}\n                        </div>\n                      </>\n                    );\n                  },\n                },\n                {\n                  dataField: 'dateOfEntry',\n                  text: 'In',\n                  headerClasses: 'textHeader',\n                  // sort: true,\n                  headerStyle: {\n                    fontSize: 0,\n                  },\n                  // sortCaret: (order, column) => sortCaret(order, column),\n                  csvFormatter: (cell, row, rowIndex) =>\n                    row.dateOfEntry\n                      ? dayjs(row.dateOfEntry).format('YYYY-MM-DD h:mm:ss a')\n                      : '',\n                  filter: customFilter(),\n                  filterRenderer: (onFilter, column) => (\n                    <DateRangeFilter onFilter={onFilter} column={column} />\n                  ),\n                  formatter: (cell, row) => {\n                    return dayjs(\n                      dayjs(row.dateOfEntry).format('YYYY-MM-DD h:mm:ss a'),\n                    ).fromNow();\n                  },\n                },\n                {\n                  dataField: 'lastUpdated',\n                  text: 'Out',\n                  headerClasses: 'textHeader5',\n                  sort: true,\n                  headerStyle: {\n                    fontSize: 0,\n                  },\n                  sortCaret: (order, column) => sortCaret(order, column),\n                  csvFormatter: (cell, row, rowIndex) =>\n                    row.lastUpdated\n                      ? dayjs(row.lastUpdated).format('YYYY-MM-DD h:mm:ss a')\n                      : '',\n                  filter: customFilter(),\n                  filterRenderer: (onFilter, column) => (\n                    <>\n                      <DateFilter\n                        onFilter={onFilter}\n                        column={column}\n                        isStatus={true}\n                        onStatus={status => {\n                          const input = {\n                            type: 'options-filter',\n                            filter: { status },\n                            page: 0,\n                            limit: 10,\n                          };\n                          loginActivityStore.LoginActivityService.filter({\n                            input,\n                          });\n                          setStatusWiseFilter({ input });\n                        }}\n                      />\n                    </>\n                  ),\n                  formatter: (cell, row) => {\n                    return row.lastUpdated ? (\n                      <>\n                        {dayjs(\n                          dayjs(row.lastUpdated).format('YYYY-MM-DD h:mm:ss a'),\n                        ).fromNow()}\n                      </>\n                    ) : (\n                      'Active User'\n                    );\n                  },\n                },\n                {\n                  text: 'Company Code',\n                  dataField: 'companyCode',\n                  sort: true,\n                  headerStyle: {\n                    fontSize: 0,\n                  },\n                  sortCaret: (order, column) => sortCaret(order, column),\n                  editable: false,\n                  csvFormatter: col => (col ? col : ''),\n                  filter: textFilter({\n                    placeholder: 'Company Code',\n                    getFilter: filter => {\n                      companyCode = filter;\n                    },\n                  }),\n                  headerClasses: 'textHeader2',\n                },\n                {\n                  dataField: 'environment',\n                  text: 'Environment',\n                  headerClasses: 'textHeader4',\n                  sort: true,\n                  headerStyle: {\n                    fontSize: 0,\n                  },\n                  editable: false,\n                  sortCaret: (order, column) => sortCaret(order, column),\n                  csvFormatter: col => (col ? col : ''),\n                  filter: textFilter({\n                    placeholder: 'Environment',\n                    getFilter: filter => {\n                      environment = filter;\n                    },\n                  }),\n                },\n              ]}\n              onPageSizeChange={(page, size) => {\n                if (_.isEmpty(statusWiseFilter)) {\n                  loginActivityStore.fetchLoginActivity(page, size);\n                } else {\n                  loginActivityStore.fetchLoginActivity(\n                    page,\n                    size,\n                    statusWiseFilter,\n                  );\n                }\n              }}\n              onFilter={(type, filter, page, limit) => {\n                if (_.isEmpty(statusWiseFilter)) {\n                  loginActivityStore.LoginActivityService.filter({\n                    input: { type, filter, page, limit },\n                  });\n                } else {\n                  loginActivityStore.LoginActivityService.filter({\n                    ...statusWiseFilter,\n                    page,\n                    limit,\n                  });\n                }\n              }}\n              clearAllFilter={() => {\n                userId('');\n                systemInfo('');\n                ipInfo('');\n                setStatusWiseFilter({});\n                setTimeout(() => {\n                  loginActivityStore.fetchLoginActivity(0, 10);\n                }, 2000);\n              }}\n              isEditModify={false}\n              isSelectRow={false}\n              fileName='Login Activity'\n              dynamicStylingFields={[]}\n              hideExcelSheet={['_id']}\n              isShowCircleButton={false}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n});\n\nexport default LoginActivity;\n"],"names":["userId","systemInfo","ipInfo","dayjs","relativeTime","LoginActivity","observer","_routerStore$selected","_useStores","useStores","loginStore","loginActivityStore","routerStore","_useState","useState","_useState2","_slicedToArray","statusWiseFilter","setStatusWiseFilter","useEffect","fetchLoginActivity","_jsxs","_Fragment","children","_jsx","MainPageHeading","title","selectedComponents","store","className","style","position","TableBootstrap","id","data","listLoginActivity","totalSize","listLoginActivityCount","columns","dataField","text","hidden","csvExport","sort","headerStyle","fontSize","sortCaret","order","column","csvFormatter","cell","row","rowIndex","_row$user","_row$user2","_row$user3","concat","user","fullName","lab","role","filter","textFilter","placeholder","getFilter","headerClasses","editable","formatter","_row$user4","_row$user5","_row$user6","_row$user7","_row$systemInfo","_row$systemInfo2","_row$systemInfo2$work","_row$systemInfo2$work2","_row$systemInfo3","_row$systemInfo3$work","_row$systemInfo3$work2","_row$systemInfo4","_row$systemInfo4$work","_row$systemInfo4$work2","_row$systemInfo5","_row$systemInfo5$work","_row$systemInfo5$work2","device","workstation","os","name","version","browser","_row$systemInfo6","_row$systemInfo7","_row$systemInfo7$work","_row$systemInfo7$work2","_row$systemInfo8","_row$systemInfo8$work","_row$systemInfo8$work2","_row$systemInfo9","_row$systemInfo9$work","_row$systemInfo9$work2","_row$systemInfo10","_row$systemInfo10$wor","_row$systemInfo10$wor2","_row$systemInfo11","_row$systemInfo11$ipI","_row$systemInfo12","_row$systemInfo12$ipI","_row$systemInfo13","_row$systemInfo13$ipI","_row$systemInfo14","_row$systemInfo14$ipI","_row$systemInfo15","_row$systemInfo15$ipI","ip","city","region","country","ll","_row$systemInfo16","_row$systemInfo16$ipI","_row$systemInfo17","_row$systemInfo17$ipI","_row$systemInfo18","_row$systemInfo18$ipI","_row$systemInfo19","_row$systemInfo19$ipI","_row$systemInfo20","_row$systemInfo20$ipI","_row$systemInfo21","_row$systemInfo21$ipI","dateOfEntry","format","customFilter","filterRenderer","onFilter","DateRangeFilter","fromNow","lastUpdated","DateFilter","isStatus","onStatus","status","input","type","page","limit","LoginActivityService","col","onPageSizeChange","size","_","_objectSpread","clearAllFilter","setTimeout","isEditModify","isSelectRow","fileName","dynamicStylingFields","hideExcelSheet","isShowCircleButton"],"sourceRoot":""}