{"version":3,"file":"static/js/160.7bd3643b.chunk.js","mappings":"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","sources":["features/settings/shortcut-menu/screens/short-cut-menu.screen.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { observer } from 'mobx-react';\nimport {\n  Header,\n  PageHeading,\n  PageHeadingLabDetails,\n  Buttons,\n  Icons,\n  List,\n  Svg,\n  Toast,\n} from '@/library/components';\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd';\nimport { useStores } from '@/stores';\nimport MainPageHeadingComponents from '@/library/components/atoms/header/main.page.heading.components';\n\nconst grid = 8;\nconst getListStyle = isDraggingOver => ({\n  background: isDraggingOver ? 'lightblue' : 'none',\n  display: 'flex',\n  //flexWrap:'none',\n  padding: grid,\n  overflow: 'auto',\n});\n\nconst ShortcutMenu = observer(() => {\n  const { loginStore, shortcutMenuStore, routerStore } = useStores();\n\n  useEffect(() => {\n    const list: any[] = [];\n    routerStore.userRouter?.filter(item => {\n      item.children.filter((children: any) => {\n        const userShortcutMenu =\n          loginStore.login?.shortcutMenu &&\n          loginStore.login?.shortcutMenu[loginStore.login.role || ''] &&\n          loginStore.login?.shortcutMenu[loginStore.login.role || ''].filter(\n            userItem =>\n              userItem.category === item.name &&\n              userItem.name === children.name,\n          );\n\n        if (userShortcutMenu && userShortcutMenu?.length > 0) {\n          children.selected = true;\n        } else {\n          children.selected = false;\n        }\n        children.category = item.name;\n        list.push(children);\n      });\n    });\n    shortcutMenuStore.updateShortcutMenu(list);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onItemSelect = (item: any, index: number) => {\n    const list = shortcutMenuStore.shortcutMenuList;\n    if (list) {\n      list[index].selected = !list[index].selected;\n    }\n    shortcutMenuStore.updateShortcutMenu(list);\n  };\n\n  const handleOnDragEnd = (result: any) => {\n    const items = Array.from(\n      (loginStore.login?.shortcutMenu &&\n        loginStore.login?.shortcutMenu[loginStore.login.role || '']) ||\n        [],\n    );\n    const [reorderedItem] = items.splice(result.source.index, 1);\n    items.splice(result.destination.index, 0, reorderedItem);\n    loginStore.updateLogin({\n      ...loginStore.login,\n      shortcutMenu: { [loginStore.login?.role || '']: items },\n    });\n    shortcutMenuStore.updateDragDrop(true);\n  };\n\n  return (\n    <>\n      <MainPageHeadingComponents\n        title={routerStore.selectedComponents?.title || ''}\n        store={loginStore}\n      />\n      {loginStore.login?.shortcutMenu &&\n        loginStore.login?.shortcutMenu[loginStore.login.role || ''] &&\n        loginStore.login?.shortcutMenu &&\n        loginStore.login?.shortcutMenu[loginStore.login.role || ''].length >\n          0 && (\n          <div>\n            <label className='mt-2'>Active:</label>\n            <DragDropContext onDragEnd={handleOnDragEnd}>\n              <Droppable droppableId='characters' direction='horizontal'>\n                {(provided, snapshot) => (\n                  <ul\n                    style={getListStyle(snapshot.isDraggingOver)}\n                    // className=\"grid grid-cols-1 p-2\"\n                    {...provided.droppableProps}\n                    ref={provided.innerRef}\n                  >\n                    {loginStore.login?.shortcutMenu &&\n                      loginStore.login?.shortcutMenu[\n                        loginStore.login.role || ''\n                      ].map((item, index) => (\n                        <>\n                          <Draggable\n                            key={item.title}\n                            draggableId={item.title}\n                            index={index}\n                          >\n                            {(provided, snapshot) => (\n                              <div\n                                className='flex items-center bg-blue-500  p-2 m-2 rounded-md'\n                                ref={provided.innerRef}\n                                {...provided.draggableProps}\n                                {...provided.dragHandleProps}\n                              >\n                                <Icons.RIcon\n                                  nameIcon={item.icon || 'VscListSelection'}\n                                  propsIcon={{ color: '#ffffff', size: 18 }}\n                                />\n                                <li className='m-2 text-white'>{item.title}</li>\n                              </div>\n                            )}\n                          </Draggable>\n                        </>\n                      ))}\n                  </ul>\n                )}\n              </Droppable>\n            </DragDropContext>\n            {shortcutMenuStore.isDragDropList && (\n              <div className='flex items-center justify-center'>\n                <Buttons.Button\n                  size='medium'\n                  type='solid'\n                  icon={Svg.Save}\n                  onClick={() => {\n                    shortcutMenuStore.ShortcutMenuService.updateShortcutMenu({\n                      input: {\n                        userRole: loginStore.login?.role,\n                        selectedList:\n                          loginStore.login?.shortcutMenu &&\n                          loginStore.login?.shortcutMenu[\n                            loginStore.login.role || ''\n                          ],\n                        _id: loginStore.login?._id,\n                      },\n                    }).then(res => {\n                      if (res.updateShortcutMenu.success) {\n                        Toast.success({\n                          message: `😊 ${res.updateShortcutMenu.message}`,\n                        });\n                        shortcutMenuStore.updateDragDrop(false);\n                      } else {\n                        Toast.error({\n                          message: '😔Please try agian.',\n                        });\n                      }\n                    });\n                  }}\n                >\n                  Update\n                </Buttons.Button>\n                <br /> <br />\n              </div>\n            )}\n          </div>\n        )}\n\n      <hr />\n      <div className='flex-wrap'>\n        <label className='mt-2'>List:</label>\n        <ul className='grid sm:grid-cols-1 md:grid-cols-6 xl:grid-cols-6 p-2'>\n          {shortcutMenuStore.shortcutMenuList &&\n            shortcutMenuStore.shortcutMenuList?.map((item, index) => (\n              <>\n                <div className='flex items-center bg-gray-500  p-2 m-2 rounded-md '>\n                  <input\n                    type='checkbox'\n                    className='mr-2'\n                    name={item.name}\n                    value={item.name}\n                    checked={item.selected}\n                    onChange={() => onItemSelect(item, index)}\n                  />\n\n                  <Icons.RIcon\n                    nameIcon={item.icon || 'VscListSelection'}\n                    propsIcon={{ color: '#ffffff', size: 18 }}\n                  />\n                  <li className='m-2 text-white'>{item.title}</li>\n                </div>\n              </>\n            ))}\n        </ul>\n        <br />\n        <List direction='row' space={3} align='center'>\n          <Buttons.Button\n            size='medium'\n            type='solid'\n            icon={Svg.Save}\n            onClick={() => {\n              const selectedList = shortcutMenuStore.shortcutMenuList?.filter(\n                item => item.selected === true,\n              );\n              const userRole = loginStore.login?.role;\n              if (selectedList && selectedList?.length > 0) {\n                shortcutMenuStore.ShortcutMenuService.updateShortcutMenu({\n                  input: {\n                    userRole,\n                    selectedList: selectedList,\n                    _id: loginStore.login?._id,\n                  },\n                }).then(res => {\n                  if (res.updateShortcutMenu.success) {\n                    Toast.success({\n                      message: `😊 ${res.updateShortcutMenu.message}`,\n                    });\n                    loginStore.updateLogin({\n                      ...loginStore.login,\n                      shortcutMenu: res.updateShortcutMenu.data.shortcutMenu,\n                    });\n                  } else {\n                    Toast.error({\n                      message: '😔Please try agian.',\n                    });\n                  }\n                });\n              }\n            }}\n          >\n            Update\n          </Buttons.Button>\n        </List>\n      </div>\n    </>\n  );\n});\n\nexport default ShortcutMenu;\n"],"names":["ShortcutMenu","observer","_routerStore$selected","_loginStore$login7","_loginStore$login8","_loginStore$login9","_loginStore$login10","_shortcutMenuStore$sh","_useStores","useStores","loginStore","shortcutMenuStore","routerStore","useEffect","_routerStore$userRout","list","userRouter","filter","item","children","_loginStore$login","_loginStore$login2","_loginStore$login3","userShortcutMenu","login","shortcutMenu","role","userItem","category","name","length","selected","push","updateShortcutMenu","_jsxs","_Fragment","_jsx","MainPageHeadingComponents","title","selectedComponents","store","className","DragDropContext","onDragEnd","result","_loginStore$login4","_loginStore$login5","_loginStore$login6","items","Array","from","_items$splice","splice","source","index","reorderedItem","_slicedToArray","destination","updateLogin","_objectSpread","_defineProperty","updateDragDrop","Droppable","droppableId","direction","provided","snapshot","_loginStore$login11","_loginStore$login12","isDraggingOver","style","background","display","padding","overflow","droppableProps","ref","innerRef","map","Draggable","draggableId","draggableProps","dragHandleProps","Icons","nameIcon","icon","propsIcon","color","size","isDragDropList","Buttons","type","Svg","onClick","_loginStore$login13","_loginStore$login14","_loginStore$login15","_loginStore$login16","ShortcutMenuService","input","userRole","selectedList","_id","then","res","success","Toast","message","concat","error","shortcutMenuList","value","checked","onChange","onItemSelect","List","space","align","_shortcutMenuStore$sh2","_loginStore$login17","_loginStore$login18","data"],"sourceRoot":""}