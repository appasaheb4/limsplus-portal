{"version":3,"file":"static/js/1932.045675e7.chunk.js","mappings":"uSAkBMA,GAAUC,EAAAA,EAAAA,KAAS,WAAO,IAADC,EAC7BC,GAAkDC,EAAAA,EAAAA,MAA1CC,EAAYF,EAAZE,aAAcC,EAAWH,EAAXG,YAAaC,EAAUJ,EAAVI,WACnCC,GAAsCC,EAAAA,EAAAA,YAAkBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAWF,EAAA,GAAEG,EAAcH,EAAA,GAElCI,GAKIC,EAAAA,EAAAA,MACJC,GALSF,EAAPG,QACYH,EAAZI,aACmBJ,EAAnBK,UAAaC,OACLN,EAARO,UAEoDZ,EAAAA,EAAAA,aAAea,GAAAX,EAAAA,EAAAA,GAAAK,EAAA,GAA9DO,EAAmBD,EAAA,GAAEE,EAAsBF,EAAA,GAClDG,GAA4ChB,EAAAA,EAAAA,YAAeiB,GAAAf,EAAAA,EAAAA,GAAAc,EAAA,GAAtCC,EAAA,GAAmBA,EAAA,GAExC,OACEC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAe,CACdC,OAAqC,QAA9B9B,EAAAI,EAAY2B,0BAAkB,IAAA/B,OAAA,EAA9BA,EAAgC8B,QAAS,GAChDE,MAAO3B,KAGTuB,EAAAA,EAAAA,KAAA,OAAKK,UAAU,yCAAwCN,UACrDC,EAAAA,EAAAA,KAACM,EAAAA,GAAW,CACVC,KAAMhC,EAAaiC,aAAe,GAClCC,UAAWlC,EAAamC,iBACxBC,OAAQC,EAAAA,EAAAA,gBACNpC,EAAYqC,eACZ,QAEFC,SAAUF,EAAAA,EAAAA,gBACRpC,EAAYqC,eACZ,UAEFE,SAAUH,EAAAA,EAAAA,gBACRpC,EAAYqC,eACZ,UAEFG,SAAUJ,EAAAA,EAAAA,gBACRpC,EAAYqC,eACZ,UAEFI,iBAAkB,SAACC,EAAMC,GACvB,EAEFC,SAAU,SAACC,EAAMC,EAAQJ,EAAMC,GAG7B,EAEFI,SAAU,SAAAC,GACRjD,EAAakD,eACVC,uBAAuB,CAAEC,MAAO,CAAEC,SAAc,OAAJJ,QAAI,IAAJA,OAAI,EAAJA,EAAMI,YAClDC,KAAI,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAC,SAAAC,EAAMC,GAAG,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAR,EAAAA,EAAAA,KAAAS,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACiB,QAA9BR,EAAID,EAAIT,8BAAsB,IAAAU,GAA1BA,EAA4BS,SAC9BC,QAAQC,IAAI,CACVC,QAC4B,QADrBX,EACLF,EAAIT,8BAAsB,IAAAW,GAAa,QAAbC,EAA1BD,EAA4BY,mBAAW,IAAAX,GAAe,QAAfC,EAAvCD,EAAyCY,qBAAa,IAAAX,OAA5B,EAA1BA,EACIS,UAERtD,EAAuB,CACrByD,MAAM,EACN5C,KAAgC,QAA5BiC,EAAEL,EAAIT,8BAAsB,IAAAc,OAAA,EAA1BA,EAA4BS,eAGpCG,EAAAA,GAAMC,MAAM,CACVC,QAAQ,gBAADC,OAAQpB,EAAIT,uBAAuB4B,WACzC,wBAAAZ,EAAAc,OAAA,GAAAtB,EAAA,KACN,gBAAAuB,GAAA,OAAA3B,EAAA4B,MAAA,KAAAC,UAAE,CAAF,CAfI,GAgBT,OAGJ3D,EAAAA,EAAAA,KAAC4D,EAAAA,GAAiBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACZpE,GAAmB,IACvBqE,QAAS,WACPpE,EAAuB,CAAEyD,MAAM,GACjC,EACAY,gBAAiB,SAACC,EAAM3C,GACjBvC,EAaHmF,OAAOC,KAAK7C,EAAOvC,EAAa,UAZhCP,EAAakD,eACV0C,qBAAqB,CAAExC,MAAO,CAAEqC,KAAAA,KAChCnC,MAAK,SAAAM,GACmC,IAADiC,EAAAC,EAAlClC,EAAIgC,qBAAqBtB,UAC3B9D,EAAuC,QAAzBqF,EAACjC,EAAIgC,4BAAoB,IAAAC,OAAA,EAAxBA,EAA0BtF,aACzCmF,OAAOC,KAAK,GAADX,OACNlC,EAAI,KAAAkC,OAA4B,QAA5Bc,EAAIlC,EAAIgC,4BAAoB,IAAAE,OAAA,EAAxBA,EAA0BvF,aACrC,UAGN,GAIN,OAIR,IAEA,W","sources":["features/account-receivable/receipt/screens/receipt.screen.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { observer } from 'mobx-react';\n\nimport {\n  Header,\n  PageHeading,\n  PageHeadingLabDetails,\n  Toast,\n  MainPageHeading,\n} from '@/library/components';\nimport { useForm } from 'react-hook-form';\nimport { RouterFlow } from '@/flows';\nimport { ReceiptList } from '../components';\nimport { ModalReceiptShare } from '../../components';\nimport '@/library/assets/css/accordion.css';\nimport { useStores } from '@/stores';\nimport 'react-accessible-accordion/dist/fancy-example.css';\n\nconst Receipt = observer(() => {\n  const { receiptStore, routerStore, loginStore } = useStores();\n  const [receiptPath, setReceiptPath] = useState<string>();\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n  } = useForm();\n  const [modalPaymentReceipt, setModalPaymentReceipt] = useState<any>();\n  const [receiptDetails, setReceiptDetails] = useState<any>();\n\n  return (\n    <>\n      <MainPageHeading\n        title={routerStore.selectedComponents?.title || ''}\n        store={loginStore}\n      />\n      {/*  */}\n      <div className='p-3 rounded-lg shadow-xl overflow-auto'>\n        <ReceiptList\n          data={receiptStore.receiptList || []}\n          totalSize={receiptStore.receiptListCount}\n          isView={RouterFlow.checkPermission(\n            routerStore.userPermission,\n            'View',\n          )}\n          isDelete={RouterFlow.checkPermission(\n            routerStore.userPermission,\n            'Delete',\n          )}\n          isUpdate={RouterFlow.checkPermission(\n            routerStore.userPermission,\n            'Update',\n          )}\n          isExport={RouterFlow.checkPermission(\n            routerStore.userPermission,\n            'Export',\n          )}\n          onPageSizeChange={(page, limit) => {\n            // bannerStore.fetchListBanner(page, limit);\n          }}\n          onFilter={(type, filter, page, limit) => {\n            // bannerStore.BannerService.filter({\n            //   input: {type, filter, page, limit},\n            // });\n          }}\n          onReport={item => {\n            receiptStore.receiptService\n              .generatePaymentReceipt({ input: { headerId: item?.headerId } })\n              .then(async res => {\n                if (res.generatePaymentReceipt?.success) {\n                  console.log({\n                    labLogo:\n                      res.generatePaymentReceipt?.receiptData?.headerDetails\n                        ?.labLogo,\n                  });\n                  setModalPaymentReceipt({\n                    show: true,\n                    data: res.generatePaymentReceipt?.receiptData,\n                  });\n                } else\n                  Toast.error({\n                    message: `ðŸ˜” ${res.generatePaymentReceipt.message}`,\n                  });\n              });\n          }}\n        />\n      </div>\n      <ModalReceiptShare\n        {...modalPaymentReceipt}\n        onClose={() => {\n          setModalPaymentReceipt({ show: false });\n        }}\n        onReceiptUpload={(file, type) => {\n          if (!receiptPath) {\n            receiptStore.receiptService\n              .paymentReceiptUpload({ input: { file } })\n              .then(res => {\n                if (res.paymentReceiptUpload.success) {\n                  setReceiptPath(res.paymentReceiptUpload?.receiptPath);\n                  window.open(\n                    `${type} ${res.paymentReceiptUpload?.receiptPath}`,\n                    '_blank',\n                  );\n                }\n              });\n          } else {\n            window.open(type + receiptPath, '_blank');\n          }\n        }}\n      />\n    </>\n  );\n});\n\nexport default Receipt;\n"],"names":["Receipt","observer","_routerStore$selected","_useStores","useStores","receiptStore","routerStore","loginStore","_useState","useState","_useState2","_slicedToArray","receiptPath","setReceiptPath","_useForm","useForm","_useState3","control","handleSubmit","formState","errors","setValue","_useState4","modalPaymentReceipt","setModalPaymentReceipt","_useState5","_useState6","_jsxs","_Fragment","children","_jsx","MainPageHeading","title","selectedComponents","store","className","ReceiptList","data","receiptList","totalSize","receiptListCount","isView","RouterFlow","userPermission","isDelete","isUpdate","isExport","onPageSizeChange","page","limit","onFilter","type","filter","onReport","item","receiptService","generatePaymentReceipt","input","headerId","then","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","res","_res$generatePaymentR","_res$generatePaymentR2","_res$generatePaymentR3","_res$generatePaymentR4","_res$generatePaymentR5","wrap","_context","prev","next","success","console","log","labLogo","receiptData","headerDetails","show","Toast","error","message","concat","stop","_x","apply","arguments","ModalReceiptShare","_objectSpread","onClose","onReceiptUpload","file","window","open","paymentReceiptUpload","_res$paymentReceiptUp","_res$paymentReceiptUp2"],"sourceRoot":""}