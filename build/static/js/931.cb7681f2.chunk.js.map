{"version":3,"file":"static/js/931.cb7681f2.chunk.js","mappings":"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","sources":["features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0001/temp0001-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0001/temp0001.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0002/temp0002-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0002/temp0002.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0003/temp0003-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0003/temp0003.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0005/pdf-patient-details.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0005/pdf-result-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0005/index.tsx","features/report-builder/report-template/components/molecules/pdf/common/aarvak-diagnostic-center/pdf-fotter.component.tsx","features/report-builder/report-template/components/molecules/pdf/common/aarvak-diagnostic-center/pdf-header.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-branding/temp0001/temp0001-footer.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-branding/temp0001/temp0001-header.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-branding/temp0001/temp0001-sub-header.component.tsx","features/report-builder/report-template/components/molecules/pdf/page-branding/temp0001/temp0001.component.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adb-medical-report/index.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adb-medical-report/pdf-medical-checkup.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adb-medical-report/pdf-medicial-fitness-certificate.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adc-without-header-footer/index.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adc-without-header-footer/pdf-patient-details.component.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adc-without-header-footer/pdf-result-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adc/index.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adc/pdf-patient-details.component.tsx","features/report-builder/report-template/components/molecules/pdf/static/aaarvak-diagnostic-center/adc/pdf-result-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0004/index.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0004/pdf-patient-details.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0004/pdf-result-list.component.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0006/index.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0006/pdf-medical-checkup.tsx","features/report-builder/report-template/components/molecules/pdf/template-patient-result/temp0006/pdf-medicial-fitness-certificate.tsx","features/report-builder/report-template/components/molecules/pdf/template-setting/temp0001/temp0001.component.tsx"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _ from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {PdfSmall, PdfBorderView, PdfImage, PdfView} from '@/library/components';\n\nconst styles = StyleSheet.create({\n  table: {\n    borderColor: '#000',\n    borderWidth: 1,\n    marginHorizontal: 20,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n  },\n  headerBg: {\n    backgroundColor: '#aaa',\n    borderStyle: 'solid',\n    borderColor: '#000',\n    borderWidth: 1,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfTPRTemp0001ListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data: Array<any>;\n}\n\nexport const PdfTPRTemp0001List = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfTPRTemp0001ListProps) => {\n  const [patientResultList, setPatientResultList] = useState<Array<any>>();\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Results',\n      width: '20',\n    },\n    {\n      title: 'Units',\n      width: '20',\n    },\n    {\n      title: 'Bio. Ref. Interval',\n      width: '20',\n    },\n  ];\n\n  useEffect(() => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        const panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          const testHeader: Array<any> = [];\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            testItems.filter(testItem => {\n              testHeader.push({\n                testHeader: {\n                  testDescription: testKey,\n                  testMethodDescription:\n                    testItem?.testHeader?.testMethodDescription,\n                  testBottomMarker: testItem?.testHeader?.testBottomMarker,\n                  testRightMarker: testItem?.testHeader?.testRightMarker,\n                  tpmPrintTestName: testItem?.testHeader?.tpmPrintTestName,\n                  tpmTestMethod: testItem?.testHeader?.tpmTestMethod,\n                },\n                patientResultList: {\n                  testName: testItem?.testName,\n                  result: testItem?.result,\n                  units: testItem?.units,\n                  bioRefInterval: testItem?.bioRefInterval,\n                },\n                testFooter: {\n                  testInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.testInterpretation,\n                  tpmTestInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.tpmTestInterpretation,\n                },\n              });\n            });\n          }\n          panelHeader.push({\n            panelHeader: {\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              tpmPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPrintPanelName,\n              tpmPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPanelMethod,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            testHeader,\n          });\n        }\n        patientResultList.push({\n          departmentHeader: {\n            departmentName: deptKey,\n          },\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      setPatientResultList(patientResultList);\n    }\n  }, [data]);\n\n  return (\n    <View style={[styles.table, {...style}]}>\n      <View\n        style={[styles.tableRow, styles.headerBg, {...headerStyle}]}\n        fixed={headerFixed}\n      >\n        {fields.map((item, index) => (\n          <View key={index} style={[{width: item.width + '%'}]}>\n            <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n          </View>\n        ))}\n      </View>\n      {patientResultList?.map((deptItem, index) => (\n        <>\n          <PdfView key={index} mh={0} p={0}>\n            {/* Department Header */}\n            <PdfBorderView\n              style={{\n                width: '100%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={1}\n              borderColor='#000'\n            >\n              <PdfSmall style={{marginLeft: 10}}>\n                {deptItem?.departmentHeader?.departmentName}\n              </PdfSmall>\n            </PdfBorderView>\n            {/* Panel Header */}\n            {deptItem.panelHeader.map((panelItem, index) => (\n              <>\n                <PdfBorderView\n                  style={{\n                    width: '100%',\n                  }}\n                  mh={0}\n                  mv={0}\n                  p={0}\n                  bw={1}\n                  borderColor='#000'\n                >\n                  <PdfSmall style={{marginLeft: 10}}>\n                    {panelItem.panelHeader?.tpmPrintPanelName\n                      ? panelItem?.panelHeader?.panelDescription\n                      : ''}\n                  </PdfSmall>\n                  <PdfSmall\n                    style={{\n                      marginLeft: 10,\n                      fontSize: 0,\n                      marginTop: -2,\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {panelItem?.panelHeader?.tpmPanelMethod\n                      ? panelItem?.panelHeader?.panelMethodDescription\n                      : ''}\n                  </PdfSmall>\n                </PdfBorderView>\n                {/* Test Header */}\n                {panelItem?.testHeader?.map((testItem, testIndex) => (\n                  <>\n                    <PdfBorderView\n                      style={{\n                        width: '100%',\n                      }}\n                      mh={0}\n                      mv={0}\n                      p={0}\n                      bw={1}\n                      borderColor='#000'\n                    >\n                      {testItem.testHeader?.tpmPrintTestName ? (\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testHeader?.testDescription}{' '}\n                          {` ${testItem.testHeader?.testRightMarker}`}\n                        </PdfSmall>\n                      ) : null}\n                      <PdfSmall\n                        style={{\n                          marginLeft: 10,\n                          fontSize: 8,\n                          marginTop: -2,\n                          fontWeight: 'bold',\n                        }}\n                      >\n                        {testItem?.testHeader?.tpmTestMethod\n                          ? testItem?.testHeader?.testMethodDescription\n                          : ''}\n                      </PdfSmall>\n                    </PdfBorderView>\n\n                    {/* Patient Result List */}\n\n                    <View key={testIndex} style={styles.tableRow}>\n                      {Object.entries(testItem?.patientResultList).map(\n                        (_item: any, _idx) => (\n                          <PdfBorderView\n                            key={testIndex}\n                            style={{\n                              width: fields[_idx]?.width + '%',\n                            }}\n                            mh={0}\n                            mv={0}\n                            p={0}\n                            bw={1}\n                            borderColor='#000'\n                          >\n                            {typeof _item[1] == 'object' ? (\n                              <>\n                                <PdfSmall style={{marginLeft: 10}}>\n                                  {_item[1]?.analyteDescription}\n                                </PdfSmall>\n\n                                {_item[1]?.tpmAnalyteMethod ? (\n                                  <PdfSmall style={{marginLeft: 10}}>\n                                    {_item[1]?.analyteMethodDescription}\n                                  </PdfSmall>\n                                ) : null}\n                                {_item[1]?.tpmAnalyteInterpretation ? (\n                                  <PdfSmall style={{marginLeft: 10}}>\n                                    {_item[1]?.analyteMasterInterpretation}\n                                  </PdfSmall>\n                                ) : null}\n                              </>\n                            ) : (\n                              <PdfSmall style={{textAlign: 'center'}}>\n                                {_item[1] || ''}\n                              </PdfSmall>\n                            )}\n                          </PdfBorderView>\n                        ),\n                      )}\n                    </View>\n\n                    {/* Test Footer */}\n                    {testItem?.testFooter?.tpmTestInterpretation && (\n                      <PdfBorderView\n                        style={{\n                          width: '100%',\n                        }}\n                        mh={0}\n                        mv={0}\n                        p={0}\n                        bw={1}\n                        borderColor='#000'\n                      >\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testFooter?.testInterpretation || ''}\n                        </PdfSmall>\n                      </PdfBorderView>\n                    )}\n                  </>\n                ))}\n\n                {/* Panel Footer */}\n                {panelItem?.panelFooter?.tpmPanelInterpretation && (\n                  <PdfBorderView\n                    style={{\n                      width: '100%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={1}\n                    borderColor='#000'\n                  >\n                    <PdfSmall style={{marginLeft: 10}}>\n                      {panelItem?.panelFooter?.panelInterpretation}\n                    </PdfSmall>\n                  </PdfBorderView>\n                )}\n              </>\n            ))}\n\n            {/* Department Footer */}\n            {deptItem?.departmentFooter?.userInfo?.length > 0 && (\n              <PdfBorderView\n                style={{\n                  width: '100%',\n                }}\n                mh={0}\n                mv={0}\n                p={0}\n                bw={1}\n                flexDirection='row'\n                borderColor='#000'\n              >\n                {deptItem?.departmentFooter?.userInfo?.map(deptFooterItem => (\n                  <PdfView flexDirection='column' alignItems='center'>\n                    <PdfImage\n                      src={deptFooterItem?.signature}\n                      style={{\n                        width: 80,\n                        height: 60,\n                        marginLeft: 10,\n                        padding: 5,\n                      }}\n                    />\n                    <PdfSmall>{deptFooterItem?.fullName}</PdfSmall>\n                    <PdfSmall style={{marginTop: -4}}>\n                      {deptFooterItem?.userDegree}\n                    </PdfSmall>\n                    <PdfSmall style={{marginTop: -4}}>\n                      {deptFooterItem?.deginisation}\n                    </PdfSmall>\n                  </PdfView>\n                ))}\n              </PdfBorderView>\n            )}\n          </PdfView>\n        </>\n      ))}\n    </View>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\nimport {PdfPBTemp0001} from '../../page-branding/temp0001/temp0001.component';\nimport {PdfTPRTemp0001List} from './temp0001-list.component';\n\ninterface PdfTPRTemp0001Props {\n  data: any;\n}\n\nexport const PdfTPRTemp0001 = observer(({data}: PdfTPRTemp0001Props) => {\n  const {pageBranding, patientReports} = data;\n  const [testBottomMarker, setTestBottomMarker] = useState<Array<any>>();\n  useEffect(() => {\n    const arrDetails: any = [];\n    patientReports?.patientResultList?.filter(item => {\n      arrDetails.push(item?.testHeader?.testBottomMarker?.details);\n    });\n    setTestBottomMarker(_.uniq(arrDetails));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [patientReports]);\n\n  return (\n    <PdfPBTemp0001\n      data={pageBranding}\n      children={\n        <>\n          {/* Address */}\n          <PdfView fixed>\n            <PdfRegular>{`${patientReports?.rLabCode || ''} - ${\n              patientReports?.rLabName || ''\n            }`}</PdfRegular>\n            <PdfRegular>{`${patientReports?.rLabAddress || ''}`}</PdfRegular>\n            <PdfRegular>{`${patientReports?.rLabCity || ''}`}</PdfRegular>\n          </PdfView>\n\n          {/* Patient Details */}\n          <PdfBorderView mv={10} fixed>\n            <PdfView mh={0} p={0} flexDirection='row'>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall fontSize={11}>{`Name: ${\n                  patientReports?.title || ''\n                } ${patientReports?.firstName || ''} ${\n                  patientReports?.middleName || ''\n                } ${patientReports?.lastName || ''}`}</PdfSmall>\n                <PdfSmall>{`Lab No: ${patientReports?.labId || ''}`}</PdfSmall>\n                <PdfSmall>{`A/c Status: ${\n                  patientReports?.acStatus || ''\n                }`}</PdfSmall>\n                <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n                  patientReports?.ageUnits || ''\n                }`}</PdfSmall>\n              </PdfGrid>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall>{`Ref By: ${patientReports?.refBy || ''}`}</PdfSmall>\n                <PdfSmall>{`Gender: ${patientReports?.sex || ''}`}</PdfSmall>\n              </PdfGrid>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall>{`Collected: ${dayjs(\n                  patientReports?.collectionDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Registration: ${dayjs(\n                  patientReports?.registrationDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Reported: ${dayjs(\n                  patientReports?.reportedDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Report Status: ${\n                  patientReports?.reportStatus || ''\n                }`}</PdfSmall>\n              </PdfGrid>\n            </PdfView>\n          </PdfBorderView>\n\n          {/* Table */}\n          <PdfTPRTemp0001List\n            headerStyle={{backgroundColor: 'transparent'}}\n            headerFixed\n            data={patientReports?.patientResultList}\n          />\n\n          {/* End of Page */}\n          <PdfView\n            style={{\n              position: 'absolute',\n              bottom: 65,\n              left: 5,\n              fontSize: 12,\n            }}\n            fixed\n          >\n            {testBottomMarker?.map(item => (\n              <PdfSmall>{` ${item}`}</PdfSmall>\n            ))}\n            {patientReports?.templatePatientResultLabWise?.endOfPage?.map(\n              item => (\n                <PdfSmall>{` ${item?.details}`}</PdfSmall>\n              ),\n            )}\n          </PdfView>\n\n          {/* End of Report */}\n          <PdfView alignItems='center' style={{marginTop: 10}}>\n            <PdfRegular fontSize={13}>\n              ---------------------- End of report ----------------------\n            </PdfRegular>\n            <PdfBorderView style={{width: '100%'}}>\n              <PdfRegular\n                style={{\n                  textDecoration: 'underline',\n                  textAlign: 'center',\n                }}\n                fontWeight='bold'\n              >\n                IMPORTANT INSTRUCTIONS\n              </PdfRegular>\n\n              <PdfView flexDirection='row' style={{marginTop: 10}}>\n                {patientReports?.templatePatientResultLabWise?.endOfReport?.map(\n                  item => (\n                    <PdfSmall>{` * ${item?.details}`}</PdfSmall>\n                  ),\n                )}\n              </PdfView>\n            </PdfBorderView>\n          </PdfView>\n        </>\n      }\n    />\n  );\n});\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _ from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {PdfSmall, PdfBorderView, PdfImage, PdfView} from '@/library/components';\nimport {decompressString} from '@/library/utils';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 20,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 5,\n  },\n  headerBg: {\n    backgroundColor: '#aaa',\n    borderStyle: 'solid',\n    borderColor: '#000',\n    borderWidth: 1,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfTPRTemp0002ListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data: Array<any>;\n}\n\nexport const PdfTPRTemp0002List = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfTPRTemp0002ListProps) => {\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Results',\n      width: '20',\n    },\n    {\n      title: 'Units',\n      width: '20',\n    },\n    {\n      title: 'Bio. Ref. Interval',\n      width: '20',\n    },\n  ];\n  const [patientResultList, setPatientResultList] = useState<Array<any>>();\n  useEffect(() => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        const panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          const testHeader: Array<any> = [];\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            testItems.filter(testItem => {\n              testHeader.push({\n                testHeader: {\n                  testDescription: testKey,\n                  testMethodDescription:\n                    testItem?.testHeader?.testMethodDescription,\n                  testBottomMarker: testItem?.testHeader?.testBottomMarker,\n                  testRightMarker: testItem?.testHeader?.testRightMarker,\n                  tpmPrintTestName: testItem?.testHeader?.tpmPrintTestName,\n                  tpmTestMethod: testItem?.testHeader?.tpmTestMethod,\n                },\n                patientResultList: {\n                  testName: testItem?.testName,\n                  result: testItem?.result,\n                  units: testItem?.units,\n                  bioRefInterval: testItem?.bioRefInterval,\n                },\n                testFooter: {\n                  testInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.testInterpretation,\n                  tpmTestInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.tpmTestInterpretation,\n                },\n              });\n            });\n          }\n          panelHeader.push({\n            panelHeader: {\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              tpmPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPrintPanelName,\n              tpmPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPanelMethod,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            testHeader,\n          });\n        }\n        patientResultList.push({\n          departmentHeader: {\n            departmentName: deptKey,\n          },\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      setPatientResultList(patientResultList);\n    }\n  }, [data]);\n\n  return (\n    <View style={[styles.table, {...style}]}>\n      <View\n        style={[styles.tableRow, styles.headerBg, {...headerStyle}]}\n        fixed={headerFixed}\n      >\n        {fields.map((item, index) => (\n          <View key={index} style={[{width: item.width + '%'}]}>\n            <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n          </View>\n        ))}\n      </View>\n      {patientResultList?.map((deptItem, index) => (\n        <>\n          <PdfView key={index} mh={0} p={0}>\n            {/* Department Header */}\n            <PdfBorderView\n              style={{\n                width: '100%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={0}\n              borderColor='transparent'\n            >\n              <PdfSmall style={{marginLeft: 10}}>\n                {deptItem?.departmentHeader?.departmentName}\n              </PdfSmall>\n            </PdfBorderView>\n            {/* Panel Header */}\n            {deptItem.panelHeader.map((panelItem, index) => (\n              <>\n                <PdfBorderView\n                  style={{\n                    width: '100%',\n                  }}\n                  mh={0}\n                  mv={0}\n                  p={0}\n                  bw={0}\n                  borderColor='transparent'\n                >\n                  <PdfSmall style={{marginLeft: 10}}>\n                    {panelItem.panelHeader?.tpmPrintPanelName\n                      ? panelItem?.panelHeader?.panelDescription\n                      : ''}\n                  </PdfSmall>\n                  <PdfSmall\n                    style={{\n                      marginLeft: 10,\n                      fontSize: 8,\n                      marginTop: -2,\n                    }}\n                  >\n                    {panelItem?.panelHeader?.tpmPanelMethod\n                      ? panelItem?.panelHeader?.panelMethodDescription\n                      : ''}\n                  </PdfSmall>\n                </PdfBorderView>\n                {/* Test Header */}\n                {panelItem?.testHeader?.map((testItem, testIndex) => (\n                  <>\n                    <PdfBorderView\n                      style={{\n                        width: '100%',\n                      }}\n                      mh={0}\n                      mv={0}\n                      p={0}\n                      bw={0}\n                      borderColor='transparent'\n                    >\n                      {testItem.testHeader?.tpmPrintTestName ? (\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testHeader?.testDescription}{' '}\n                          {` ${testItem.testHeader?.testRightMarker}`}\n                        </PdfSmall>\n                      ) : null}\n                      <PdfSmall\n                        style={{\n                          marginLeft: 10,\n                          fontSize: 8,\n                          marginTop: -2,\n                        }}\n                      >\n                        {testItem?.testHeader?.tpmTestMethod\n                          ? testItem?.testHeader?.testMethodDescription\n                          : ''}\n                      </PdfSmall>\n                    </PdfBorderView>\n\n                    {/* Patient Result List */}\n\n                    <View key={testIndex} style={styles.tableRow}>\n                      {Object.entries(testItem?.patientResultList).map(\n                        (_item: any, _idx) => (\n                          <PdfBorderView\n                            key={testIndex}\n                            style={{\n                              width: fields[_idx]?.width + '%',\n                            }}\n                            mh={0}\n                            mv={0}\n                            p={0}\n                            bw={0}\n                            borderColor='transparent'\n                          >\n                            {typeof _item[1] == 'object' ? (\n                              <>\n                                <PdfSmall style={{marginLeft: 10}}>\n                                  {_item[1]?.analyteDescription}\n                                </PdfSmall>\n\n                                {_item[1]?.tpmAnalyteMethod ? (\n                                  <PdfSmall\n                                    style={{marginLeft: 10, fontSize: 8}}\n                                  >\n                                    {_item[1]?.analyteMethodDescription}\n                                  </PdfSmall>\n                                ) : null}\n                                {_item[1]?.tpmAnalyteInterpretation ? (\n                                  <PdfSmall\n                                    style={{marginLeft: 10, fontSize: 8}}\n                                  >\n                                    {_item[1]?.analyteMasterInterpretation}\n                                  </PdfSmall>\n                                ) : null}\n                              </>\n                            ) : (\n                              <PdfSmall style={{textAlign: 'center'}}>\n                                {_item[1] || ''}\n                              </PdfSmall>\n                            )}\n                          </PdfBorderView>\n                        ),\n                      )}\n                    </View>\n\n                    {/* Test Footer */}\n                    {testItem?.testFooter?.tpmTestInterpretation && (\n                      <PdfBorderView\n                        style={{\n                          width: '100%',\n                        }}\n                        mh={0}\n                        mv={0}\n                        p={0}\n                        bw={0}\n                        borderColor='transparent'\n                      >\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testFooter?.testInterpretation || ''}\n                        </PdfSmall>\n                      </PdfBorderView>\n                    )}\n                  </>\n                ))}\n\n                {/* Panel Footer */}\n                {panelItem?.panelFooter?.tpmPanelInterpretation && (\n                  <PdfBorderView\n                    style={{\n                      width: '100%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall style={{marginLeft: 10}}>\n                      {panelItem?.panelFooter?.panelInterpretation}\n                    </PdfSmall>\n                  </PdfBorderView>\n                )}\n              </>\n            ))}\n\n            {/* Department Footer */}\n            {deptItem?.departmentFooter?.userInfo?.length > 0 && (\n              <PdfBorderView\n                style={{\n                  width: '100%',\n                }}\n                mh={0}\n                mv={0}\n                p={0}\n                bw={0}\n                flexDirection='row'\n                borderColor='transparent'\n              >\n                {deptItem?.departmentFooter?.userInfo?.map(deptFooterItem => (\n                  <PdfView flexDirection='column' alignItems='center'>\n                    <PdfImage\n                      src={deptFooterItem?.signature}\n                      style={{\n                        width: 80,\n                        height: 60,\n                        marginLeft: 10,\n                        padding: 5,\n                      }}\n                    />\n                    <PdfSmall>{deptFooterItem?.fullName}</PdfSmall>\n                    <PdfSmall style={{marginTop: -4}}>\n                      {deptFooterItem?.userDegree}\n                    </PdfSmall>\n                    <PdfSmall style={{marginTop: -4}}>\n                      {deptFooterItem?.deginisation}\n                    </PdfSmall>\n                  </PdfView>\n                ))}\n              </PdfBorderView>\n            )}\n          </PdfView>\n        </>\n      ))}\n    </View>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\nimport {PdfPBTemp0001} from '../../page-branding/temp0001/temp0001.component';\nimport {PdfTPRTemp0002List} from './temp0002-list.component';\n\ninterface PdfTPRTemp0002Props {\n  data: any;\n}\n\nexport const PdfTPRTemp0002 = observer(({data}: PdfTPRTemp0002Props) => {\n  const {pageBranding, patientReports} = data;\n  const [testBottomMarker, setTestBottomMarker] = useState<Array<any>>();\n  useEffect(() => {\n    const arrDetails: any = [];\n    patientReports?.patientResultList?.filter(item => {\n      arrDetails.push(item?.testHeader?.testBottomMarker?.details);\n    });\n    setTestBottomMarker(_.uniq(arrDetails));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [patientReports]);\n\n  return (\n    <PdfPBTemp0001\n      data={pageBranding}\n      children={\n        <>\n          {/* Address */}\n          <PdfView fixed>\n            <PdfRegular>{`${patientReports?.rLabCode || ''} - ${\n              patientReports?.rLabName || ''\n            }`}</PdfRegular>\n            <PdfRegular>{`${patientReports?.rLabAddress || ''}`}</PdfRegular>\n            <PdfRegular>{`${patientReports?.rLabCity || ''}`}</PdfRegular>\n          </PdfView>\n\n          {/* Patient Details */}\n          <PdfBorderView mv={10} fixed>\n            <PdfView mh={0} p={0} flexDirection='row'>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall fontSize={11}>{`Name: ${\n                  patientReports?.title || ''\n                } ${patientReports?.firstName || ''} ${\n                  patientReports?.middleName || ''\n                } ${patientReports?.lastName || ''}`}</PdfSmall>\n                <PdfSmall>{`Lab No: ${patientReports?.labId || ''}`}</PdfSmall>\n                <PdfSmall>{`A/c Status: ${\n                  patientReports?.acStatus || ''\n                }`}</PdfSmall>\n                <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n                  patientReports?.ageUnits || ''\n                }`}</PdfSmall>\n              </PdfGrid>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall>{`Ref By: ${patientReports?.refBy || ''}`}</PdfSmall>\n                <PdfSmall>{`Gender: ${patientReports?.sex || ''}`}</PdfSmall>\n              </PdfGrid>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall>{`Collected: ${dayjs(\n                  patientReports?.collectionDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Registration: ${dayjs(\n                  patientReports?.registrationDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Reported: ${dayjs(\n                  patientReports?.reportedDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Report Status: ${\n                  patientReports?.reportStatus || ''\n                }`}</PdfSmall>\n              </PdfGrid>\n            </PdfView>\n          </PdfBorderView>\n\n          {/* Table */}\n          <PdfTPRTemp0002List\n            headerStyle={{backgroundColor: 'transparent'}}\n            headerFixed\n            data={patientReports?.patientResultList}\n          />\n\n          {/* End of Page */}\n          <PdfView\n            style={{\n              position: 'absolute',\n              bottom: 65,\n              left: 5,\n              fontSize: 12,\n            }}\n            fixed\n          >\n            {testBottomMarker?.map(item => (\n              <PdfSmall>{` ${item}`}</PdfSmall>\n            ))}\n            {patientReports?.templatePatientResultLabWise?.endOfPage?.map(\n              item => (\n                <PdfSmall>{` ${item?.details}`}</PdfSmall>\n              ),\n            )}\n          </PdfView>\n\n          {/* End of Report */}\n          <PdfView alignItems='center' style={{marginTop: 10}}>\n            <PdfRegular fontSize={13}>\n              ---------------------- End of report ----------------------\n            </PdfRegular>\n            <PdfBorderView style={{width: '100%'}}>\n              <PdfRegular\n                style={{\n                  textDecoration: 'underline',\n                  textAlign: 'center',\n                }}\n                fontWeight='bold'\n              >\n                IMPORTANT INSTRUCTIONS\n              </PdfRegular>\n\n              <PdfView flexDirection='row' style={{marginTop: 10}}>\n                {patientReports?.templatePatientResultLabWise?.endOfReport?.map(\n                  item => (\n                    <PdfSmall>{` * ${item?.details}`}</PdfSmall>\n                  ),\n                )}\n              </PdfView>\n            </PdfBorderView>\n          </PdfView>\n        </>\n      }\n    />\n  );\n});\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _ from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {PdfSmall, PdfBorderView, PdfImage, PdfView} from '@/library/components';\nimport {decompressString} from '@/library/utils';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 20,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 5,\n  },\n  headerBg: {\n    backgroundColor: '#aaa',\n    borderStyle: 'solid',\n    borderColor: '#000',\n    borderWidth: 1,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfTPRTemp0003ListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data: Array<any>;\n}\n\nexport const PdfTPRTemp0003List = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfTPRTemp0003ListProps) => {\n  const [patientResultList, setPatientResultList] = useState<Array<any>>();\n  const [departmentFooter, setDepartmentFooter] = useState<Array<any>>([]);\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Results',\n      width: '20',\n    },\n    {\n      title: 'Units',\n      width: '20',\n    },\n    {\n      title: 'Bio. Ref. Interval',\n      width: '20',\n    },\n  ];\n\n  useEffect(() => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        const panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          const testHeader: Array<any> = [];\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            testItems.filter(testItem => {\n              testHeader.push({\n                testHeader: {\n                  testDescription: testKey,\n                  testMethodDescription:\n                    testItem?.testHeader?.testMethodDescription,\n                  testBottomMarker: testItem?.testHeader?.testBottomMarker,\n                  testRightMarker: testItem?.testHeader?.testRightMarker,\n                  tpmPrintTestName: testItem?.testHeader?.tpmPrintTestName,\n                  tpmTestMethod: testItem?.testHeader?.tpmTestMethod,\n                },\n                patientResultList: {\n                  testName: testItem?.testName,\n                  result: testItem?.result,\n                  units: testItem?.units,\n                  bioRefInterval: testItem?.bioRefInterval,\n                },\n                testFooter: {\n                  testInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.testInterpretation,\n                  tpmTestInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.tpmTestInterpretation,\n                },\n              });\n            });\n          }\n          panelHeader.push({\n            panelHeader: {\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              tpmPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPrintPanelName,\n              tpmPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPanelMethod,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            testHeader,\n          });\n        }\n        patientResultList.push({\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      const userInfo: Array<any> = [];\n      patientResultList.map(item => {\n        return item?.departmentFooter?.userInfo?.filter(e => {\n          userInfo.push(e);\n        });\n      });\n      const departmentFooter = _.uniqBy(userInfo, function (e) {\n        return e?.userId;\n      });\n      setDepartmentFooter(departmentFooter);\n      setPatientResultList(patientResultList);\n    }\n  }, [data]);\n\n  return (\n    <View style={[styles.table, {...style}]}>\n      <View\n        style={[styles.tableRow, styles.headerBg, {...headerStyle}]}\n        fixed={headerFixed}\n      >\n        {fields.map((item, index) => (\n          <View key={index} style={[{width: item.width + '%'}]}>\n            <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n          </View>\n        ))}\n      </View>\n      {patientResultList?.map((deptItem, index) => (\n        <>\n          <PdfView key={index} mh={0} p={0}>\n            {/* Panel Header */}\n            {deptItem.panelHeader.map((panelItem, index) => (\n              <>\n                <PdfBorderView\n                  style={{\n                    width: '100%',\n                  }}\n                  mh={0}\n                  mv={0}\n                  p={0}\n                  bw={0}\n                  borderColor='transparent'\n                >\n                  <PdfSmall style={{marginLeft: 10}}>\n                    {panelItem.panelHeader?.tpmPrintPanelName\n                      ? panelItem?.panelHeader?.panelDescription\n                      : ''}\n                  </PdfSmall>\n                  <PdfSmall\n                    style={{\n                      marginLeft: 10,\n                      fontSize: 8,\n                      marginTop: -2,\n                    }}\n                  >\n                    {panelItem?.panelHeader?.tpmPanelMethod\n                      ? panelItem?.panelHeader?.panelMethodDescription\n                      : ''}\n                  </PdfSmall>\n                </PdfBorderView>\n                {/* Test Header */}\n                {panelItem?.testHeader?.map((testItem, testIndex) => (\n                  <>\n                    <PdfBorderView\n                      style={{\n                        width: '100%',\n                      }}\n                      mh={0}\n                      mv={0}\n                      p={0}\n                      bw={0}\n                      borderColor='transparent'\n                    >\n                      {testItem.testHeader?.tpmPrintTestName ? (\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testHeader?.testDescription}{' '}\n                          {` ${testItem.testHeader?.testRightMarker}`}\n                        </PdfSmall>\n                      ) : null}\n                      <PdfSmall\n                        style={{\n                          marginLeft: 10,\n                          fontSize: 8,\n                          marginTop: -2,\n                        }}\n                      >\n                        {testItem?.testHeader?.tpmTestMethod\n                          ? testItem?.testHeader?.testMethodDescription\n                          : ''}\n                      </PdfSmall>\n                    </PdfBorderView>\n\n                    {/* Patient Result List */}\n\n                    <View key={testIndex} style={styles.tableRow}>\n                      {Object.entries(testItem?.patientResultList).map(\n                        (_item: any, _idx) => (\n                          <PdfBorderView\n                            key={testIndex}\n                            style={{\n                              width: fields[_idx]?.width + '%',\n                            }}\n                            mh={0}\n                            mv={0}\n                            p={0}\n                            bw={0}\n                            borderColor='transparent'\n                          >\n                            {typeof _item[1] == 'object' ? (\n                              <>\n                                <PdfSmall style={{marginLeft: 10}}>\n                                  {_item[1]?.analyteDescription}\n                                </PdfSmall>\n\n                                {_item[1]?.tpmAnalyteMethod ? (\n                                  <PdfSmall\n                                    style={{marginLeft: 10, fontSize: 8}}\n                                  >\n                                    {_item[1]?.analyteMethodDescription}\n                                  </PdfSmall>\n                                ) : null}\n                                {_item[1]?.tpmAnalyteInterpretation ? (\n                                  <PdfSmall\n                                    style={{marginLeft: 10, fontSize: 8}}\n                                  >\n                                    {_item[1]?.analyteMasterInterpretation}\n                                  </PdfSmall>\n                                ) : null}\n                              </>\n                            ) : (\n                              <PdfSmall style={{textAlign: 'center'}}>\n                                {_item[1] || ''}\n                              </PdfSmall>\n                            )}\n                          </PdfBorderView>\n                        ),\n                      )}\n                    </View>\n\n                    {/* Test Footer */}\n                    {testItem?.testFooter?.tpmTestInterpretation && (\n                      <PdfBorderView\n                        style={{\n                          width: '100%',\n                        }}\n                        mh={0}\n                        mv={0}\n                        p={0}\n                        bw={0}\n                        borderColor='transparent'\n                      >\n                        <PdfSmall style={{marginLeft: 10}}>\n                          {testItem?.testFooter?.testInterpretation || ''}\n                        </PdfSmall>\n                      </PdfBorderView>\n                    )}\n                  </>\n                ))}\n\n                {/* Panel Footer */}\n                {panelItem?.panelFooter?.tpmPanelInterpretation && (\n                  <PdfBorderView\n                    style={{\n                      width: '100%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall style={{marginLeft: 10}}>\n                      {panelItem?.panelFooter?.panelInterpretation}\n                    </PdfSmall>\n                  </PdfBorderView>\n                )}\n              </>\n            ))}\n          </PdfView>\n        </>\n      ))}\n      {/* Department Footer */}\n      {departmentFooter?.length > 0 && (\n        <PdfBorderView\n          style={{\n            width: '100%',\n          }}\n          mh={0}\n          mv={0}\n          p={0}\n          bw={0}\n          flexDirection='row'\n          borderColor='transparent'\n        >\n          {departmentFooter?.map(deptFooterItem => (\n            <PdfView flexDirection='column' alignItems='center'>\n              <PdfImage\n                src={deptFooterItem?.signature}\n                style={{\n                  width: 80,\n                  height: 60,\n                  marginLeft: 10,\n                  padding: 5,\n                }}\n              />\n              <PdfSmall>{deptFooterItem?.fullName}</PdfSmall>\n              <PdfSmall style={{marginTop: -4}}>\n                {deptFooterItem?.userDegree}\n              </PdfSmall>\n              <PdfSmall style={{marginTop: -4}}>\n                {deptFooterItem?.deginisation}\n              </PdfSmall>\n            </PdfView>\n          ))}\n        </PdfBorderView>\n      )}\n    </View>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfRegular,\n  PdfView,\n  PdfBorderView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\nimport {PdfPBTemp0001} from '../../page-branding/temp0001/temp0001.component';\nimport {PdfTPRTemp0003List} from './temp0003-list.component';\n\ninterface PdfTPRTemp0003Props {\n  data: any;\n}\n\nexport const PdfTPRTemp0003 = observer(({data}: PdfTPRTemp0003Props) => {\n  const {pageBranding, patientReports} = data;\n  const [testBottomMarker, setTestBottomMarker] = useState<Array<any>>();\n  useEffect(() => {\n    const arrDetails: any = [];\n    patientReports?.patientResultList?.filter(item => {\n      arrDetails.push(item?.testHeader?.testBottomMarker?.details);\n    });\n    setTestBottomMarker(_.uniq(arrDetails));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [patientReports]);\n\n  return (\n    <PdfPBTemp0001\n      data={pageBranding}\n      children={\n        <>\n          {/* Address */}\n          <PdfView fixed>\n            <PdfRegular>{`${patientReports?.rLabCode || ''} - ${\n              patientReports?.rLabName || ''\n            }`}</PdfRegular>\n            <PdfRegular>{`${patientReports?.rLabAddress || ''}`}</PdfRegular>\n            <PdfRegular>{`${patientReports?.rLabCity || ''}`}</PdfRegular>\n          </PdfView>\n\n          {/* Patient Details */}\n          <PdfBorderView mv={10} fixed>\n            <PdfView mh={0} p={0} flexDirection='row'>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall fontSize={11}>{`Name: ${\n                  patientReports?.title || ''\n                } ${patientReports?.firstName || ''} ${\n                  patientReports?.middleName || ''\n                } ${patientReports?.lastName || ''}`}</PdfSmall>\n                <PdfSmall>{`Lab No: ${patientReports?.labId || ''}`}</PdfSmall>\n                <PdfSmall>{`A/c Status: ${\n                  patientReports?.acStatus || ''\n                }`}</PdfSmall>\n                <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n                  patientReports?.ageUnits || ''\n                }`}</PdfSmall>\n              </PdfGrid>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall>{`Ref By: ${patientReports?.refBy || ''}`}</PdfSmall>\n                <PdfSmall>{`Gender: ${patientReports?.sex || ''}`}</PdfSmall>\n              </PdfGrid>\n              <PdfGrid cols={3} bg='transparent'>\n                <PdfSmall>{`Collected: ${dayjs(\n                  patientReports?.collectionDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Registration: ${dayjs(\n                  patientReports?.registrationDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Reported: ${dayjs(\n                  patientReports?.reportedDate,\n                ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n                <PdfSmall>{`Report Status: ${\n                  patientReports?.reportStatus || ''\n                }`}</PdfSmall>\n              </PdfGrid>\n            </PdfView>\n          </PdfBorderView>\n\n          {/* Table */}\n          <PdfTPRTemp0003List\n            headerStyle={{backgroundColor: 'transparent'}}\n            headerFixed\n            data={patientReports?.patientResultList}\n          />\n\n          {/* End of Page */}\n          <PdfView\n            style={{\n              position: 'absolute',\n              bottom: 65,\n              left: 5,\n              fontSize: 12,\n            }}\n            fixed\n          >\n            {testBottomMarker?.map(item => (\n              <PdfSmall>{` ${item}`}</PdfSmall>\n            ))}\n            {patientReports?.templatePatientResultLabWise?.endOfPage?.map(\n              item => (\n                <PdfSmall>{` ${item?.details}`}</PdfSmall>\n              ),\n            )}\n          </PdfView>\n\n          {/* End of Report */}\n          <PdfView alignItems='center' style={{marginTop: 10}}>\n            <PdfRegular fontSize={13}>\n              ---------------------- End of report ----------------------\n            </PdfRegular>\n            <PdfBorderView style={{width: '100%'}}>\n              <PdfRegular\n                style={{\n                  textDecoration: 'underline',\n                  textAlign: 'center',\n                }}\n                fontWeight='bold'\n              >\n                IMPORTANT INSTRUCTIONS\n              </PdfRegular>\n\n              <PdfView flexDirection='row' style={{marginTop: 10}}>\n                {patientReports?.templatePatientResultLabWise?.endOfReport?.map(\n                  item => (\n                    <PdfSmall>{` * ${item?.details}`}</PdfSmall>\n                  ),\n                )}\n              </PdfView>\n            </PdfBorderView>\n          </PdfView>\n        </>\n      }\n    />\n  );\n});\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfPatientDetailsProps {\n  data?: any;\n}\n\nexport const PdfPatientDetails = observer(\n  ({data: patientReports}: PdfPatientDetailsProps) => {\n    return (\n      <PdfBorderView mv={10} fixed>\n        <PdfView mh={10} p={0} flexDirection='row'>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{`Name: ${patientReports?.title || ''} ${\n              patientReports?.firstName || ''\n            } ${patientReports?.middleName || ''} ${\n              patientReports?.lastName || ''\n            }`}</PdfSmall>\n            <PdfSmall>{'Ref. By: '}</PdfSmall>\n            <PdfSmall>{'Ref Lab: '}</PdfSmall>\n          </PdfGrid>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{'Sr No: '}</PdfSmall>\n            <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n              patientReports?.ageUnits || ''\n            }`}</PdfSmall>\n            <PdfSmall>{`Gender: ${patientReports?.sex || ''}`}</PdfSmall>\n          </PdfGrid>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{'Patient Id: '}</PdfSmall>\n            <PdfSmall fontSize={9}>{`Samp. Collected: ${dayjs(\n              patientReports?.collectionDate,\n            ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n            <PdfSmall fontSize={9}>{`Reported: ${dayjs(\n              patientReports?.reportedDate,\n            ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n          </PdfGrid>\n        </PdfView>\n      </PdfBorderView>\n    );\n  },\n);\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _, {result} from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfRegular,\n  PdfImage,\n} from '@/library/components';\nimport {images} from '@/library/assets';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfResultListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfResultList = ({\n  headerFixed = false,\n  data = [],\n  style,\n  headerStyle,\n}: PdfResultListProps) => {\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Value',\n      width: '20',\n    },\n    {\n      title: 'Unit',\n      width: '20',\n    },\n    {\n      title: 'Normal Value',\n      width: '20',\n    },\n  ];\n\n  const [patientResultList, setPatientResultList] = useState<Array<any>>();\n  useEffect(() => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        const panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          const testHeader: Array<any> = [];\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            testItems.filter(testItem => {\n              testHeader.push({\n                testHeader: {\n                  testDescription: testKey,\n                  testMethodDescription:\n                    testItem?.testHeader?.testMethodDescription,\n                  testBottomMarker: testItem?.testHeader?.testBottomMarker,\n                  testRightMarker: testItem?.testHeader?.testRightMarker,\n                  tpmPrintTestName: testItem?.testHeader?.tpmPrintTestName,\n                  tpmTestMethod: testItem?.testHeader?.tpmTestMethod,\n                },\n                patientResultList: {\n                  testName: testItem?.testName,\n                  result: testItem?.result,\n                  units: testItem?.units,\n                  bioRefInterval: testItem?.bioRefInterval,\n                },\n                testFooter: {\n                  testInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.testInterpretation,\n                  tpmTestInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.tpmTestInterpretation,\n                },\n              });\n            });\n          }\n          panelHeader.push({\n            panelHeader: {\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              tpmPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPrintPanelName,\n              tpmPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPanelMethod,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            testHeader,\n          });\n        }\n        patientResultList.push({\n          departmentHeader: {\n            departmentName: deptKey,\n          },\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      setPatientResultList(patientResultList);\n    }\n  }, [data]);\n  return (\n    <>\n      <View style={[styles.table, {...style}]}>\n        <View style={[styles.tableRow, {...headerStyle}]} fixed={headerFixed}>\n          {fields.map((item, index) => (\n            <View key={index} style={[{width: item.width + '%'}]}>\n              <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n            </View>\n          ))}\n        </View>\n        {patientResultList?.map((deptItem, index) => (\n          <>\n            {deptItem.panelHeader.map((panelItem, index) => (\n              <>\n                {panelItem?.testHeader?.map((testItem, testIndex) => (\n                  <>\n                    <PdfView key={index} mh={0} p={0}>\n                      <View key={index} style={styles.tableRow}>\n                        {Object.entries(testItem?.patientResultList).map(\n                          (_item: any, _idx) => (\n                            <PdfBorderView\n                              key={_idx}\n                              style={{\n                                width: fields[_idx]?.width + '%',\n                              }}\n                              mh={0}\n                              mv={0}\n                              p={0}\n                              bw={0}\n                              borderColor='transparent'\n                            >\n                              {typeof _item[1] == 'object' ? (\n                                <>\n                                  <PdfSmall style={{textAlign: 'center'}}>\n                                    {_item[1]?.analyteDescription}\n                                  </PdfSmall>\n\n                                  {_item[1]?.tpmAnalyteMethod ? (\n                                    <PdfSmall\n                                      style={{\n                                        textAlign: 'center',\n                                        fontSize: 6,\n                                      }}\n                                    >\n                                      {_item[1]?.analyteMethodDescription}\n                                    </PdfSmall>\n                                  ) : null}\n                                  {_item[1]?.tpmAnalyteInterpretation ? (\n                                    <PdfSmall\n                                      style={{\n                                        textAlign: 'center',\n                                        fontSize: 6,\n                                      }}\n                                    >\n                                      {_item[1]?.analyteMasterInterpretation}\n                                    </PdfSmall>\n                                  ) : null}\n                                </>\n                              ) : (\n                                <PdfSmall style={{textAlign: 'center'}}>\n                                  {_item[1] || ''}\n                                </PdfSmall>\n                              )}\n                            </PdfBorderView>\n                          ),\n                        )}\n                      </View>\n                    </PdfView>\n                  </>\n                ))}\n              </>\n            ))}\n          </>\n        ))}\n      </View>\n      <PdfView style={{marginTop: 10}}>\n        <PdfSmall style={{textAlign: 'center'}}>\n          ---------------------- End of report ----------------------\n        </PdfSmall>\n        <PdfView alignItems='flex-end'>\n          <PdfImage\n            src={images.signAparajita}\n            style={{\n              width: 50,\n              height: 40,\n            }}\n          />\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'Dr.Aparajita Sharma'}\n          </PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>{'MBBS, MD'}</PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'CONSULTANT PATHOLOGIST'}\n          </PdfSmall>\n        </PdfView>\n      </PdfView>\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {Page, Document, StyleSheet, Font, PDFViewer} from '@react-pdf/renderer';\nimport {PdfPageNumber, PdfView} from '@components';\nimport {Header} from '../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Fotter} from '../../common/aarvak-diagnostic-center/pdf-fotter.component';\nimport {PdfPatientDetails} from './pdf-patient-details.component';\nimport {PdfResultList} from './pdf-result-list.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTemp0005Props {\n  data?: any;\n  width?: string | number;\n  height?: number | string;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const PdfTemp0005 = ({\n  data,\n  width = '100%',\n  height = '90%',\n  documentTitle = 'Aarvak Diagnostic Center Without Header Footer',\n  isToolbar = true,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTemp0005Props) => {\n  const {patientReports} = data;\n\n  return (\n    <>\n      <PDFViewer style={{width, height}} showToolbar={isToolbar}>\n        <Document title={documentTitle}>\n          <Page size={pageSize} style={{marginVertical: 100}}>\n            <PdfPatientDetails data={patientReports} />\n            <PdfResultList data={patientReports?.patientResultList} />\n            <PdfPageNumber\n              style={{\n                position: 'absolute',\n                textAlign: 'center',\n                right: '45%',\n              }}\n              bottom={0}\n            />\n          </Page>\n        </Document>\n      </PDFViewer>\n    </>\n  );\n};\n","export {};\nimport React, {useRef} from 'react';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfSmall,\n  PdfTable,\n  PdfMedium,\n} from '@components';\n\ninterface FotterProps {\n  data?: any;\n}\n\nexport const Fotter = ({data}: FotterProps) => {\n  return (\n    <PdfFooterView fixed bg='white' p={5}>\n      <PdfSmall>\n        <PdfRegular style={{color: '#A52728'}}>Red. Address:</PdfRegular> 1310,\n        Behind SBI Bank, Badshahpur, Sohna Road, Sector 66, Gurugram, Haryana -\n        122101,\n      </PdfSmall>\n      <PdfSmall>\n        <PdfRegular style={{color: '#A52728'}}>Lab Address:</PdfRegular>Opp.\n        Radha Krishna Mandir, Main Sohna Road, Badhshahpur, Sector 66, Gurugram,\n        Haryana - 122101\n      </PdfSmall>\n      <PdfSmall>\n        <PdfRegular style={{color: '#A52728'}}>Phone:</PdfRegular> +91\n        9810063340, 9354212163{' '}\n        <PdfRegular style={{color: '#A52728'}}>Email:</PdfRegular>{' '}\n        info@aarvakdiagnosticcentre.com\n      </PdfSmall>\n      <PdfRegular style={{color: '#A52728'}}>\n        www.aarvakdiagnosticcentre.com\n      </PdfRegular>\n    </PdfFooterView>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfSmall,\n  PdfTable,\n  PdfImage,\n  PdfMedium,\n} from '@components';\nimport {logos} from '@/library/assets';\n\ninterface HeaderProps {\n  data?: any;\n}\n\nexport const Header = ({data}: HeaderProps) => {\n  return (\n    <PdfHeader\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n      }}\n      bg='white'\n      fixed\n    >\n      <PdfImage\n        src={logos.aarvakDiagnosticCenter}\n        style={{\n          width: 100,\n          height: 100,\n          marginHorizontal: 10,\n        }}\n      />\n      <PdfView mh={0} p={0}>\n        <PdfMedium fontSize={14} style={{color: 'green'}}>\n          Committed to provide\n        </PdfMedium>\n        <PdfMedium style={{marginTop: -4}}>\n          <PdfMedium style={{color: '#A52728'}}>Best Diagnostic </PdfMedium>\n          Services<PdfMedium style={{color: 'green'}}>+</PdfMedium>\n        </PdfMedium>\n      </PdfView>\n    </PdfHeader>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfSmall,\n  PdfTable,\n} from '@components';\n\ninterface PdfTemp0001FooterProps {\n  data: any;\n}\n\nexport const PdfTemp0001Footer = ({data}: PdfTemp0001FooterProps) => {\n  const mainBoxCSS = useRef<any>({});\n  const titleCSS = useRef<any>({});\n  const subTitleCSS = useRef<any>({});\n  if (data.footer?.mainBoxCSS) {\n    try {\n      mainBoxCSS.current = eval('({' + data.footer?.mainBoxCSS + '})');\n    } catch (e) {\n      mainBoxCSS.current = {};\n    }\n  }\n  if (data.footer?.titleCSS) {\n    try {\n      titleCSS.current = eval('({' + data.footer?.titleCSS + '})');\n    } catch (e) {\n      titleCSS.current = {};\n    }\n  }\n  if (data.footer?.subTitleCSS) {\n    try {\n      subTitleCSS.current = eval('({' + data.footer?.subTitleCSS + '})');\n    } catch (e) {\n      subTitleCSS.current = {};\n    }\n  }\n\n  return (\n    <PdfFooterView fixed style={{...mainBoxCSS.current}}>\n      <PdfSmall style={{textAlign: 'center', ...titleCSS.current}}>\n        {data.footer?.title || 'Title'}\n      </PdfSmall>\n      <PdfSmall style={{...subTitleCSS.current}}>{`${\n        data.footer?.subTitle || 'Tel: 1234'\n      }`}</PdfSmall>\n    </PdfFooterView>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfSmall,\n  PdfTable,\n  PdfImage,\n} from '@components';\nimport {decompressString} from '@/library/utils';\n\ninterface PdfTemp0001HeaderProps {\n  data: any;\n}\n\nexport const PdfTemp0001Header = ({data}: PdfTemp0001HeaderProps) => {\n  const headerTitleCSS = useRef<any>({});\n  const headerMainBoxCSS = useRef<any>({});\n  const imageCSS = useRef<any>({});\n  if (data.header?.titleCSS) {\n    try {\n      headerTitleCSS.current = eval('({' + data.header?.titleCSS + '})');\n    } catch (e) {\n      headerTitleCSS.current = {};\n    }\n  }\n  if (data.header?.mainBoxCSS) {\n    try {\n      headerMainBoxCSS.current = eval('({' + data.header?.mainBoxCSS + '})');\n    } catch (e) {\n      headerMainBoxCSS.current = {};\n    }\n  }\n  if (data.header?.logoCSS) {\n    try {\n      imageCSS.current = eval('({' + data.header?.logoCSS + '})');\n    } catch (e) {\n      imageCSS.current = {};\n    }\n  }\n\n  return (\n    <PdfHeader\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        ...headerMainBoxCSS.current,\n      }}\n      fixed\n    >\n      <PdfImage\n        src={decompressString(data.header?.logoUrl || '')}\n        style={{\n          width: 50,\n          height: 50,\n          borderRadius: 25,\n          marginHorizontal: 10,\n          ...imageCSS.current,\n        }}\n      />\n      <PdfHeading style={headerTitleCSS.current}>\n        {data.header?.title || 'Title'}\n      </PdfHeading>\n    </PdfHeader>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfSmall,\n  PdfTable,\n} from '@components';\n\ninterface PdfTemp0001SubHeaderProps {\n  data: any;\n}\n\nexport const PdfTemp0001SubHeader = ({data}: PdfTemp0001SubHeaderProps) => {\n  const mainBoxCSS = useRef<any>({});\n  const titleCSS = useRef<any>({});\n  const subTitleCSS = useRef<any>({});\n  if (data.subHeader?.mainBoxCSS) {\n    try {\n      mainBoxCSS.current = eval('({' + data.subHeader?.mainBoxCSS + '})');\n    } catch (e) {\n      mainBoxCSS.current = {};\n    }\n  }\n  if (data.subHeader?.titleCSS) {\n    try {\n      titleCSS.current = eval('({' + data.subHeader?.titleCSS + '})');\n    } catch (e) {\n      titleCSS.current = {};\n    }\n  }\n  if (data.subHeader?.subTitleCSS) {\n    try {\n      subTitleCSS.current = eval('({' + data.subHeader?.subTitleCSS + '})');\n    } catch (e) {\n      subTitleCSS.current = {};\n    }\n  }\n\n  return (\n    <PdfSubHeader style={{...mainBoxCSS.current}} fixed>\n      <PdfRegular style={{...titleCSS.current}}>\n        {data.subHeader?.title || 'Title'}\n      </PdfRegular>\n      <PdfRegular style={{...subTitleCSS.current}}>{`${\n        data.subHeader?.subTitle || 'web-url'\n      }`}</PdfRegular>\n    </PdfSubHeader>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  Page,\n  Text,\n  View,\n  Image,\n  Document,\n  StyleSheet,\n  Font,\n  PDFViewer,\n} from '@react-pdf/renderer';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfSmall,\n  PdfTable,\n} from '@components';\nimport {observer} from 'mobx-react';\nimport {PdfTSTemp0001} from '../../template-setting/temp0001/temp0001.component';\nimport {PageBranding} from '@features/report-builder/report-settings/models/page-branding.model';\n\nimport {PdfTemp0001Header} from './temp0001-header.component';\nimport {PdfTemp0001SubHeader} from './temp0001-sub-header.component';\nimport {PdfTemp0001Footer} from './temp0001-footer.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\ninterface PdfPBTemp0001Props {\n  data: PageBranding;\n  children?: React.ReactNode;\n}\n\nexport const PdfPBTemp0001 = observer(\n  ({data, children}: PdfPBTemp0001Props) => {\n    const pageNumberCSS = useRef<any>({});\n    if (data?.pageNumber?.pageNumberCSS) {\n      try {\n        pageNumberCSS.current = eval(\n          '({' + data?.pageNumber?.pageNumberCSS + '})',\n        );\n      } catch (e) {\n        pageNumberCSS.current = {};\n      }\n    }\n    return (\n      <PdfTSTemp0001\n        height={window.innerHeight / 1.3}\n        documentTitle='Page Branding'\n        isToolbar={data.templateSettings?.isToolbar}\n        isBackgroundImage={data.templateSettings?.isBackgroundImage}\n        backgroundImage={data.templateSettings?.backgroundImageBase64}\n        mainBoxCSS={data.templateSettings?.mainBoxCSS}\n        pageSize={data.templateSettings?.pageSize}\n        children={\n          <>\n            {/* Header */}\n            {data?.isHeader && <PdfTemp0001Header data={data} />}\n\n            {/* Sub Header */}\n            {data?.isSubHeader && <PdfTemp0001SubHeader data={data} />}\n\n            {/* children */}\n            {children}\n\n            {/* Page Number */}\n            {data?.isPdfPageNumber && (\n              <PdfPageNumber style={{...pageNumberCSS.current}} />\n            )}\n\n            {/* Footer */}\n            {data?.isFooter && <PdfTemp0001Footer data={data} />}\n          </>\n        }\n      />\n    );\n  },\n);\n","import React, {useRef} from 'react';\nimport {\n  Page,\n  Document,\n  StyleSheet,\n  Font,\n  Text,\n  PDFViewer,\n} from '@react-pdf/renderer';\nimport {PdfSmall} from '@components';\nimport {Header} from '../../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Fotter} from '../../../common/aarvak-diagnostic-center/pdf-fotter.component';\nimport {PdfMedicialFitnessCertificate} from './pdf-medicial-fitness-certificate';\nimport {PdfMedicalCheckup} from './pdf-medical-checkup';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface ADCMedicalReportPdfProps {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const ADCMedicalReportPdf = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Template Settings',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: ADCMedicalReportPdfProps) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {/* <PDFViewer style={{width, height}} showToolbar={isToolbar}> */}\n      <Document title={documentTitle}>\n        <Page size={pageSize} style={boxCSS.current}>\n          <Header />\n          <PdfMedicialFitnessCertificate />\n          <PdfMedicalCheckup />\n          <PdfSmall style={{left: 20, marginTop: 10}} fixed>\n            Registration No.: 0887687987678\n          </PdfSmall>\n          <Fotter />\n        </Page>\n      </Document>\n      {/* </PDFViewer> */}\n    </>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _, {result} from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfRegular,\n  PdfImage,\n} from '@/library/components';\nimport {images} from '@/library/assets';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfMedicalCheckupProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfMedicalCheckup = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfMedicalCheckupProps) => {\n  return (\n    <>\n      {/* S.No */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row'}}\n        isBreak={true}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>S.No :- 101</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Medical Checkup</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Date</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>22/04/2022</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Company/Address */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Company/Address</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`M/S Haldiram Ethnic Foods Private Limited \n          (SPICE MALL)`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n      {/* Name */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Name</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>BIKASH HALDAR</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Age/Sex</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>18 YRS</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* EMP. CODE */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>EMP. CODE</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>87698798</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Gender</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>MALE</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Job Description */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Job Description</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '30%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '30%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Department</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Present Complaints */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Present Complaints</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NO ANY Complaints</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Past History */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Past History</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NO</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Smoking */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Smoking</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>YES</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '40%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Alcohol</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n          }}\n        >\n          <PdfSmall textAlign='center'>Yes</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Other Relevant Information */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Other Relevant \n          Information`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NO</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Physical Examination */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '100%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{'Physical Examination'}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Height */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Height</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>167 CMS</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Weight</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>68 KGS</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Pulse</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>68/MIN</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>BP</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>122/70 mmHg</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Skin */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Skin</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Respiratory System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Respiratory\n          System`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Cardiovascular */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Cardiovascular'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Nervous System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Nervous System'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* G.I.System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'G.I.System'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Vision */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Vision'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Hearing */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Hearing'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>NORMAL</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Blood Test */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Blood Test'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>REPORT ATTACH</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Final Observation */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Final Observation'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Final Observation */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Signature of\n          Medical Examiner`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n    </>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfMedicialFitnessCertificateProps {\n  data?: any;\n}\n\nexport const PdfMedicialFitnessCertificate = observer(\n  ({data}: PdfMedicialFitnessCertificateProps) => {\n    return (\n      <PdfView>\n        <PdfSmall style={{alignSelf: 'flex-end', marginTop: -30}}>\n          {'S.NO - 101'}\n        </PdfSmall>\n        <PdfMedium textAlign='center'>\n          PERFORMA FOR MEDICIAL FITNESS CERTIFICATE FOR FOOD HANDLERS\n        </PdfMedium>\n        <PdfMedium textAlign='center'>(FOR THE YEAR...2022)</PdfMedium>\n        <PdfRegular textAlign='center'>\n          (see Para No. 10.1.2, Part-II, Schedule-4 of FSS Regulation, 2011)\n        </PdfRegular>\n        <PdfRegular style={{marginTop: 20}}>\n          {\n            'It is certified that Mr/Mrs./Miss BIKASH HALDAR Age 18 yrs MALE Emp.Code 0 5003849 is having employed with M/s Haldiram Ethnic Foods Private Limited, SPICE MALL coming in direct contact with food items has been carefully examined* by me on date 22/02/2022.'\n          }\n        </PdfRegular>\n        <PdfRegular style={{marginTop: 20}}>\n          {\n            'Based on the medical examination conducted, he/she is found free from any infectious or communicable diseases and then person is fit to work in the above mentioned food establishment.'\n          }\n        </PdfRegular>\n\n        <PdfRegular style={{marginTop: 30}}>\n          {'Typhoid Vaccine Batch No.- 876876978A, Given on 22/04/2022.'}\n        </PdfRegular>\n        <PdfRegular>\n          {'Hepatitis B Vaccine Batch No.- 8769879A, Given on 22/04/2022'}\n        </PdfRegular>\n        <PdfView alignItems='flex-end' mt={30}>\n          <PdfMedium fontSize={14} fontFamily='Times-Bold'>\n            Name and Signature with Seal\n          </PdfMedium>\n          <PdfRegular>{`of registered Medical Practitioner/\n          Civil Surgeon`}</PdfRegular>\n        </PdfView>\n        <PdfView style={{marginTop: 40}}>\n          <PdfRegular style={{textDecoration: 'underline'}}>\n            Medical examination to be conducted:\n          </PdfRegular>\n          <PdfView mh={15}>\n            <PdfRegular>1. Physical Examination</PdfRegular>\n            <PdfRegular>2. Eye Test</PdfRegular>\n            <PdfRegular>3. Skin examination</PdfRegular>\n            <PdfRegular>\n              4. Compliance with schedule of Vaccine to be inoculated against\n              enteric group of diseases\n            </PdfRegular>\n            <PdfRegular>\n              5. Any test required to confirm any communicable of infectious\n              disease which the person\n            </PdfRegular>\n            <PdfRegular style={{marginLeft: 12}}>\n              suspected to be suffering from on clinical examination.\n            </PdfRegular>\n          </PdfView>\n        </PdfView>\n      </PdfView>\n    );\n  },\n);\n","import React, {useState, useRef} from 'react';\nimport {\n  Page,\n  Text,\n  Document,\n  StyleSheet,\n  Font,\n  PDFViewer,\n  Image,\n  View,\n} from '@react-pdf/renderer';\nimport {PdfPageNumber} from '@components';\nimport {PdfPatientDetails} from './pdf-patient-details.component';\nimport {PdfResultList} from './pdf-result-list.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface ADCWithoutHeaderFooterPdfProps {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const ADCWithoutHeaderFooterPdf = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Template Settings',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: ADCWithoutHeaderFooterPdfProps) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {/* <PDFViewer style={{width, height}} showToolbar={isToolbar}> */}\n      <Document title={documentTitle}>\n        <Page size={pageSize} style={boxCSS.current}>\n          <PdfPatientDetails />\n          <PdfResultList />\n          <PdfPageNumber\n            style={{textAlign: 'center', right: '45%'}}\n            bottom={10}\n          />\n        </Page>\n      </Document>\n      {/* </PDFViewer> */}\n    </>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfPatientDetailsProps {\n  data?: any;\n}\n\nexport const PdfPatientDetails = observer(({data}: PdfPatientDetailsProps) => {\n  return (\n    <PdfBorderView mv={10} fixed>\n      <PdfView mh={10} p={0} flexDirection='row'>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall fontSize={11}>{'Name: MR. NITESH AHLAWAT'}</PdfSmall>\n          <PdfSmall>{'Ref. By: Dr.MEENAKSHI SHUKLA'}</PdfSmall>\n          <PdfSmall>{'Ref Lab: '}</PdfSmall>\n        </PdfGrid>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall>{'Srl No: 5'}</PdfSmall>\n          <PdfSmall>{'Age: 27 Yrs'}</PdfSmall>\n          <PdfSmall>{'Sex: Female'}</PdfSmall>\n        </PdfGrid>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall>{'Patient Id: 869876987'}</PdfSmall>\n          <PdfSmall>{`Samp. Collected: ${dayjs().format(\n            'DD/MM/YYYY',\n          )}`}</PdfSmall>\n          <PdfSmall>{`Reporting Date: ${dayjs().format(\n            'DD/MM/YYYY hh:mm:ss A',\n          )}`}</PdfSmall>\n        </PdfGrid>\n      </PdfView>\n    </PdfBorderView>\n  );\n});\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _, {result} from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfRegular,\n  PdfImage,\n} from '@/library/components';\nimport {images} from '@/library/assets';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfResultListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfResultList = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfResultListProps) => {\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Value',\n      width: '20',\n    },\n    {\n      title: 'Unit',\n      width: '20',\n    },\n    {\n      title: 'Normal Value',\n      width: '20',\n    },\n  ];\n\n  const resultList: any = [\n    {\n      title: 'HAEMOGLOBIN (Hb)',\n      value: '12.0',\n      unit: 'gm/dl',\n      normalValue: '12 - 15',\n    },\n    {\n      title: 'TOTAL LEUCOCYTE COUNT (TLC)',\n      value: '4,900',\n      unit: '/cumm',\n      normalValue: '4000 - 11000',\n    },\n  ];\n\n  for (let index = 0; index < 30; index++) {\n    resultList.push(resultList[index % 2]);\n  }\n\n  return (\n    <>\n      <View style={[styles.table, {...style}]}>\n        <View style={[styles.tableRow, {...headerStyle}]} fixed={headerFixed}>\n          {fields.map((item, index) => (\n            <View key={index} style={[{width: item.width + '%'}]}>\n              <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n            </View>\n          ))}\n        </View>\n        {resultList?.map((item, index) => (\n          <>\n            <PdfView key={index} mh={0} p={0}>\n              {/* Department Header */}\n              {/* <PdfBorderView\n              style={{\n                width: '100%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={0}\n              borderColor='transparent'\n            >\n              <PdfSmall style={{marginLeft: 10}}>{item.title}</PdfSmall>\n            </PdfBorderView> */}\n              <View key={index} style={styles.tableRow}>\n                {Object.entries(item).map((_item: any, _idx) => (\n                  <PdfBorderView\n                    key={_idx}\n                    style={{\n                      width: fields[_idx]?.width + '%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall style={{textAlign: 'center'}}>\n                      {_item[1] || ''}\n                    </PdfSmall>\n                  </PdfBorderView>\n                ))}\n              </View>\n            </PdfView>\n          </>\n        ))}\n      </View>\n      <PdfView style={{marginTop: 10}}>\n        <PdfSmall style={{textAlign: 'center'}}>\n          ---------------------- End of report ----------------------\n        </PdfSmall>\n        <PdfView alignItems='flex-end'>\n          <PdfImage\n            src={images.signAparajita}\n            style={{\n              width: 50,\n              height: 40,\n            }}\n          />\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'Dr.Aparajita Sharma'}\n          </PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>{'MBBS, MD'}</PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'CONSULTANT PATHOLOGIST'}\n          </PdfSmall>\n        </PdfView>\n      </PdfView>\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {Page, Document, StyleSheet, Font} from '@react-pdf/renderer';\nimport {PdfPageNumber} from '@components';\nimport {Header} from '../../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Fotter} from '../../../common/aarvak-diagnostic-center/pdf-fotter.component';\nimport {PdfPatientDetails} from './pdf-patient-details.component';\nimport {PdfResultList} from './pdf-result-list.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface ADCPdfProps {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const ADCPdf = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Template Settings',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: ADCPdfProps) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {/* <PDFViewer style={{width, height}} showToolbar={isToolbar}> */}\n      <Document title={documentTitle}>\n        <Page size={pageSize} style={boxCSS.current}>\n          <Header />\n          <PdfPatientDetails />\n          <PdfResultList />\n          <PdfPageNumber\n            style={{textAlign: 'center', right: '45%'}}\n            bottom={77}\n          />\n          <Fotter />\n        </Page>\n      </Document>\n      {/* </PDFViewer> */}\n    </>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfPatientDetailsProps {\n  data?: any;\n}\n\nexport const PdfPatientDetails = observer(({data}: PdfPatientDetailsProps) => {\n  return (\n    <PdfBorderView mv={10} fixed>\n      <PdfView mh={10} p={0} flexDirection='row'>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall fontSize={11}>{'Name: MR. NITESH AHLAWAT'}</PdfSmall>\n          <PdfSmall>{'Ref. By: Dr.MEENAKSHI SHUKLA'}</PdfSmall>\n          <PdfSmall>{'Ref Lab: '}</PdfSmall>\n        </PdfGrid>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall>{'Sr No: 5'}</PdfSmall>\n          <PdfSmall>{'Age: 27 Yrs'}</PdfSmall>\n          <PdfSmall>{'Sex: Female'}</PdfSmall>\n        </PdfGrid>\n        <PdfGrid cols={3} bg='transparent'>\n          <PdfSmall>{'Patient Id: 869876987'}</PdfSmall>\n          <PdfSmall>{`Samp. Collected: ${dayjs().format(\n            'DD/MM/YYYY',\n          )}`}</PdfSmall>\n          <PdfSmall>{`Reporting Date: ${dayjs().format(\n            'DD/MM/YYYY hh:mm:ss A',\n          )}`}</PdfSmall>\n        </PdfGrid>\n      </PdfView>\n    </PdfBorderView>\n  );\n});\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _, {result} from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfRegular,\n  PdfImage,\n} from '@/library/components';\nimport {images} from '@/library/assets';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfResultListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfResultList = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfResultListProps) => {\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Value',\n      width: '20',\n    },\n    {\n      title: 'Unit',\n      width: '20',\n    },\n    {\n      title: 'Normal Value',\n      width: '20',\n    },\n  ];\n\n  const resultList: any = [\n    {\n      title: 'HAEMOGLOBIN (Hb)',\n      value: '12.0',\n      unit: 'gm/dl',\n      normalValue: '12 - 15',\n    },\n    {\n      title: 'TOTAL LEUCOCYTE COUNT (TLC)',\n      value: '4,900',\n      unit: '/cumm',\n      normalValue: '4000 - 11000',\n    },\n  ];\n\n  for (let index = 0; index < 30; index++) {\n    resultList.push(resultList[index % 2]);\n  }\n\n  return (\n    <>\n      <View style={[styles.table, {...style}]}>\n        <View style={[styles.tableRow, {...headerStyle}]} fixed={headerFixed}>\n          {fields.map((item, index) => (\n            <View key={index} style={[{width: item.width + '%'}]}>\n              <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n            </View>\n          ))}\n        </View>\n        {resultList?.map((item, index) => (\n          <>\n            <PdfView key={index} mh={0} p={0}>\n              {/* Department Header */}\n              {/* <PdfBorderView\n              style={{\n                width: '100%',\n              }}\n              mh={0}\n              mv={0}\n              p={0}\n              bw={0}\n              borderColor='transparent'\n            >\n              <PdfSmall style={{marginLeft: 10}}>{item.title}</PdfSmall>\n            </PdfBorderView> */}\n              <View key={index} style={styles.tableRow}>\n                {Object.entries(item).map((_item: any, _idx) => (\n                  <PdfBorderView\n                    key={_idx}\n                    style={{\n                      width: fields[_idx]?.width + '%',\n                    }}\n                    mh={0}\n                    mv={0}\n                    p={0}\n                    bw={0}\n                    borderColor='transparent'\n                  >\n                    <PdfSmall style={{textAlign: 'center'}}>\n                      {_item[1] || ''}\n                    </PdfSmall>\n                  </PdfBorderView>\n                ))}\n              </View>\n            </PdfView>\n          </>\n        ))}\n      </View>\n      <PdfView style={{marginTop: 10}}>\n        <PdfSmall style={{textAlign: 'center'}}>\n          ---------------------- End of report ----------------------\n        </PdfSmall>\n        <PdfView alignItems='flex-end'>\n          <PdfImage\n            src={images.signAparajita}\n            style={{\n              width: 50,\n              height: 40,\n            }}\n          />\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'Dr.Aparajita Sharma'}\n          </PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>{'MBBS, MD'}</PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'CONSULTANT PATHOLOGIST'}\n          </PdfSmall>\n        </PdfView>\n      </PdfView>\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {Page, Document, StyleSheet, Font, PDFViewer} from '@react-pdf/renderer';\nimport {PdfPageNumber} from '@components';\nimport {Header} from '../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Fotter} from '../../common/aarvak-diagnostic-center/pdf-fotter.component';\nimport {PdfPatientDetails} from './pdf-patient-details.component';\nimport {PdfResultList} from './pdf-result-list.component';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTemp0004Props {\n  data?: any;\n  width?: string | number;\n  height?: number | string;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const PdfTemp0004 = ({\n  data,\n  width = '100%',\n  height = '90%',\n  documentTitle = 'Aarvak Diagnostic Center Without',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTemp0004Props) => {\n  const {patientReports} = data;\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      <PDFViewer style={{width, height}} showToolbar={isToolbar}>\n        <Document title={documentTitle}>\n          <Page size={pageSize} style={boxCSS.current}>\n            <Header />\n            <PdfPatientDetails data={patientReports} />\n            <PdfResultList data={patientReports?.patientResultList} />\n            <PdfPageNumber\n              style={{textAlign: 'center', right: '45%'}}\n              bottom={77}\n            />\n            <Fotter />\n          </Page>\n        </Document>\n      </PDFViewer>\n    </>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfPatientDetailsProps {\n  data?: any;\n}\n\nexport const PdfPatientDetails = observer(\n  ({data: patientReports}: PdfPatientDetailsProps) => {\n    return (\n      <PdfBorderView mv={10} fixed>\n        <PdfView mh={10} p={0} flexDirection='row'>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{`Name: ${patientReports?.title || ''} ${\n              patientReports?.firstName || ''\n            } ${patientReports?.middleName || ''} ${\n              patientReports?.lastName || ''\n            }`}</PdfSmall>\n            <PdfSmall>{'Ref. By: '}</PdfSmall>\n            <PdfSmall>{'Ref Lab: '}</PdfSmall>\n          </PdfGrid>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{'Sr No: '}</PdfSmall>\n            <PdfSmall>{`Age: ${patientReports?.age || ''} ${\n              patientReports?.ageUnits || ''\n            }`}</PdfSmall>\n            <PdfSmall>{`Gender: ${patientReports?.sex || ''}`}</PdfSmall>\n          </PdfGrid>\n          <PdfGrid cols={3} bg='transparent'>\n            <PdfSmall>{'Patient Id: '}</PdfSmall>\n            <PdfSmall fontSize={9}>{`Samp. Collected: ${dayjs(\n              patientReports?.collectionDate,\n            ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n            <PdfSmall fontSize={9}>{`Reported: ${dayjs(\n              patientReports?.reportedDate,\n            ).format('DD/MM/YYYY hh:mm:ss A')}`}</PdfSmall>\n          </PdfGrid>\n        </PdfView>\n      </PdfBorderView>\n    );\n  },\n);\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _, {result} from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfRegular,\n  PdfImage,\n} from '@/library/components';\nimport {images} from '@/library/assets';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfResultListProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: Array<any>;\n}\n\nexport const PdfResultList = ({\n  headerFixed = false,\n  data = [],\n  style,\n  headerStyle,\n}: PdfResultListProps) => {\n  const fields = [\n    {\n      title: 'Test Name',\n      width: '40',\n    },\n    {\n      title: 'Value',\n      width: '20',\n    },\n    {\n      title: 'Unit',\n      width: '20',\n    },\n    {\n      title: 'Normal Value',\n      width: '20',\n    },\n  ];\n\n  const [patientResultList, setPatientResultList] = useState<Array<any>>();\n  useEffect(() => {\n    if (data?.length > 0) {\n      const patientResultList: Array<any> = [];\n      const departmentList = _.groupBy(\n        data,\n        (o: any) => o?.departmentHeader?.departmentName,\n      );\n      for (const [deptKey, deptItems] of Object.entries(departmentList)) {\n        const panelList = _.groupBy(\n          deptItems,\n          (o: any) => o?.panelHeader?.panelDescription,\n        );\n        const panelHeader: Array<any> = [];\n        for (const [panelKey, panelItems] of Object.entries(panelList)) {\n          const testList = _.groupBy(\n            panelItems,\n            (o: any) => o?.testHeader?.testDescription,\n          );\n          const testHeader: Array<any> = [];\n          for (const [testKey, testItems] of Object.entries(testList)) {\n            testItems.filter(testItem => {\n              testHeader.push({\n                testHeader: {\n                  testDescription: testKey,\n                  testMethodDescription:\n                    testItem?.testHeader?.testMethodDescription,\n                  testBottomMarker: testItem?.testHeader?.testBottomMarker,\n                  testRightMarker: testItem?.testHeader?.testRightMarker,\n                  tpmPrintTestName: testItem?.testHeader?.tpmPrintTestName,\n                  tpmTestMethod: testItem?.testHeader?.tpmTestMethod,\n                },\n                patientResultList: {\n                  testName: testItem?.testName,\n                  result: testItem?.result,\n                  units: testItem?.units,\n                  bioRefInterval: testItem?.bioRefInterval,\n                },\n                testFooter: {\n                  testInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.testInterpretation,\n                  tpmTestInterpretation: testItems?.find(\n                    testItem =>\n                      testItem?.testHeader?.testDescription == testKey,\n                  )?.testFooter?.tpmTestInterpretation,\n                },\n              });\n            });\n          }\n          panelHeader.push({\n            panelHeader: {\n              panelDescription: panelKey,\n              panelMethodDescription: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.panelMethodDescription,\n              tpmPrintPanelName: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPrintPanelName,\n              tpmPanelMethod: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelHeader?.tpmPanelMethod,\n            },\n            panelFooter: {\n              panelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.panelInterpretation,\n              tpmPanelInterpretation: panelItems?.find(\n                pItem => pItem?.panelHeader?.panelDescription == panelKey,\n              )?.panelFooter?.tpmPanelInterpretation,\n            },\n            testHeader,\n          });\n        }\n        patientResultList.push({\n          departmentHeader: {\n            departmentName: deptKey,\n          },\n          panelHeader,\n          departmentFooter: {\n            userInfo: deptItems?.find(\n              item => item?.departmentHeader?.departmentName == deptKey,\n            )?.departmentFooter?.userInfo,\n          },\n        });\n      }\n      setPatientResultList(patientResultList);\n    }\n  }, [data]);\n  return (\n    <>\n      <View style={[styles.table, {...style}]}>\n        <View style={[styles.tableRow, {...headerStyle}]} fixed={headerFixed}>\n          {fields.map((item, index) => (\n            <View key={index} style={[{width: item.width + '%'}]}>\n              <Text style={[styles.tableCellHeader]}>{item?.title}</Text>\n            </View>\n          ))}\n        </View>\n        {patientResultList?.map((deptItem, index) => (\n          <>\n            {deptItem.panelHeader.map((panelItem, index) => (\n              <>\n                {panelItem?.testHeader?.map((testItem, testIndex) => (\n                  <>\n                    <PdfView key={index} mh={0} p={0}>\n                      <View key={index} style={styles.tableRow}>\n                        {Object.entries(testItem?.patientResultList).map(\n                          (_item: any, _idx) => (\n                            <PdfBorderView\n                              key={_idx}\n                              style={{\n                                width: fields[_idx]?.width + '%',\n                              }}\n                              mh={0}\n                              mv={0}\n                              p={0}\n                              bw={0}\n                              borderColor='transparent'\n                            >\n                              {typeof _item[1] == 'object' ? (\n                                <>\n                                  <PdfSmall style={{textAlign: 'center'}}>\n                                    {_item[1]?.analyteDescription}\n                                  </PdfSmall>\n\n                                  {_item[1]?.tpmAnalyteMethod ? (\n                                    <PdfSmall\n                                      style={{\n                                        textAlign: 'center',\n                                        fontSize: 6,\n                                      }}\n                                    >\n                                      {_item[1]?.analyteMethodDescription}\n                                    </PdfSmall>\n                                  ) : null}\n                                  {_item[1]?.tpmAnalyteInterpretation ? (\n                                    <PdfSmall\n                                      style={{\n                                        textAlign: 'center',\n                                        fontSize: 6,\n                                      }}\n                                    >\n                                      {_item[1]?.analyteMasterInterpretation}\n                                    </PdfSmall>\n                                  ) : null}\n                                </>\n                              ) : (\n                                <PdfSmall style={{textAlign: 'center'}}>\n                                  {_item[1] || ''}\n                                </PdfSmall>\n                              )}\n                            </PdfBorderView>\n                          ),\n                        )}\n                      </View>\n                    </PdfView>\n                  </>\n                ))}\n              </>\n            ))}\n          </>\n        ))}\n      </View>\n      <PdfView style={{marginTop: 10}}>\n        <PdfSmall style={{textAlign: 'center'}}>\n          ---------------------- End of report ----------------------\n        </PdfSmall>\n        <PdfView alignItems='flex-end'>\n          <PdfImage\n            src={images.signAparajita}\n            style={{\n              width: 50,\n              height: 40,\n            }}\n          />\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'Dr.Aparajita Sharma'}\n          </PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>{'MBBS, MD'}</PdfSmall>\n          <PdfSmall style={{textAlign: 'center'}}>\n            {'CONSULTANT PATHOLOGIST'}\n          </PdfSmall>\n        </PdfView>\n      </PdfView>\n    </>\n  );\n};\n","import React, {useRef} from 'react';\nimport {\n  Page,\n  Document,\n  StyleSheet,\n  Font,\n  Text,\n  PDFViewer,\n} from '@react-pdf/renderer';\nimport {PdfSmall, PdfView} from '@components';\nimport {Header} from '../../common/aarvak-diagnostic-center/pdf-header.component';\nimport {Fotter} from '../../common/aarvak-diagnostic-center/pdf-fotter.component';\nimport {PdfMedicialFitnessCertificate} from './pdf-medicial-fitness-certificate';\nimport {PdfMedicalCheckup} from './pdf-medical-checkup';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTemp0006Props {\n  data: any;\n  isWithHeaderFooter?: boolean;\n  width?: string | number;\n  height?: number | string;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize?: any;\n  mainBoxCSS?: any;\n  children?: React.ReactNode;\n}\n\nexport const PdfTemp0006 = ({\n  data,\n  isWithHeaderFooter = true,\n  width = '100%',\n  height = '95%',\n  documentTitle = 'Medical Report',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTemp0006Props) => {\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {/* <PDFViewer style={{width, height}} showToolbar={isToolbar}> */}\n      <Document title={documentTitle}>\n        {isWithHeaderFooter ? (\n          <Page size={pageSize} style={boxCSS.current}>\n            <Header />\n            <PdfMedicialFitnessCertificate data={data} />\n            <PdfMedicalCheckup data={data} />\n            <PdfSmall style={{left: 20, marginTop: 10}} fixed>\n              {` Registration No.: ${data.labId}`}\n            </PdfSmall>\n            <Fotter />\n          </Page>\n        ) : (\n          <Page size={pageSize} style={{marginVertical: 125}}>\n            <PdfMedicialFitnessCertificate data={data} />\n            <PdfMedicalCheckup data={data} />\n            <PdfSmall style={{left: 20, marginTop: 10}} fixed>\n              {` Registration No.: ${data.labId}`}\n            </PdfSmall>\n          </Page>\n        )}\n      </Document>\n      {/* </PDFViewer> */}\n    </>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport {Text, View, StyleSheet} from '@react-pdf/renderer';\nimport _, {result} from 'lodash';\nimport {Style} from '@react-pdf/types';\nimport {} from '@storybook/addons';\nimport {\n  PdfSmall,\n  PdfBorderView,\n  PdfView,\n  PdfRegular,\n  PdfImage,\n} from '@/library/components';\nimport {images} from '@/library/assets';\n\nconst styles = StyleSheet.create({\n  table: {\n    marginHorizontal: 10,\n    flexFlow: 1,\n  },\n  tableRow: {\n    flexDirection: 'row',\n    marginTop: 2,\n  },\n  tableCellHeader: {\n    margin: 2,\n    fontSize: 10,\n    fontWeight: 'bold',\n    textAlign: 'center',\n  },\n  tableCell: {\n    margin: 2,\n    fontSize: 12,\n  },\n  textCenter: {\n    textAlign: 'center',\n  },\n});\n\ninterface PdfMedicalCheckupProps {\n  style?: Style;\n  headerStyle?: Style;\n  headerFixed?: boolean;\n  data?: any;\n}\n\nexport const PdfMedicalCheckup = ({\n  headerFixed = false,\n  data,\n  style,\n  headerStyle,\n}: PdfMedicalCheckupProps) => {\n  const {medicalCheckup, physicalExamination} = data;\n  return (\n    <>\n      {/* S.No */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row'}}\n        isBreak={true}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`S.No :- ${medicalCheckup?.srNo}`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Medical Checkup</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Date</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.date}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Company/Address */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Company/Address</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`M/S Haldiram Ethnic Foods Private Limited \n          (SPICE MALL)`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n      {/* Name */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Name</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.name}`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Age</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.age} ${medicalCheckup?.ageUnit}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* EMP. CODE */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>EMP. CODE</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '50%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.empCode}`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Gender</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.gender}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Job Description */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Job Description</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '30%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.jobDescription}`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '30%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Department</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.department}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Present Complaints */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Present Complaints</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.presentComplaint}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Past History */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Past History</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.pastHistory}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Smoking */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Smoking</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.smoking}`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '40%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'></PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Alcohol</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.alcohol}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Other Relevant Information */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Other Relevant \n          Information`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${medicalCheckup?.otherRelInfo}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Physical Examination */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '100%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{'Physical Examination'}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Height */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Height</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.height}`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Weight</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.weight}`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>Pulse</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.pulse}`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '10%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n          }}\n        >\n          <PdfSmall textAlign='center'>BP</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.bp}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Skin */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>Skin</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.skin}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Respiratory System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Respiratory\n          System`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.respiratorySystem}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Cardiovascular */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Cardiovascular'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.cardIovascular}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Nervous System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Nervous System'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.nervousSystem}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* G.I.System */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'G.I.System'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.gISystem}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Vision */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Vision'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.vision}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Hearing */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Hearing'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.hearing}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Blood Test */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Blood Test'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.bloodTest}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Final Observation */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{'Final Observation'}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.finalObservation}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n\n      {/* Final Observation */}\n      <PdfBorderView\n        mv={0}\n        bw={1}\n        style={{flexDirection: 'row', borderTopWidth: 0}}\n      >\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '20%',\n            borderRightColor: 'gray',\n            borderRightWidth: 1,\n            paddingLeft: 5,\n          }}\n        >\n          <PdfSmall>{`Signature of\n          Medical Examiner`}</PdfSmall>\n        </PdfView>\n        <PdfView\n          mh={0}\n          p={0}\n          style={{\n            width: '80%',\n          }}\n        >\n          <PdfSmall textAlign='center'>{`${physicalExamination?.signOfMedicalExaminer}`}</PdfSmall>\n        </PdfView>\n      </PdfBorderView>\n    </>\n  );\n};\n","import React, {useState, useEffect} from 'react';\nimport dayjs from 'dayjs';\nimport _ from 'lodash';\nimport {\n  PdfHeading,\n  PdfRegular,\n  PdfMedium,\n  PdfPageNumber,\n  PdfHeader,\n  PdfSubHeader,\n  PdfView,\n  PdfBorderView,\n  PdfFooterView,\n  PdfGrid,\n  PdfSmall,\n} from '@components';\nimport {observer} from 'mobx-react';\n\ninterface PdfMedicialFitnessCertificateProps {\n  data?: any;\n}\n\nexport const PdfMedicialFitnessCertificate = observer(\n  ({data}: PdfMedicialFitnessCertificateProps) => {\n    return (\n      <PdfView>\n        <PdfSmall style={{alignSelf: 'flex-end', marginTop: -30}}>\n          {`S.NO - ${data?.srNo}`}\n        </PdfSmall>\n        <PdfMedium textAlign='center'>\n          PERFORMA FOR MEDICIAL FITNESS CERTIFICATE FOR FOOD HANDLERS\n        </PdfMedium>\n        <PdfMedium textAlign='center'>{`(FOR THE YEAR...${dayjs().format(\n          'YYYY',\n        )})`}</PdfMedium>\n        <PdfRegular textAlign='center'>\n          (see Para No. 10.1.2, Part-II, Schedule-4 of FSS Regulation, 2011)\n        </PdfRegular>\n        <PdfRegular style={{marginTop: 20}}>\n          {`It is certified that ${data?.name} Age ${data?.age} ${data?.ageUnit}  Emp.Code ${data?.empCode} is having employed with M/s Haldiram Ethnic Foods Private Limited, SPICE MALL coming in direct contact with food items has been carefully examined* by me on date ${data?.date}.`}\n        </PdfRegular>\n        <PdfRegular style={{marginTop: 20}}>\n          {\n            'Based on the medical examination conducted, he/she is found free from any infectious or communicable diseases and then person is fit to work in the above mentioned food establishment.'\n          }\n        </PdfRegular>\n\n        {/* <PdfRegular style={{marginTop: 30}}>\n          {'Typhoid Vaccine Batch No.- 876876978A, Given on 22/04/2022.'}\n        </PdfRegular>\n        <PdfRegular>\n          {'Hepatitis B Vaccine Batch No.- 8769879A, Given on 22/04/2022'}\n        </PdfRegular> */}\n        <PdfView alignItems='flex-end' mt={30}>\n          <PdfMedium fontSize={14} fontFamily='Times-Bold'>\n            Name and Signature with Seal\n          </PdfMedium>\n          <PdfRegular>{`of registered Medical Practitioner/\n          Civil Surgeon`}</PdfRegular>\n        </PdfView>\n        <PdfView style={{marginTop: 40}}>\n          <PdfRegular style={{textDecoration: 'underline'}}>\n            Medical examination to be conducted:\n          </PdfRegular>\n          <PdfView mh={15}>\n            <PdfRegular>1. Physical Examination</PdfRegular>\n            <PdfRegular>2. Eye Test</PdfRegular>\n            <PdfRegular>3. Skin examination</PdfRegular>\n            <PdfRegular>\n              4. Compliance with schedule of Vaccine to be inoculated against\n              enteric group of diseases\n            </PdfRegular>\n            <PdfRegular>\n              5. Any test required to confirm any communicable of infectious\n              disease which the person\n            </PdfRegular>\n            <PdfRegular style={{marginLeft: 12}}>\n              suspected to be suffering from on clinical examination.\n            </PdfRegular>\n          </PdfView>\n        </PdfView>\n      </PdfView>\n    );\n  },\n);\n","import React, {useState, useRef} from 'react';\nimport {\n  Page,\n  Text,\n  Document,\n  StyleSheet,\n  Font,\n  PDFViewer,\n  Image,\n  View,\n} from '@react-pdf/renderer';\nimport {decompressString} from '@/library/utils';\n\nFont.register({\n  family: 'arimaRegular',\n  src: '../../../assets/fonts/arima/Arima-Regular.ttf',\n});\n\nconst styles = StyleSheet.create({\n  page: {\n    backgroundColor: '#ffffff',\n    paddingBottom: '80pt',\n  },\n});\n\ninterface PdfTSTemp0001Props {\n  width?: string | number;\n  height?: number;\n  documentTitle?: string;\n  isToolbar?: boolean;\n  isBackgroundImage?: boolean;\n  backgroundImage?: string;\n  pageSize: any;\n  mainBoxCSS?: any;\n  children: React.ReactNode;\n}\n\nexport const PdfTSTemp0001 = ({\n  width = '100%',\n  height = 300,\n  documentTitle = 'Template Settings',\n  isToolbar = false,\n  isBackgroundImage = false,\n  backgroundImage,\n  mainBoxCSS,\n  pageSize,\n  children,\n}: PdfTSTemp0001Props) => {\n  //const [boxCSS, setBoxCSS] = useState<any>(mainBoxCSS);\n  const boxCSS = useRef<any>(styles.page);\n  if (mainBoxCSS) {\n    try {\n      boxCSS.current = eval('({' + mainBoxCSS + '})');\n    } catch (e) {\n      boxCSS.current = styles.page;\n    }\n  }\n\n  return (\n    <>\n      {isToolbar ? (\n        <PDFViewer style={{width, height}} showToolbar={isToolbar}>\n          <Document title={documentTitle}>\n            <Page size={pageSize} style={boxCSS.current}>\n              {isBackgroundImage && (\n                <View\n                  style={{\n                    position: 'absolute',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    top: 0,\n                  }}\n                  fixed={true}\n                >\n                  <Image\n                    object-fit='fill'\n                    style={{\n                      position: 'absolute',\n                      bottom: 0,\n                      left: 0,\n                      right: 0,\n                      top: 0,\n                      objectFit: 'fill',\n                    }}\n                    src={decompressString(backgroundImage || '')}\n                  />\n                </View>\n              )}\n\n              {children}\n            </Page>\n          </Document>\n        </PDFViewer>\n      ) : (\n        <div>\n          <PDFViewer style={{width, height}} showToolbar={isToolbar}>\n            <Document title={documentTitle}>\n              <Page size={pageSize} style={boxCSS.current}>\n                {isBackgroundImage && (\n                  <View\n                    style={{\n                      position: 'absolute',\n                      bottom: 0,\n                      left: 0,\n                      right: 0,\n                      top: 0,\n                    }}\n                    fixed={true}\n                  >\n                    <Image\n                      object-fit='fill'\n                      style={{\n                        position: 'absolute',\n                        bottom: 0,\n                        left: 0,\n                        right: 0,\n                        top: 0,\n                        objectFit: 'fill',\n                      }}\n                      src={decompressString(backgroundImage || '')}\n                    />\n                  </View>\n                )}\n                {children}\n              </Page>\n            </Document>\n          </PDFViewer>\n        </div>\n      )}\n    </>\n  );\n};\n"],"names":["styles","StyleSheet","table","borderColor","borderWidth","marginHorizontal","flexFlow","tableRow","flexDirection","headerBg","backgroundColor","borderStyle","tableCellHeader","margin","fontSize","fontWeight","textAlign","tableCell","textCenter","PdfTPRTemp0001List","headerFixed","data","style","headerStyle","useState","patientResultList","setPatientResultList","fields","title","width","useEffect","length","departmentList","_","o","departmentHeader","departmentName","deptKey","deptItems","panelList","panelHeader","panelDescription","panelKey","panelItems","testList","testHeader","testDescription","testKey","testItems","filter","testItem","push","testMethodDescription","testBottomMarker","testRightMarker","tpmPrintTestName","tpmTestMethod","testName","result","units","bioRefInterval","testFooter","testInterpretation","find","tpmTestInterpretation","Object","entries","panelMethodDescription","pItem","tpmPrintPanelName","tpmPanelMethod","panelFooter","panelInterpretation","tpmPanelInterpretation","departmentFooter","userInfo","item","fixed","map","index","deptItem","mh","p","mv","bw","marginLeft","panelItem","marginTop","testIndex","_item","_idx","analyteDescription","tpmAnalyteMethod","analyteMethodDescription","tpmAnalyteInterpretation","analyteMasterInterpretation","deptFooterItem","alignItems","src","signature","height","padding","fullName","userDegree","deginisation","PdfTPRTemp0001","observer","pageBranding","patientReports","setTestBottomMarker","arrDetails","details","children","rLabCode","rLabName","rLabAddress","rLabCity","cols","bg","firstName","middleName","lastName","labId","acStatus","age","ageUnits","refBy","sex","dayjs","collectionDate","format","registrationDate","reportedDate","reportStatus","position","bottom","left","templatePatientResultLabWise","endOfPage","textDecoration","endOfReport","PdfTPRTemp0002List","PdfTPRTemp0002","PdfTPRTemp0003List","setDepartmentFooter","e","userId","PdfTPRTemp0003","PdfPatientDetails","PdfResultList","images","Font","family","page","paddingBottom","PdfTemp0005","documentTitle","isToolbar","pageSize","isBackgroundImage","backgroundImage","mainBoxCSS","showToolbar","size","marginVertical","right","Fotter","color","Header","justifyContent","logos","PdfTemp0001Footer","useRef","titleCSS","subTitleCSS","footer","current","eval","subTitle","PdfTemp0001Header","headerTitleCSS","headerMainBoxCSS","imageCSS","header","logoCSS","decompressString","logoUrl","borderRadius","PdfTemp0001SubHeader","subHeader","PdfPBTemp0001","pageNumberCSS","pageNumber","window","innerHeight","templateSettings","backgroundImageBase64","isHeader","isSubHeader","isPdfPageNumber","isFooter","ADCMedicalReportPdf","boxCSS","PdfMedicalCheckup","isBreak","borderRightColor","borderRightWidth","paddingLeft","borderTopWidth","PdfMedicialFitnessCertificate","alignSelf","mt","fontFamily","ADCWithoutHeaderFooterPdf","resultList","value","unit","normalValue","ADCPdf","PdfTemp0004","PdfTemp0006","isWithHeaderFooter","Document","Page","PdfSmall","srNo","name","ageUnit","empCode","date","PdfTSTemp0001","top","objectFit"],"sourceRoot":""}